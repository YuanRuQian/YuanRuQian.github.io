<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lydia Yuan&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-09-29T15:14:37.163Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Lydia Yuan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一道笔试题：JS模版字符串替换</title>
    <link href="http://yoursite.com/2020/09/29/%E4%B8%80%E9%81%93%E7%AC%94%E8%AF%95%E9%A2%98%EF%BC%9AJS%E6%A8%A1%E7%89%88%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9B%BF%E6%8D%A2/"/>
    <id>http://yoursite.com/2020/09/29/%E4%B8%80%E9%81%93%E7%AC%94%E8%AF%95%E9%A2%98%EF%BC%9AJS%E6%A8%A1%E7%89%88%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9B%BF%E6%8D%A2/</id>
    <published>2020-09-29T14:49:48.000Z</published>
    <updated>2020-09-29T15:14:37.163Z</updated>
    
    <content type="html"><![CDATA[<p>今晚金山WPS笔试又双叒叕遇到了 还算挺高频的笔试题8</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;The final answer is :&#123;&#123;finalAnswer&#125;&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> obj = &#123; <span class="attr">finalAnswer</span> : <span class="string">&#x27;42&#x27;</span>&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(render(str,obj));</span><br><span class="line"><span class="comment">// 要求输出：The final answer is :42</span></span><br></pre></td></tr></table></figure><p>整理一下思路好了（ 菜鸡落泪.jpg</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> render = <span class="function">(<span class="params">str, obj</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> s = str;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">        <span class="keyword">const</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;&#123;&#123;&#x27;</span>+key+<span class="string">&#x27;&#125;&#125;&#x27;</span>,<span class="string">&#x27;g&#x27;</span>);</span><br><span class="line">        s = s.replace(reg,obj[key]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试： <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;The final answer is :&#123;&#123;finalAnswer&#125;&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> obj = &#123; <span class="attr">finalAnswer</span> : <span class="string">&#x27;42&#x27;</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> render = <span class="function">(<span class="params">str, obj</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> s = str;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">        <span class="keyword">const</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;&#123;&#123;&#x27;</span>+key+<span class="string">&#x27;&#125;&#125;&#x27;</span>,<span class="string">&#x27;g&#x27;</span>);</span><br><span class="line">        s = s.replace(reg,obj[key]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(render(str,obj));</span><br><span class="line"><span class="comment">// The final answer is :42 </span></span><br></pre></td></tr></table></figure></p><p>之前的想法是先正则提取 符合 <code>&#123;&#123;xxx&#125;&#125;</code> 格式的 然后取 <code>$n</code> 替换 还是 naïve 叻 明显给定的 key 比手撕一个 全局匹配 <code>&#123;&#123;xxx&#125;&#125;</code> 的简单点不是吗（逃</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今晚金山WPS笔试又双叒叕遇到了 还算挺高频的笔试题8&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;s
      
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>由一道面试题看promise</title>
    <link href="http://yoursite.com/2020/09/16/%E7%94%B1%E4%B8%80%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9C%8Bpromise/"/>
    <id>http://yoursite.com/2020/09/16/%E7%94%B1%E4%B8%80%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9C%8Bpromise/</id>
    <published>2020-09-16T03:55:41.000Z</published>
    <updated>2020-09-16T04:00:34.496Z</updated>
    
    <content type="html"><![CDATA[<blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">            resolve();</span><br><span class="line">            reject()</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        promise.then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="number">3</span>);</span><br><span class="line">        &#125;,() =&gt; &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"失败的状态"</span>)</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">4</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><p>⬆️ 这是原题目</p><p>输出顺序为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><p>因为 promise 只有三个状态</p><p><code>pending</code> , <code>fulfilled</code> , <code>rejected</code></p><p>且 <code>pending</code> 变为任意后两者后 状态不会再改变</p><p>故此处先变为 <code>fulfilled</code> 后 <code>reject()</code> 无效</p><p>所以 <code>then</code> 回调还是会调用 <code>resolve()</code> 的对应输出 <code>console.log(3);</code></p><p>同理 如果我们调换一下顺序</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">    reject();</span><br><span class="line">    resolve();</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">promise.then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">3</span>);</span><br><span class="line">&#125;,() =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"失败的状态"</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">4</span>);</span><br></pre></td></tr></table></figure><p>此时的输出就是</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line">失败的状态</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/sp
      
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>数组去重方法梳理</title>
    <link href="http://yoursite.com/2020/09/16/%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E6%96%B9%E6%B3%95%E6%A2%B3%E7%90%86/"/>
    <id>http://yoursite.com/2020/09/16/%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E6%96%B9%E6%B3%95%E6%A2%B3%E7%90%86/</id>
    <published>2020-09-16T03:32:28.000Z</published>
    <updated>2020-09-16T03:40:49.437Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>测试数组：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>]; </span><br></pre></td></tr></table></figure></blockquote><h3 id="es6-set-方法"><a class="markdownIt-Anchor" href="#es6-set-方法"></a> ES6 Set 方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> noRepeat = <span class="function">(<span class="params">arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Array</span>.from(<span class="keyword">new</span> <span class="built_in">Set</span>(arr));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="filter-方法"><a class="markdownIt-Anchor" href="#filter-方法"></a> Filter 方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> noRepeat2 = <span class="function">(<span class="params">arr</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">return</span> arr.filter(<span class="function">(<span class="params">item,index</span>)=&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> arr.indexOf(item)===index;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="object-key-不可重复"><a class="markdownIt-Anchor" href="#object-key-不可重复"></a> Object key 不可重复</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> noReapeat3 = <span class="function">(<span class="params">arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> obj = &#123;&#125;;</span><br><span class="line">  <span class="keyword">return</span> arr.filter( <span class="function"><span class="params">ele</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> obj.hasOwnProperty(<span class="keyword">typeof</span> ele + ele) ? <span class="literal">false</span>: (obj[<span class="keyword">typeof</span> ele + ele] = <span class="literal">true</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;测试数组：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;
      
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>数组扁平化方法梳理</title>
    <link href="http://yoursite.com/2020/09/16/%E6%95%B0%E7%BB%84%E6%89%81%E5%B9%B3%E5%8C%96%E6%96%B9%E6%B3%95%E6%A2%B3%E7%90%86/"/>
    <id>http://yoursite.com/2020/09/16/%E6%95%B0%E7%BB%84%E6%89%81%E5%B9%B3%E5%8C%96%E6%96%B9%E6%B3%95%E6%A2%B3%E7%90%86/</id>
    <published>2020-09-16T02:55:43.000Z</published>
    <updated>2020-09-16T03:16:16.182Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>测试数组:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,[<span class="number">2</span>,[<span class="number">3</span>,[<span class="number">4</span>]]]];</span><br></pre></td></tr></table></figure></blockquote><h3 id="转为-string">转为 string</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> flatten = <span class="function">(<span class="params">arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">String</span>(arr).split(<span class="string">','</span>).map(<span class="built_in">Number</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用 string 的特性</p><p>⚠️ 注意返回值为 string , 需要转化为 number</p><h3 id="递归">递归</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> flatten2 = <span class="function">(<span class="params">arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> arr.reduce(<span class="function">(<span class="params">accumulator, currentValue</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> accumulator.concat(<span class="built_in">Array</span>.isArray(currentValue)?flatten2(currentValue):currentValue);</span><br><span class="line">    &#125;,[]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;测试数组:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;
      
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 1315. Sum of Nodes with Even-Valued Grandparent</title>
    <link href="http://yoursite.com/2020/08/29/LeetCode-1315-Sum-of-Nodes-with-Even-Valued-Grandparent/"/>
    <id>http://yoursite.com/2020/08/29/LeetCode-1315-Sum-of-Nodes-with-Even-Valued-Grandparent/</id>
    <published>2020-08-29T03:41:52.000Z</published>
    <updated>2020-08-29T03:43:32.523Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Given a binary tree, return the sum of values of nodes with even-valued grandparent. (A <em>grandparent</em> of a node is the parent of its parent, if it exists.)</p><p>If there are no nodes with an even-valued grandparent, return <code>0</code>.</p><p><strong>Example 1:</strong></p><p><strong><img src="https://assets.leetcode.com/uploads/2019/07/24/1473_ex1.png" alt="img" /></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: root &#x3D; [6,7,8,2,7,1,3,9,null,1,4,null,null,null,5]</span><br><span class="line">Output: 18</span><br><span class="line">Explanation: The red nodes are the nodes with even-value grandparent while the blue nodes are the even-value grandparents.</span><br></pre></td></tr></table></figure><p><strong>Constraints:</strong></p><ul><li>The number of nodes in the tree is between <code>1</code> and <code>10^4</code>.</li><li>The value of nodes is between <code>1</code> and <code>100</code>.</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * function TreeNode(val, left, right) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = (val===undefined ? 0 : val)</span></span><br><span class="line"><span class="comment"> *     this.left = (left===undefined ? null : left)</span></span><br><span class="line"><span class="comment"> *     this.right = (right===undefined ? null : right)</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;TreeNode&#125;</span> <span class="variable">root</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;number&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> sumEvenGrandparent = <span class="function">(<span class="params">root</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> dfs(root,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">  <span class="comment">// start from root so the parent &amp; grand parent nodes do not exist ! just assign some random odd values</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> dfs = <span class="function">(<span class="params">root,parent,grandparent</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(!root) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> dfs(root.left,root.val,parent) + dfs(root.right,root.val,parent)+(grandparent%<span class="number">2</span>===<span class="number">0</span>?root.val:<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Given a binary tree, return the sum of values of nodes with even-valued grandparent. (A &lt;em&gt;grandparent&lt;/em&gt; of a node is th
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>JS 将数字转换为货币形式</title>
    <link href="http://yoursite.com/2020/08/16/JS-%E5%B0%86%E6%95%B0%E5%AD%97%E8%BD%AC%E6%8D%A2%E4%B8%BA%E8%B4%A7%E5%B8%81%E5%BD%A2%E5%BC%8F/"/>
    <id>http://yoursite.com/2020/08/16/JS-%E5%B0%86%E6%95%B0%E5%AD%97%E8%BD%AC%E6%8D%A2%E4%B8%BA%E8%B4%A7%E5%B8%81%E5%BD%A2%E5%BC%8F/</id>
    <published>2020-08-16T09:02:40.000Z</published>
    <updated>2020-08-16T12:37:52.333Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>将各种数字整数部分转换为三个数字一个逗号隔断的形式</p><p>比如 : 111111 =&gt; 111,111</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">string res;</span><br><span class="line">        int n &#x3D; num.size(), keep &#x3D; n - k;</span><br><span class="line">        for (char c : num) &#123;</span><br><span class="line">            while (k &amp;&amp; res.size() &amp;&amp; res.back() &gt; c) &#123;</span><br><span class="line">                res.pop_back();</span><br><span class="line">                --k;</span><br><span class="line">            &#125;</span><br><span class="line">            if (res.size() || c !&#x3D; &#39;0&#39;) res.push_back(c);</span><br><span class="line">        &#125;</span><br><span class="line">        while (res.size() &amp;&amp; k--) res.pop_back();</span><br><span class="line">        return res.empty() ? &quot;0&quot; : res;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;将各种数字整数部分转换为三个数字一个逗号隔断的形式&lt;/p&gt;
&lt;p&gt;比如 : 111111 =&amp;gt; 111,111&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td 
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>JS 词法作用域</title>
    <link href="http://yoursite.com/2020/08/16/JS-%E8%AF%8D%E6%B3%95%E4%BD%9C%E7%94%A8%E5%9F%9F/"/>
    <id>http://yoursite.com/2020/08/16/JS-%E8%AF%8D%E6%B3%95%E4%BD%9C%E7%94%A8%E5%9F%9F/</id>
    <published>2020-08-16T02:56:05.000Z</published>
    <updated>2020-08-16T07:34:44.475Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> value = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'foo:'</span>,value,<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> value = <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'bar:'</span>,value,<span class="keyword">this</span>);</span><br><span class="line">    foo();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bar();</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bar: 2 Window &#123;parent: Window, opener: null, top: Window, length: 0, frames: Window, …&#125;</span><br><span class="line">foo: 1 Window &#123;parent: Window, opener: null, top: Window, length: 0, frames: Window, …&#125;</span><br></pre></td></tr></table></figure><p>执行 foo 函数会先从 foo 函数内部查找是否有局部变量 value</p><p>如果没有就查找上面一层的代码 全局 window 也就是 value 等于 1</p><p>bar 函数 内部 有 value = 2 所以执行 bar 会输出 2</p><p><em>JS是静态词法作用域</em></p><p>如果是动态的词法作用域 如 bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">value=1</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">foo</span></span> () &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$value</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">bar</span></span> () &#123;</span><br><span class="line">    <span class="built_in">local</span> value=2;</span><br><span class="line">    foo;</span><br><span class="line">&#125;</span><br><span class="line">bar</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yuanruqian@lydia ~ % bash scope.bash</span><br><span class="line">2</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = &#123;</span><br><span class="line">name :<span class="number">1</span>,</span><br><span class="line">b:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name++;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.name</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'a.b():'</span>,a.b())</span><br><span class="line"><span class="keyword">var</span> c = a.b</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'c():'</span>,c())</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 输出</span></span><br><span class="line">a.b(): <span class="number">2</span></span><br><span class="line">c(): <span class="number">2</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span 
      
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>公平洗牌算法</title>
    <link href="http://yoursite.com/2020/08/08/%E5%85%AC%E5%B9%B3%E6%B4%97%E7%89%8C%E7%AE%97%E6%B3%95/"/>
    <id>http://yoursite.com/2020/08/08/%E5%85%AC%E5%B9%B3%E6%B4%97%E7%89%8C%E7%AE%97%E6%B3%95/</id>
    <published>2020-08-08T07:01:54.000Z</published>
    <updated>2020-08-08T07:15:01.597Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>每一位上出现某个元素的概率都相等</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">JustCardShifting</span>(<span class="params">cards</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> N = cards.length;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'original:'</span>,cards);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i=N<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) &#123;</span><br><span class="line">    <span class="keyword">const</span> rand = <span class="built_in">Math</span>.floor(i*<span class="built_in">Math</span>.random())</span><br><span class="line">    <span class="built_in">console</span>.log(rand)</span><br><span class="line">    [cards[i],cards[rand]]=[cards[rand],cards[i]]</span><br><span class="line">&#125;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'after:'</span>,cards)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">9</span>,<span class="number">23</span>,<span class="number">1</span>,<span class="number">63</span>,<span class="number">4</span>,<span class="number">1</span>]</span><br><span class="line">JustCardShifting(arr)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;每一位上出现某个元素的概率都相等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line
      
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>实现一个简单的红绿灯</title>
    <link href="http://yoursite.com/2020/08/08/%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E7%BA%A2%E7%BB%BF%E7%81%AF/"/>
    <id>http://yoursite.com/2020/08/08/%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E7%BA%A2%E7%BB%BF%E7%81%AF/</id>
    <published>2020-08-08T05:23:49.000Z</published>
    <updated>2020-08-08T07:00:40.583Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>打印red，停1s,打印yellow,停2s,打印green,停4s</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// async await</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sleep</span>(<span class="params">duration</span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">setTimeout(resolve, duration);</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">changeColor</span>(<span class="params">color, duration</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'traffic-light '</span>, color);</span><br><span class="line"><span class="keyword">await</span> sleep(duration);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> i=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> (i++<span class="xml"><span class="tag">&lt;<span class="name">5)</span> &#123;</span></span></span><br><span class="line"><span class="xml">await changeColor('red', 1000);</span></span><br><span class="line"><span class="xml">await changeColor('yellow', 2000);</span></span><br><span class="line"><span class="xml">await changeColor('green', 4000);</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">show()</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;打印red，停1s,打印yellow,停2s,打印green,停4s&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre
      
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>QQ8 数字转换机</title>
    <link href="http://yoursite.com/2020/08/05/QQ8-%E6%95%B0%E5%AD%97%E8%BD%AC%E6%8D%A2%E6%9C%BA/"/>
    <id>http://yoursite.com/2020/08/05/QQ8-%E6%95%B0%E5%AD%97%E8%BD%AC%E6%8D%A2%E6%9C%BA/</id>
    <published>2020-08-05T15:21:18.000Z</published>
    <updated>2020-08-05T15:45:06.457Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>小Q从牛博士那里获得了一个数字转换机，这台数字转换机必须同时输入两个正数a和b，并且这台数字转换机有一个红色的按钮和一个蓝色的按钮：</p><p>当按下了红色按钮，两个数字同时加1。</p><p>当按下了蓝色按钮，两个数字同时乘2。</p><p>小Q现在手中有四个整数a，b，A，B，他希望将输入的两个整数a和b变成A，B（a对应A，b对应B）。因为牛博士允许小Q使用数字转换机的时间有限，所以小Q希望按动按钮的次数越少越好。请你帮帮小Q吧。</p><h2 id="输入描述">输入描述:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入包括一行，一行中有四个正整数a，b，A，B，（1≤a，b，A，B≤10^9）。</span><br></pre></td></tr></table></figure><h2 id="输出描述">输出描述:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果小Q可以完成转换，输出最少需要按动按钮的次数，否则输出-1。</span><br></pre></td></tr></table></figure><p>示例1</p><h2 id="输入">输入</h2><p><a href="javascript:void(0);">复制</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">100 1000 202 2002</span><br></pre></td></tr></table></figure><h2 id="输出">输出</h2><p><a href="javascript:void(0);">复制</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = readline().split(<span class="string">' '</span>).map( <span class="function"><span class="params">e</span> =&gt;</span> <span class="built_in">parseInt</span>(e));</span><br><span class="line"><span class="keyword">let</span> a = arr[<span class="number">0</span>], b = arr[<span class="number">1</span>], A = arr[<span class="number">2</span>], B = arr[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">let</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(A&gt;a &amp;&amp; B&gt;b) &#123;</span><br><span class="line">    <span class="keyword">if</span>( (A&amp;<span class="number">1</span>+B&amp;<span class="number">1</span>)===<span class="number">0</span> &amp;&amp; A/<span class="number">2</span>&gt;=a &amp;&amp; B/<span class="number">2</span>&gt;=b ) &#123;</span><br><span class="line">        A = A/<span class="number">2</span>;</span><br><span class="line">        B = B/<span class="number">2</span>;</span><br><span class="line">        res++;</span><br><span class="line">        <span class="comment">// 乘法变化肯定比加1大 首选乘法 典型贪心</span></span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(A&gt;a &amp;&amp; B&gt;b)&#123;</span><br><span class="line">       A--;</span><br><span class="line">       B--;</span><br><span class="line">       res++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log((A===a &amp;&amp; B===b) ? res : <span class="number">-1</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;小Q从牛博士那里获得了一个数字转换机，这台数字转换机必须同时输入两个正数a和b，并且这台数字转换机有一个红色的按钮和一个蓝色的按钮：&lt;/p&gt;
&lt;p&gt;当按下了红色按钮，两个数字同时加1。&lt;/p&gt;
&lt;p&gt;当按下了蓝色按钮，两个数字同时乘2。&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 213. House Robber II</title>
    <link href="http://yoursite.com/2020/08/04/LeetCode-213-House-Robber-II/"/>
    <id>http://yoursite.com/2020/08/04/LeetCode-213-House-Robber-II/</id>
    <published>2020-08-04T15:39:24.000Z</published>
    <updated>2020-08-04T15:44:45.120Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed. All houses at this place are <strong>arranged in a circle.</strong> That means the first house is the neighbor of the last one. Meanwhile, adjacent houses have security system connected and <strong>it will automatically contact the police if two adjacent houses were broken into on the same night</strong>.</p><p>Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight <strong>without alerting the police</strong>.</p><p><strong>Example 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Input: [2,3,2]</span><br><span class="line">Output: 3</span><br><span class="line">Explanation: You cannot rob house 1 (money &#x3D; 2) and then rob house 3 (money &#x3D; 2),</span><br><span class="line">             because they are adjacent houses.</span><br></pre></td></tr></table></figure><p><strong>Example 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Input: [1,2,3,1]</span><br><span class="line">Output: 4</span><br><span class="line">Explanation: Rob house 1 (money &#x3D; 1) and then rob house 3 (money &#x3D; 3).</span><br><span class="line">             Total amount you can rob &#x3D; 1 + 3 &#x3D; 4.</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// DFS</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number[]&#125;</span> <span class="variable">nums</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;number&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> rob = <span class="function">(<span class="params">nums</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (nums.length === <span class="number">0</span>)  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (nums.length === <span class="number">1</span>)  <span class="keyword">return</span> nums[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">const</span> map1 = <span class="keyword">new</span> <span class="built_in">Map</span>();</span><br><span class="line">    <span class="keyword">const</span> map2 = <span class="keyword">new</span> <span class="built_in">Map</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.max(findHouses(nums.slice(<span class="number">1</span>),<span class="number">0</span>,map1),findHouses(nums.slice(<span class="number">0</span>,<span class="number">-1</span>),<span class="number">0</span>,map2));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// let arr = [1,2,3];</span></span><br><span class="line"><span class="comment">// arr.slice(1)</span></span><br><span class="line"><span class="comment">// (2) [2, 3]</span></span><br><span class="line"><span class="comment">// arr.slice(0,-1)</span></span><br><span class="line"><span class="comment">// (2) [1,2]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> findHouses = <span class="function">(<span class="params">nums,i,mem</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (i &gt;= nums.length)   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (!mem.has(i)) &#123;</span><br><span class="line">    mem.set(i,<span class="built_in">Math</span>.max(nums[i]+findHouses(nums,i+<span class="number">2</span>,mem), findHouses(nums,i+<span class="number">1</span>,mem)));</span><br><span class="line">      <span class="comment">// either you rob this one and skip the next one or you go straight to the next one</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> mem.get(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed. All h
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>KS22 求连续子数组的最大和</title>
    <link href="http://yoursite.com/2020/08/03/KS22-%E6%B1%82%E8%BF%9E%E7%BB%AD%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C/"/>
    <id>http://yoursite.com/2020/08/03/KS22-%E6%B1%82%E8%BF%9E%E7%BB%AD%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C/</id>
    <published>2020-08-03T15:25:17.000Z</published>
    <updated>2020-08-03T15:26:35.930Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h2 id="题目描述">题目描述</h2><p>一个非空整数数组，选择其中的两个位置，使得两个位置之间的数和最大。</p><p>如果最大的和为正数，则输出这个数；如果最大的和为负数或0，则输出0</p><h2 id="输入描述">输入描述:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3,-5,7,-2,8</span><br></pre></td></tr></table></figure><h2 id="输出描述">输出描述:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">13</span><br></pre></td></tr></table></figure><p>示例1</p><h2 id="输入">输入</h2><p><a href="javascript:void(0);">复制</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-6,-9,-10</span><br></pre></td></tr></table></figure><h2 id="输出">输出</h2><p><a href="javascript:void(0);">复制</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 好明显的贪心 😂</span></span><br><span class="line"><span class="keyword">let</span> arr = readline().split(<span class="string">','</span>).map(<span class="function"><span class="params">e</span> =&gt;</span> <span class="built_in">parseInt</span>(e));</span><br><span class="line"><span class="keyword">let</span> sum = <span class="number">0</span>, max = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> num <span class="keyword">of</span> arr) &#123;</span><br><span class="line">    sum += num;</span><br><span class="line">    max = <span class="built_in">Math</span>.max(max,sum);</span><br><span class="line">    sum = <span class="built_in">Math</span>.max(<span class="number">0</span>,sum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(max);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;题目描述&lt;/h2&gt;
&lt;p&gt;一个非空整数数组，选择其中的两个位置，使得两个位置之间的数和最大。&lt;/p&gt;
&lt;p&gt;如果最大的和为正数，则输出这个数；如果最大的和为负数或0，则输出0&lt;/p&gt;
&lt;h2 id=&quot;输入描述&quot;&gt;输入描述:&lt;/
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 99. Recover Binary Search Tree</title>
    <link href="http://yoursite.com/2020/08/02/LeetCode-99-Recover-Binary-Search-Tree-1/"/>
    <id>http://yoursite.com/2020/08/02/LeetCode-99-Recover-Binary-Search-Tree-1/</id>
    <published>2020-08-02T07:39:04.000Z</published>
    <updated>2020-08-02T07:48:20.711Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Two elements of a binary search tree (BST) are swapped by mistake.</p><p>Recover the tree without changing its structure.</p><p><strong>Example 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Input: [1,3,null,null,2]</span><br><span class="line"></span><br><span class="line">   1</span><br><span class="line">  &#x2F;</span><br><span class="line"> 3</span><br><span class="line">  \</span><br><span class="line">   2</span><br><span class="line"></span><br><span class="line">Output: [3,1,null,null,2]</span><br><span class="line"></span><br><span class="line">   3</span><br><span class="line">  &#x2F;</span><br><span class="line"> 1</span><br><span class="line">  \</span><br><span class="line">   2</span><br></pre></td></tr></table></figure><p><strong>Example 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Input: [3,1,4,null,null,2]</span><br><span class="line"></span><br><span class="line">  3</span><br><span class="line"> &#x2F; \</span><br><span class="line">1   4</span><br><span class="line">   &#x2F;</span><br><span class="line">  2</span><br><span class="line"></span><br><span class="line">Output: [2,1,4,null,null,3]</span><br><span class="line"></span><br><span class="line">  2</span><br><span class="line"> &#x2F; \</span><br><span class="line">1   4</span><br><span class="line">   &#x2F;</span><br><span class="line">  3</span><br></pre></td></tr></table></figure><p><strong>Follow up:</strong></p><ul><li>A solution using O(<em>n</em>) space is pretty straight forward.</li><li>Could you devise a constant space solution?</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * function TreeNode(val, left, right) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = (val===undefined ? 0 : val)</span></span><br><span class="line"><span class="comment"> *     this.left = (left===undefined ? null : left)</span></span><br><span class="line"><span class="comment"> *     this.right = (right===undefined ? null : right)</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;TreeNode&#125;</span> <span class="variable">root</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;void&#125;</span> </span>Do not return anything, modify root in-place instead.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> recoverTree = <span class="function">(<span class="params">root</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> node1 = <span class="literal">null</span>, node2 = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">let</span> prev = <span class="keyword">new</span> TreeNode(-<span class="literal">Infinity</span>);</span><br><span class="line">  <span class="keyword">let</span> traverse = <span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!node) <span class="keyword">return</span>;</span><br><span class="line">    traverse(node.left);</span><br><span class="line">    <span class="keyword">if</span> (node.val &lt; prev.val) &#123;</span><br><span class="line">      node2 = node;</span><br><span class="line">      <span class="keyword">if</span> (!node1) node1 = prev;</span><br><span class="line">    &#125;</span><br><span class="line">    prev = node;</span><br><span class="line">    traverse(node.right);</span><br><span class="line">  &#125;</span><br><span class="line">  traverse(root);</span><br><span class="line">  [node1.val, node2.val] = [node2.val, node1.val];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Two elements of a binary search tree (BST) are swapped by mistake.&lt;/p&gt;
&lt;p&gt;Recover the tree without changing its structure.&lt;/
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 99. Recover Binary Search Tree</title>
    <link href="http://yoursite.com/2020/08/02/LeetCode-99-Recover-Binary-Search-Tree/"/>
    <id>http://yoursite.com/2020/08/02/LeetCode-99-Recover-Binary-Search-Tree/</id>
    <published>2020-08-02T06:51:41.000Z</published>
    <updated>2020-08-02T06:51:41.348Z</updated>
    
    <content type="html"><![CDATA[]]></content>
    
    <summary type="html">
    
      
      
        

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>LeetCode 729. My Calendar I</title>
    <link href="http://yoursite.com/2020/08/02/LeetCode-729-My-Calendar-I/"/>
    <id>http://yoursite.com/2020/08/02/LeetCode-729-My-Calendar-I/</id>
    <published>2020-08-02T04:41:10.000Z</published>
    <updated>2020-08-02T14:29:54.941Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Implement a <code>MyCalendar</code> class to store your events. A new event can be added if adding the event will not cause a double booking.</p><p>Your class will have the method, <code>book(int start, int end)</code>. Formally, this represents a booking on the half open interval <code>[start, end)</code>, the range of real numbers <code>x</code> such that <code>start &lt;= x &lt; end</code>.</p><p>A <em>double booking</em> happens when two events have some non-empty intersection (ie., there is some time that is common to both events.)</p><p>For each call to the method <code>MyCalendar.book</code>, return <code>true</code> if the event can be added to the calendar successfully without causing a double booking. Otherwise, return <code>false</code> and do not add the event to the calendar.</p><p>Your class will be called like this: <code>MyCalendar cal = new MyCalendar();</code> <code>MyCalendar.book(start, end)</code></p><p><strong>Example 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MyCalendar();</span><br><span class="line">MyCalendar.book(10, 20); &#x2F;&#x2F; returns true</span><br><span class="line">MyCalendar.book(15, 25); &#x2F;&#x2F; returns false</span><br><span class="line">MyCalendar.book(20, 30); &#x2F;&#x2F; returns true</span><br><span class="line">Explanation: </span><br><span class="line">The first event can be booked.  The second can&#39;t because time 15 is already booked by another event.</span><br><span class="line">The third event can be booked, as the first event takes every time less than 20, but not including 20.</span><br></pre></td></tr></table></figure><p><strong>Note:</strong></p><ul><li>The number of calls to <code>MyCalendar.book</code> per test case will be at most <code>1000</code>.</li><li>In calls to <code>MyCalendar.book(start, end)</code>, <code>start</code> and <code>end</code> are integers in the range <code>[0, 10^9]</code>.</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> MyCalendar = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.root = <span class="literal">null</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Node</span>(<span class="params">start,end</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.start = start;</span><br><span class="line">    <span class="keyword">this</span>.end = end;</span><br><span class="line">    <span class="keyword">this</span>.left = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">this</span>.right = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> </span>start </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> <span class="variable">end</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;boolean&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">MyCalendar.prototype.book = <span class="function"><span class="keyword">function</span>(<span class="params">start, end</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">this</span>.root) &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">this</span>.root = <span class="keyword">new</span> Node(start, end);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> record = <span class="function">(<span class="params">start, end, root</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(root.end&lt;=start)&#123;</span><br><span class="line">                <span class="keyword">if</span>(root.right) <span class="keyword">return</span> record(start, end, root.right);</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> root.right = <span class="keyword">new</span> Node(start, end);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(root.start&gt;=end)&#123;</span><br><span class="line">                <span class="keyword">if</span>(root.left) <span class="keyword">return</span> record(start, end, root.left);</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> root.left = <span class="keyword">new</span> Node(start, end);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;    </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> record(start, end, <span class="keyword">this</span>.root);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Your MyCalendar object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * var obj = new MyCalendar()</span></span><br><span class="line"><span class="comment"> * var param_1 = obj.book(start,end)</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Implement a &lt;code&gt;MyCalendar&lt;/code&gt; class to store your events. A new event can be added if adding the event will not cause 
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 732. My Calendar III</title>
    <link href="http://yoursite.com/2020/08/02/LeetCode-732-My-Calendar-III/"/>
    <id>http://yoursite.com/2020/08/02/LeetCode-732-My-Calendar-III/</id>
    <published>2020-08-02T01:01:42.000Z</published>
    <updated>2020-08-02T04:41:37.900Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Implement a <code>MyCalendarThree</code> class to store your events. A new event can <strong>always</strong> be added.</p><p>Your class will have one method, <code>book(int start, int end)</code>. Formally, this represents a booking on the half open interval <code>[start, end)</code>, the range of real numbers <code>x</code> such that <code>start &lt;= x &lt; end</code>.</p><p>A <em>K-booking</em> happens when <strong>K</strong> events have some non-empty intersection (ie., there is some time that is common to all K events.)</p><p>For each call to the method <code>MyCalendar.book</code>, return an integer <code>K</code> representing the largest integer such that there exists a <code>K</code>-booking in the calendar.</p><p>Your class will be called like this: <code>MyCalendarThree cal = new MyCalendarThree();</code> <code>MyCalendarThree.book(start, end)</code></p><p><strong>Example 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">MyCalendarThree();</span><br><span class="line">MyCalendarThree.book(10, 20); &#x2F;&#x2F; returns 1</span><br><span class="line">MyCalendarThree.book(50, 60); &#x2F;&#x2F; returns 1</span><br><span class="line">MyCalendarThree.book(10, 40); &#x2F;&#x2F; returns 2</span><br><span class="line">MyCalendarThree.book(5, 15); &#x2F;&#x2F; returns 3</span><br><span class="line">MyCalendarThree.book(5, 10); &#x2F;&#x2F; returns 3</span><br><span class="line">MyCalendarThree.book(25, 55); &#x2F;&#x2F; returns 3</span><br><span class="line">Explanation: </span><br><span class="line">The first two events can be booked and are disjoint, so the maximum K-booking is a 1-booking.</span><br><span class="line">The third event [10, 40) intersects the first event, and the maximum K-booking is a 2-booking.</span><br><span class="line">The remaining events cause the maximum K-booking to be only a 3-booking.</span><br><span class="line">Note that the last event locally causes a 2-booking, but the answer is still 3 because</span><br><span class="line">eg. [10, 20), [10, 40), and [5, 15) are still triple booked.</span><br></pre></td></tr></table></figure><p><strong>Note:</strong></p><ul><li>The number of calls to <code>MyCalendarThree.book</code> per test case will be at most <code>400</code>.</li><li>In calls to <code>MyCalendarThree.book(start, end)</code>, <code>start</code> and <code>end</code> are integers in the range <code>[0, 10^9]</code>.</li></ul></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyCalendarThree</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    MyCalendarThree() &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; count = &#123;&#123;<span class="number">-1</span>, <span class="number">0</span>&#125;&#125;;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">book</span><span class="params">(<span class="keyword">int</span> s, <span class="keyword">int</span> e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">auto</span> start = count.emplace(s, (--count.upper_bound(s))-&gt;second);</span><br><span class="line">        <span class="keyword">auto</span> <span class="built_in">end</span> = count.emplace(e, (--count.upper_bound(e))-&gt;second);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> i = start.first; i != <span class="built_in">end</span>.first; ++i)</span><br><span class="line">            res = <span class="built_in">max</span>(res, ++(i-&gt;second));</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Your MyCalendarThree object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * MyCalendarThree* obj = new MyCalendarThree();</span></span><br><span class="line"><span class="comment"> * int param_1 = obj-&gt;book(start,end);</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Implement a &lt;code&gt;MyCalendarThree&lt;/code&gt; class to store your events. A new event can &lt;strong&gt;always&lt;/strong&gt; be added.&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 208. Implement Trie (Prefix Tree)</title>
    <link href="http://yoursite.com/2020/08/01/LeetCode-720-Longest-Word-in-Dictionary/"/>
    <id>http://yoursite.com/2020/08/01/LeetCode-720-Longest-Word-in-Dictionary/</id>
    <published>2020-08-01T01:05:40.000Z</published>
    <updated>2020-08-01T01:58:15.787Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Implement a trie with <code>insert</code>, <code>search</code>, and <code>startsWith</code> methods.</p><p><strong>Example:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Trie trie &#x3D; new Trie();</span><br><span class="line"></span><br><span class="line">trie.insert(&quot;apple&quot;);</span><br><span class="line">trie.search(&quot;apple&quot;);   &#x2F;&#x2F; returns true</span><br><span class="line">trie.search(&quot;app&quot;);     &#x2F;&#x2F; returns false</span><br><span class="line">trie.startsWith(&quot;app&quot;); &#x2F;&#x2F; returns true</span><br><span class="line">trie.insert(&quot;app&quot;);   </span><br><span class="line">trie.search(&quot;app&quot;);     &#x2F;&#x2F; returns true</span><br></pre></td></tr></table></figure><p><strong>Note:</strong></p><ul><li>You may assume that all inputs are consist of lowercase letters <code>a-z</code>.</li><li>All inputs are guaranteed to be non-empty strings.</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string[]&#125;</span> <span class="variable">words</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;string&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> longestWord = <span class="function"><span class="keyword">function</span>(<span class="params">words</span>) </span>&#123;</span><br><span class="line">    words.sort();</span><br><span class="line">  <span class="comment">// [ 'w', 'wo', 'wor', 'worl', 'world' ]</span></span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">set</span> = new Set(words);</span><br><span class="line">    let res = '';</span><br><span class="line">    for(let w of words) &#123;</span><br><span class="line">        <span class="keyword">let</span> valid = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">let</span> key = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;w.length;i++) &#123;</span><br><span class="line">            key += w[i];</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">set</span>.has(key)) &#123;</span><br><span class="line">                valid = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (valid &amp;&amp; w.length &gt; res.length) &#123;</span><br><span class="line">            res = w</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Implement a trie with &lt;code&gt;insert&lt;/code&gt;, &lt;code&gt;search&lt;/code&gt;, and &lt;code&gt;startsWith&lt;/code&gt; methods.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example:
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>ZJ27 字典序</title>
    <link href="http://yoursite.com/2020/07/31/ZJ27-%E5%AD%97%E5%85%B8%E5%BA%8F/"/>
    <id>http://yoursite.com/2020/07/31/ZJ27-%E5%AD%97%E5%85%B8%E5%BA%8F/</id>
    <published>2020-07-31T14:01:31.000Z</published>
    <updated>2020-07-31T14:58:04.113Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h2 id="题目描述">题目描述</h2><p>给定整数n和m, 将1到n的这n个整数按字典序排列之后, 求其中的第m个数。 对于n=11, m=4, 按字典序排列依次为1, 10, 11, 2, 3, 4, 5, 6, 7, 8, 9, 因此第4个数是2. 对于n=200, m=25, 按字典序排列依次为因此第25个数是120…</p><h2 id="输入描述">输入描述:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">输入仅包含两个整数n和m。</span><br><span class="line"></span><br><span class="line">数据范围: </span><br><span class="line"></span><br><span class="line">对于20%的数据, 1 &lt;&#x3D; m &lt;&#x3D; n &lt;&#x3D; 5 ; </span><br><span class="line"></span><br><span class="line">对于80%的数据, 1 &lt;&#x3D; m &lt;&#x3D; n &lt;&#x3D; 10^7 ; </span><br><span class="line"></span><br><span class="line">对于100%的数据, 1 &lt;&#x3D; m &lt;&#x3D; n &lt;&#x3D; 10^18.</span><br></pre></td></tr></table></figure><h2 id="输出描述">输出描述:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输出仅包括一行, 即所求排列中的第m个数字.</span><br></pre></td></tr></table></figure><p>示例1</p><h2 id="输入">输入</h2><p><a href="javascript:void(0);">复制</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11 4</span><br></pre></td></tr></table></figure><h2 id="输出">输出</h2><p><a href="javascript:void(0);">复制</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = readline().split(<span class="string">' '</span>).map(<span class="function"><span class="params">e</span> =&gt;</span> <span class="built_in">parseInt</span>(e));</span><br><span class="line"><span class="keyword">let</span> m = arr[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">let</span> n = arr[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">let</span> i = <span class="number">1</span>;</span><br><span class="line">m--;</span><br><span class="line"><span class="keyword">while</span>(m!==<span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> start = i, end = i+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(start&lt;=n) &#123;</span><br><span class="line">        num += <span class="built_in">Math</span>.min(n+<span class="number">1</span>,end)-start;</span><br><span class="line">        start *= <span class="number">10</span>;</span><br><span class="line">        end *= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (num &gt; m)</span><br><span class="line">    &#123;</span><br><span class="line">        i *= <span class="number">10</span>;</span><br><span class="line">        m--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        m -= num;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(i);</span><br></pre></td></tr></table></figure><p>基本上是字典树的思想</p><p>但是不用真的去实现字典树</p><p>发现一个不够继续乘10进位好了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;题目描述&lt;/h2&gt;
&lt;p&gt;给定整数n和m, 将1到n的这n个整数按字典序排列之后, 求其中的第m个数。 对于n=11, m=4, 按字典序排列依次为1, 10, 11, 2, 3, 4, 5, 6, 7, 8, 9, 因此第4
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 1277. Count Square Submatrices with All Ones</title>
    <link href="http://yoursite.com/2020/07/30/LeetCode-1277-Count-Square-Submatrices-with-All-Ones/"/>
    <id>http://yoursite.com/2020/07/30/LeetCode-1277-Count-Square-Submatrices-with-All-Ones/</id>
    <published>2020-07-30T15:42:46.000Z</published>
    <updated>2020-07-30T15:43:29.936Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Given a <code>m * n</code> matrix of ones and zeros, return how many <strong>square</strong> submatrices have all ones.</p><p><strong>Example 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Input: matrix &#x3D;</span><br><span class="line">[</span><br><span class="line">  [0,1,1,1],</span><br><span class="line">  [1,1,1,1],</span><br><span class="line">  [0,1,1,1]</span><br><span class="line">]</span><br><span class="line">Output: 15</span><br><span class="line">Explanation: </span><br><span class="line">There are 10 squares of side 1.</span><br><span class="line">There are 4 squares of side 2.</span><br><span class="line">There is  1 square of side 3.</span><br><span class="line">Total number of squares &#x3D; 10 + 4 + 1 &#x3D; 15.</span><br></pre></td></tr></table></figure><p><strong>Example 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Input: matrix &#x3D; </span><br><span class="line">[</span><br><span class="line">  [1,0,1],</span><br><span class="line">  [1,1,0],</span><br><span class="line">  [1,1,0]</span><br><span class="line">]</span><br><span class="line">Output: 7</span><br><span class="line">Explanation: </span><br><span class="line">There are 6 squares of side 1.  </span><br><span class="line">There is 1 square of side 2. </span><br><span class="line">Total number of squares &#x3D; 6 + 1 &#x3D; 7.</span><br></pre></td></tr></table></figure><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= arr.length &lt;= 300</code></li><li><code>1 &lt;= arr[0].length &lt;= 300</code></li><li><code>0 &lt;= arr[i][j] &lt;= 1</code></li></ul><p>Accepted</p><p>64,838</p><p>Submissions</p><p>88,888</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number[][]&#125;</span> <span class="variable">matrix</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;number&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> countSquares = <span class="function"><span class="keyword">function</span>(<span class="params">matrix</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(matrix.length===<span class="number">0</span> || !matrix) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> rows =  matrix.length;</span><br><span class="line">    <span class="keyword">let</span> cols = matrix[<span class="number">0</span>].length;</span><br><span class="line">    <span class="keyword">let</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> r=<span class="number">0</span>;r&lt;rows;r++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> c=<span class="number">0</span>;c&lt;cols;c++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(matrix[r][c]===<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(r===<span class="number">0</span> || c===<span class="number">0</span>) res++;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">let</span> val = <span class="built_in">Math</span>.min(matrix[r<span class="number">-1</span>][c<span class="number">-1</span>],matrix[r<span class="number">-1</span>][c],matrix[r][c<span class="number">-1</span>])+matrix[r][c];</span><br><span class="line">                    res+=val;</span><br><span class="line">                    matrix[r][c]=val;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Given a &lt;code&gt;m * n&lt;/code&gt; matrix of ones and zeros, return how many &lt;strong&gt;square&lt;/strong&gt; submatrices have all ones.&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>KS19 最小代价爬楼梯</title>
    <link href="http://yoursite.com/2020/07/30/KS19-%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E7%88%AC%E6%A5%BC%E6%A2%AF/"/>
    <id>http://yoursite.com/2020/07/30/KS19-%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E7%88%AC%E6%A5%BC%E6%A2%AF/</id>
    <published>2020-07-29T16:13:11.000Z</published>
    <updated>2020-07-29T16:13:50.975Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h2 id="题目描述">题目描述</h2><p>你需要爬上一个N层的楼梯，在爬楼梯过程中， 每阶楼梯需花费非负代价，第i阶楼梯花费代价表示为cost[i]， 一旦你付出了代价，你可以在该阶基础上往上爬一阶或两阶。</p><p>你可以从第 0 阶或者 第 1 阶开始，请找到到达顶层的最小的代价是多少。</p><p>N和cost[i]皆为整数，且N∈[2,1000]，cost[i]∈ [0, 999]。</p><h2 id="输入描述">输入描述:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入为一串半角逗号分割的整数，对应cost数组，例如</span><br><span class="line"></span><br><span class="line">10,15,20</span><br></pre></td></tr></table></figure><h2 id="输出描述">输出描述:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输出一个整数，表示花费的最小代价</span><br></pre></td></tr></table></figure><p>示例1</p><h2 id="输入">输入</h2><p><a href="javascript:void(0);">复制</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1,100,1,1,1,100,1,1,100,1</span><br></pre></td></tr></table></figure><h2 id="输出">输出</h2><p><a href="javascript:void(0);">复制</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr=readline().split(<span class="string">','</span>).map(<span class="function"><span class="params">item</span>=&gt;</span><span class="built_in">parseInt</span>(item));</span><br><span class="line"><span class="keyword">let</span> len=arr.length;</span><br><span class="line"><span class="keyword">let</span> dp=<span class="keyword">new</span> <span class="built_in">Array</span>(len+<span class="number">1</span>).fill(<span class="number">0</span>);</span><br><span class="line">[dp[<span class="number">0</span>],dp[<span class="number">1</span>]] = [arr[<span class="number">0</span>],arr[<span class="number">1</span>]];</span><br><span class="line">arr[len]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">2</span>;i&lt;=len;i++)&#123;</span><br><span class="line">    dp[i]=<span class="built_in">Math</span>.min(arr[i]+dp[i<span class="number">-1</span>],arr[i]+dp[i<span class="number">-2</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(dp[len]);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;题目描述&lt;/h2&gt;
&lt;p&gt;你需要爬上一个N层的楼梯，在爬楼梯过程中， 每阶楼梯需花费非负代价，第i阶楼梯花费代价表示为cost[i]， 一旦你付出了代价，你可以在该阶基础上往上爬一阶或两阶。&lt;/p&gt;
&lt;p&gt;你可以从第 0 阶或
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
</feed>
