<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lydia Yuan&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-06-22T10:31:29.773Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Lydia Yuan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode 1329. Sort the Matrix Diagonally</title>
    <link href="http://yoursite.com/2020/06/22/LeetCode-1329-Sort-the-Matrix-Diagonally/"/>
    <id>http://yoursite.com/2020/06/22/LeetCode-1329-Sort-the-Matrix-Diagonally/</id>
    <published>2020-06-22T10:29:02.000Z</published>
    <updated>2020-06-22T10:31:29.773Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Given a <code>m * n</code> matrix <code>mat</code> of integers, sort it diagonally in ascending order from the top-left to the bottom-right then return the sorted array.</p><p><strong>Example 1:</strong></p><figure><img src="https://assets.leetcode.com/uploads/2020/01/21/1482_example_1_2.png" alt="img" /><figcaption>img</figcaption></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: mat &#x3D; [[3,3,1,1],[2,2,1,2],[1,1,1,2]]</span><br><span class="line">Output: [[1,1,1,1],[1,2,2,2],[1,2,3,3]]</span><br></pre></td></tr></table></figure><p><strong>Constraints:</strong></p><ul><li><code>m == mat.length</code></li><li><code>n == mat[i].length</code></li><li><code>1 &lt;= m, n &lt;= 100</code></li><li><code>1 &lt;= mat[i][j] &lt;= 100</code></li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[][] diagonalSort(<span class="keyword">int</span>[][] mat) &#123;</span><br><span class="line">        <span class="keyword">int</span> m = mat.length, n = mat[<span class="number">0</span>].length;</span><br><span class="line">        <span class="comment">// m:rows, n:columns</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> r=m-<span class="number">1</span>,c=<span class="number">0</span>;r&gt;=<span class="number">0</span>;r--) &#123;</span><br><span class="line">            <span class="comment">// run down the first column</span></span><br><span class="line">            fill(mat,m,n,r,c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> c=<span class="number">1</span>,r=<span class="number">0</span>;c&lt;n-<span class="number">1</span>;c++) &#123;</span><br><span class="line">            <span class="comment">// run down the first row (except for the first element)</span></span><br><span class="line">            fill(mat,m,n,r,c);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> mat;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">fill</span><span class="params">(<span class="keyword">int</span>[][] mat,<span class="keyword">int</span> m,<span class="keyword">int</span> n,<span class="keyword">int</span> r,<span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">        List&lt;Integer&gt; arr = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i+r&lt;m &amp;&amp; i+c&lt;n;i++) &#123;</span><br><span class="line">            arr.add(mat[r+i][c+i]);</span><br><span class="line">        &#125;</span><br><span class="line">        Collections.sort(arr);</span><br><span class="line">      <span class="comment">// sort the array list</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j+r&lt;m &amp;&amp; j+c&lt;n;j++) &#123;</span><br><span class="line">            mat[r+j][c+j] = arr.get(j);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Given a &lt;code&gt;m * n&lt;/code&gt; matrix &lt;code&gt;mat&lt;/code&gt; of integers, sort it diagonally in ascending order from the top-left to t
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 783. Minimum Distance Between BST Nodes</title>
    <link href="http://yoursite.com/2020/06/20/LeetCode-783-Minimum-Distance-Between-BST-Nodes/"/>
    <id>http://yoursite.com/2020/06/20/LeetCode-783-Minimum-Distance-Between-BST-Nodes/</id>
    <published>2020-06-20T14:52:00.000Z</published>
    <updated>2020-06-20T15:02:06.413Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Given a Binary Search Tree (BST) with the root node <code>root</code>, return the minimum difference between the values of any two different nodes in the tree.</p><p><strong>Example :</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Input: root &#x3D; [4,2,6,1,3,null,null]</span><br><span class="line">Output: 1</span><br><span class="line">Explanation:</span><br><span class="line">Note that root is a TreeNode object, not an array.</span><br><span class="line"></span><br><span class="line">The given tree [4,2,6,1,3,null,null] is represented by the following diagram:</span><br><span class="line"></span><br><span class="line">          4</span><br><span class="line">        &#x2F;   \</span><br><span class="line">      2      6</span><br><span class="line">     &#x2F; \    </span><br><span class="line">    1   3  </span><br><span class="line"></span><br><span class="line">while the minimum difference in this tree is 1, it occurs between node 1 and node 2, also between node 3 and node 2.</span><br></pre></td></tr></table></figure><p><strong>Note:</strong></p><ol><li>The size of the BST will be between 2 and <code>100</code>.</li><li>The BST is always valid, each node’s value is an integer, and each node’s value is different.</li><li>This question is the same as 530: <a href="https://leetcode.com/problems/minimum-absolute-difference-in-bst/" target="_blank" rel="noopener">https://leetcode.com/problems/minimum-absolute-difference-in-bst/</a></li></ol></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * function TreeNode(val, left, right) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = (val===undefined ? 0 : val)</span></span><br><span class="line"><span class="comment"> *     this.left = (left===undefined ? null : left)</span></span><br><span class="line"><span class="comment"> *     this.right = (right===undefined ? null : right)</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;TreeNode&#125;</span> <span class="variable">root</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;number&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// flatten to a list method </span></span><br><span class="line"><span class="keyword">var</span> minDiffInBST = <span class="function"><span class="keyword">function</span>(<span class="params">root</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> list = [];</span><br><span class="line">    <span class="keyword">let</span> min = <span class="literal">Infinity</span>;</span><br><span class="line">    <span class="keyword">const</span> inorder = <span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!node) <span class="keyword">return</span>;</span><br><span class="line">        inorder(node.left);</span><br><span class="line">        list.push(node.val);</span><br><span class="line">        inorder(node.right);</span><br><span class="line">    &#125;</span><br><span class="line">    inorder(root);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>;i&lt;list.length;i++) &#123;</span><br><span class="line">        min = <span class="built_in">Math</span>.min(min,<span class="built_in">Math</span>.abs(list[i]-list[i<span class="number">-1</span>]))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * function TreeNode(val, left, right) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = (val===undefined ? 0 : val)</span></span><br><span class="line"><span class="comment"> *     this.left = (left===undefined ? null : left)</span></span><br><span class="line"><span class="comment"> *     this.right = (right===undefined ? null : right)</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;TreeNode&#125;</span> <span class="variable">root</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;number&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"> <span class="comment">// recursive method</span></span><br><span class="line"><span class="keyword">var</span> minDiffInBST = <span class="function"><span class="keyword">function</span>(<span class="params">root</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> min = <span class="literal">Infinity</span>;</span><br><span class="line">    <span class="keyword">const</span> recursive = <span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!node) <span class="keyword">return</span>;</span><br><span class="line">        getMin(node.left,node.val);</span><br><span class="line">        getMin(node.right,node.val);</span><br><span class="line">        recursive(node.left);</span><br><span class="line">        recursive(node.right);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> getMin = <span class="function"><span class="keyword">function</span>(<span class="params">node,val</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!node) <span class="keyword">return</span>;</span><br><span class="line">        min = <span class="built_in">Math</span>.min(min,<span class="built_in">Math</span>.abs(node.val-val));</span><br><span class="line">        getMin(node.left,val);</span><br><span class="line">        getMin(node.right,val);</span><br><span class="line">    &#125;</span><br><span class="line">    recursive(root);</span><br><span class="line">    <span class="keyword">return</span> min;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Given a Binary Search Tree (BST) with the root node &lt;code&gt;root&lt;/code&gt;, return the minimum difference between the values of a
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 706. Design HashMap</title>
    <link href="http://yoursite.com/2020/06/20/LeetCode-706-Design-HashMap/"/>
    <id>http://yoursite.com/2020/06/20/LeetCode-706-Design-HashMap/</id>
    <published>2020-06-20T06:54:06.000Z</published>
    <updated>2020-06-20T06:56:48.273Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Design a HashMap without using any built-in hash table libraries.</p><p>To be specific, your design should include these functions:</p><ul><li><code>put(key, value)</code> : Insert a (key, value) pair into the HashMap. If the value already exists in the HashMap, update the value.</li><li><code>get(key)</code>: Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key.</li><li><code>remove(key)</code> : Remove the mapping for the value key if this map contains the mapping for the key.</li></ul><p><strong>Example:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">MyHashMap hashMap &#x3D; new MyHashMap();</span><br><span class="line">hashMap.put(1, 1);          </span><br><span class="line">hashMap.put(2, 2);         </span><br><span class="line">hashMap.get(1);            &#x2F;&#x2F; returns 1</span><br><span class="line">hashMap.get(3);            &#x2F;&#x2F; returns -1 (not found)</span><br><span class="line">hashMap.put(2, 1);          &#x2F;&#x2F; update the existing value</span><br><span class="line">hashMap.get(2);            &#x2F;&#x2F; returns 1 </span><br><span class="line">hashMap.remove(2);          &#x2F;&#x2F; remove the mapping for 2</span><br><span class="line">hashMap.get(2);            &#x2F;&#x2F; returns -1 (not found) </span><br></pre></td></tr></table></figure><p><strong>Note:</strong></p><ul><li>All keys and values will be in the range of <code>[0, 1000000]</code>.</li><li>The number of operations will be in the range of <code>[1, 10000]</code>.</li><li>Please do not use the built-in HashMap library.</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Initialize your data structure here.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> MyHashMap = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.indexes = [];</span><br><span class="line">    <span class="keyword">this</span>.values = [];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// seperate the indexes and values</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * value will always be non-negative. </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> </span>key </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> <span class="variable">value</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;void&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">MyHashMap.prototype.put = <span class="function"><span class="keyword">function</span>(<span class="params">key, value</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">this</span>.indexes[key]) &#123;</span><br><span class="line">        <span class="keyword">this</span>.values.push(value);</span><br><span class="line">        <span class="keyword">this</span>.indexes[key] = <span class="keyword">this</span>.values.length - <span class="number">1</span>;</span><br><span class="line">        <span class="comment">// if this key does not exist, create one</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.values[<span class="keyword">this</span>.indexes[key]] = value;</span><br><span class="line">        <span class="comment">// update the value</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> <span class="variable">key</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;number&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">MyHashMap.prototype.get = <span class="function"><span class="keyword">function</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.indexes[key] === <span class="literal">undefined</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.values[<span class="keyword">this</span>.indexes[key]];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Removes the mapping of the specified value key if this map contains a mapping for the key </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> <span class="variable">key</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;void&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">MyHashMap.prototype.remove = <span class="function"><span class="keyword">function</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>.indexes[key]!==<span class="literal">undefined</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.values[<span class="keyword">this</span>.indexes[key]] = <span class="literal">undefined</span>;</span><br><span class="line">        <span class="keyword">this</span>.indexes[key] = <span class="literal">undefined</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Your MyHashMap object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * var obj = new MyHashMap()</span></span><br><span class="line"><span class="comment"> * obj.put(key,value)</span></span><br><span class="line"><span class="comment"> * var param_2 = obj.get(key)</span></span><br><span class="line"><span class="comment"> * obj.remove(key)</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Design a HashMap without using any built-in hash table libraries.&lt;/p&gt;
&lt;p&gt;To be specific, your design should include these fu
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Why I wanna be a polyglot</title>
    <link href="http://yoursite.com/2020/06/20/Why-I-wanna-be-a-polyglot/"/>
    <id>http://yoursite.com/2020/06/20/Why-I-wanna-be-a-polyglot/</id>
    <published>2020-06-19T19:17:14.000Z</published>
    <updated>2020-06-19T19:39:25.647Z</updated>
    
    <content type="html"><![CDATA[<p>Polyglot is not a new thing.</p><p>People in Singapore, Netherland, Switzerland, Scandinavia countries and many other areas can speak several languages from a very young age.</p><p>And I know a few polyglots in real life.</p><p>My uncle is a polyglot. He was already a fluent English speaker in college, which was a rare thing in China. Then he went to work in the Middle East and learnt arabic. After that he learnt French.</p><p>Another impressive polyglot is a boy from Czechoslovakia I met in a summer school. He spoke English so good that you can not tell if he was American. Apart from English, he could speak at least five European languages. And he was only 14 or 15!</p><p>Some of the elder generation in my family know Russian, Cantonese, Shanghainese and a little bit English. I think dialects like Shanghainese can also count? So maybe they are polyglots too ...</p><p>Currently, I am using some apps to learn Japanese.</p><p>I am very into Japanese culture so this is definitely not a burden to me. Cuz I watched a ton of anime and listened to a lot of Japanese indie songs, I find it not hard for me to learn Japanese.</p><p>And here is my bucket list about language learning :</p><ul><li>Japanese</li><li>French</li><li>German</li><li>Korean</li><li>Cantonese</li><li>Shanghainese</li><li>Italian</li><li>Spanish</li><li>...</li></ul><p>Language learning is fun!</p><p>I don't know why but I'm naturally drawn to foreign languages and dialects.</p><p>Knowing Japanese / French / German can give me an edge in workplace. Maybe I will work in a foreign country ( I'm really looking forward to foreign working opportunities ).</p><p>Also, learning new languages keep my brain running smoothly.</p><p>So many benefits! I can't see why I shouldn't be a polyglot.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Polyglot is not a new thing.&lt;/p&gt;
&lt;p&gt;People in Singapore, Netherland, Switzerland, Scandinavia countries and many other areas can speak se
      
    
    </summary>
    
    
    
      <category term="Hobby" scheme="http://yoursite.com/tags/Hobby/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 380. Insert Delete GetRandom O(1)</title>
    <link href="http://yoursite.com/2020/06/19/LeetCode-380-Insert-Delete-GetRandom-O-1/"/>
    <id>http://yoursite.com/2020/06/19/LeetCode-380-Insert-Delete-GetRandom-O-1/</id>
    <published>2020-06-19T15:43:09.000Z</published>
    <updated>2020-06-19T15:57:23.003Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Design a data structure that supports all following operations in <em>average</em> <strong>O(1)</strong> time.</p><ol><li><code>insert(val)</code>: Inserts an item val to the set if not already present.</li><li><code>remove(val)</code>: Removes an item val from the set if present.</li><li><code>getRandom</code>: Returns a random element from current set of elements. Each element must have the <strong>same probability</strong> of being returned.</li></ol><p><strong>Example:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; Init an empty set.</span><br><span class="line">RandomizedSet randomSet &#x3D; new RandomizedSet();</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Inserts 1 to the set. Returns true as 1 was inserted successfully.</span><br><span class="line">randomSet.insert(1);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Returns false as 2 does not exist in the set.</span><br><span class="line">randomSet.remove(2);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Inserts 2 to the set, returns true. Set now contains [1,2].</span><br><span class="line">randomSet.insert(2);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; getRandom should return either 1 or 2 randomly.</span><br><span class="line">randomSet.getRandom();</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Removes 1 from the set, returns true. Set now contains [2].</span><br><span class="line">randomSet.remove(1);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 2 was already in the set, so return false.</span><br><span class="line">randomSet.insert(2);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Since 2 is the only number in the set, getRandom always return 2.</span><br><span class="line">randomSet.getRandom();</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Initialize your data structure here.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// unique element =&gt; Set() (Map is fine but Set is better)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> RandomizedSet = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.data = [];</span><br><span class="line">    <span class="keyword">this</span>.set = <span class="keyword">new</span> <span class="built_in">Set</span>([]);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Inserts a value to the set. Returns true if the set did not already contain the specified element. </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> <span class="variable">val</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;boolean&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">RandomizedSet.prototype.insert = <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">this</span>.set.has(val)) &#123;</span><br><span class="line">        <span class="keyword">this</span>.data.push(val);</span><br><span class="line">        <span class="keyword">this</span>.set.add(val);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Removes a value from the set. Returns true if the set contained the specified element. </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> <span class="variable">val</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;boolean&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">RandomizedSet.prototype.remove = <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>.set.has(val)) &#123;</span><br><span class="line">        <span class="keyword">let</span> index = <span class="keyword">this</span>.data.indexOf(val);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i=index+<span class="number">1</span>;i&lt;<span class="keyword">this</span>.data.length;i++) &#123;</span><br><span class="line">            <span class="keyword">this</span>.data[i<span class="number">-1</span>]=<span class="keyword">this</span>.data[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.data = <span class="keyword">this</span>.data.slice(<span class="number">0</span>,<span class="keyword">this</span>.data.length<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">this</span>.set.delete(val);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Get a random element from the set.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;number&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">RandomizedSet.prototype.getRandom = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> rdm = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="keyword">this</span>.data.length);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.data[rdm];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Your RandomizedSet object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * var obj = new RandomizedSet()</span></span><br><span class="line"><span class="comment"> * var param_1 = obj.insert(val)</span></span><br><span class="line"><span class="comment"> * var param_2 = obj.remove(val)</span></span><br><span class="line"><span class="comment"> * var param_3 = obj.getRandom()</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Design a data structure that supports all following operations in &lt;em&gt;average&lt;/em&gt; &lt;strong&gt;O(1)&lt;/strong&gt; time.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 1286. Iterator for Combination</title>
    <link href="http://yoursite.com/2020/06/18/LeetCode-1286-Iterator-for-Combination/"/>
    <id>http://yoursite.com/2020/06/18/LeetCode-1286-Iterator-for-Combination/</id>
    <published>2020-06-18T05:14:06.000Z</published>
    <updated>2020-06-18T06:22:05.809Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Design an Iterator class, which has:</p><ul><li>A constructor that takes a string <code>characters</code> of <strong>sorted distinct</strong> lowercase English letters and a number <code>combinationLength</code> as arguments.</li><li>A function <em>next()</em> that returns the next combination of length <code>combinationLength</code> in <strong>lexicographical order</strong>.</li><li>A function <em>hasNext()</em> that returns <code>True</code> if and only if there exists a next combination.</li></ul><p><strong>Example:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CombinationIterator iterator &#x3D; new CombinationIterator(&quot;abc&quot;, 2); &#x2F;&#x2F; creates the iterator.</span><br><span class="line"></span><br><span class="line">iterator.next(); &#x2F;&#x2F; returns &quot;ab&quot;</span><br><span class="line">iterator.hasNext(); &#x2F;&#x2F; returns true</span><br><span class="line">iterator.next(); &#x2F;&#x2F; returns &quot;ac&quot;</span><br><span class="line">iterator.hasNext(); &#x2F;&#x2F; returns true</span><br><span class="line">iterator.next(); &#x2F;&#x2F; returns &quot;bc&quot;</span><br><span class="line">iterator.hasNext(); &#x2F;&#x2F; returns false</span><br></pre></td></tr></table></figure><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= combinationLength &lt;= characters.length &lt;= 15</code></li><li>There will be at most <code>10^4</code> function calls per test.</li><li>It's guaranteed that all calls of the function <code>next</code> are valid.</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string&#125;</span> <span class="variable">characters</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> <span class="variable">combinationLength</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> CombinationIterator = <span class="function"><span class="keyword">function</span>(<span class="params">characters, combinationLength</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.data = characters.split(<span class="string">""</span>).sort().join(<span class="string">""</span>);</span><br><span class="line">    <span class="keyword">this</span>.length = combinationLength;</span><br><span class="line">    <span class="keyword">this</span>.stack = build(<span class="keyword">this</span>.length,<span class="keyword">this</span>.data);</span><br><span class="line">    <span class="keyword">this</span>.pos = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;string&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">CombinationIterator.prototype.next = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>.pos&lt;<span class="keyword">this</span>.stack.length) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.stack[<span class="keyword">this</span>.pos++];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;boolean&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">CombinationIterator.prototype.hasNext = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.pos &lt; <span class="keyword">this</span>.stack.length;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> build = <span class="function"><span class="keyword">function</span>(<span class="params">max,str,output=[],current=<span class="string">""</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(current.length===max) &#123;</span><br><span class="line">        output.push(current);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;str.length;i++) &#123;</span><br><span class="line">            build(max,str.slice(i+<span class="number">1</span>),output,current+str[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> output;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Your CombinationIterator object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * var obj = new CombinationIterator(characters, combinationLength)</span></span><br><span class="line"><span class="comment"> * var param_1 = obj.next()</span></span><br><span class="line"><span class="comment"> * var param_2 = obj.hasNext()</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Design an Iterator class, which has:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A constructor that takes a string &lt;code&gt;characters&lt;/code&gt; of &lt;strong&gt;sorte
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 894. All Possible Full Binary Trees</title>
    <link href="http://yoursite.com/2020/06/17/LeetCode-894-All-Possible-Full-Binary-Trees/"/>
    <id>http://yoursite.com/2020/06/17/LeetCode-894-All-Possible-Full-Binary-Trees/</id>
    <published>2020-06-17T13:16:14.000Z</published>
    <updated>2020-06-17T13:57:32.496Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>A <em>full binary tree</em> is a binary tree where each node has exactly 0 or 2 children.</p><p>Return a list of all possible full binary trees with <code>N</code> nodes. Each element of the answer is the root node of one possible tree.</p><p>Each <code>node</code> of each tree in the answer <strong>must</strong> have <code>node.val = 0</code>.</p><p>You may return the final list of trees in any order.</p><p><img src="https://s3-lc-upload.s3.amazonaws.com/uploads/2018/08/22/fivetrees.png" /></p><p><strong>Example 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: 7</span><br><span class="line">Output: [[0,0,0,null,null,0,0,null,null,0,0],[0,0,0,null,null,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,null,null,null,null,0,0],[0,0,0,0,0,null,null,0,0]]</span><br><span class="line">Explanation:</span><br></pre></td></tr></table></figure><p><strong>Note:</strong></p><ul><li><code>1 &lt;= N &lt;= 20</code></li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * function TreeNode(val, left, right) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = (val===undefined ? 0 : val)</span></span><br><span class="line"><span class="comment"> *     this.left = (left===undefined ? null : left)</span></span><br><span class="line"><span class="comment"> *     this.right = (right===undefined ? null : right)</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> <span class="variable">N</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;TreeNode[]&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> allPossibleFBT = <span class="function"><span class="keyword">function</span>(<span class="params">N</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(N%<span class="number">2</span>===<span class="number">0</span>) <span class="keyword">return</span> [];</span><br><span class="line">    <span class="keyword">let</span> res = [];</span><br><span class="line">    <span class="keyword">if</span>(N==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="comment">// then this is just a node</span></span><br><span class="line">            res.push(<span class="keyword">new</span> TreeNode(<span class="number">0</span>));</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    N = N<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>;i&lt;N;i+=<span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> left = allPossibleFBT(i);</span><br><span class="line">        <span class="keyword">let</span> right = allPossibleFBT(N-i);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> l <span class="keyword">of</span> left) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">let</span> r <span class="keyword">of</span> right) &#123;</span><br><span class="line">                <span class="keyword">let</span> current = <span class="keyword">new</span> TreeNode(<span class="number">0</span>);</span><br><span class="line">                current.left = l;</span><br><span class="line">                current.right = r;</span><br><span class="line">                res.push(current);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>Every level of the full binary tree has even number amount of nodes except for the root level, which has to be only one node.</p><p>So the number of nodes has to be odd !</p><p>Proof :</p><p>( 1+2*N) % 2 = 1</p><p>First, we can rule out all test cases whose N is even</p><p>Then, divide and conquer</p><p><code>i</code> nodes on the left + <code>N-1-i</code> on the right ( the one rest is for the root level )</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;A &lt;em&gt;full binary tree&lt;/em&gt; is a binary tree where each node has exactly 0 or 2 children.&lt;/p&gt;
&lt;p&gt;Return a list of all possib
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Review Some Basic CSS / JS Interview Questions</title>
    <link href="http://yoursite.com/2020/06/17/Review-Some-Basic-CSS-JS-Interview-Questions/"/>
    <id>http://yoursite.com/2020/06/17/Review-Some-Basic-CSS-JS-Interview-Questions/</id>
    <published>2020-06-17T11:10:40.000Z</published>
    <updated>2020-06-18T03:30:54.724Z</updated>
    
    <content type="html"><![CDATA[<p><del>经过豆瓣友邻的无私帮助搞到了头条内推 应该很难 我做好挂的准备惹</del></p><h3 id="css">CSS</h3><h4 id="centering-a-element">Centering a element</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.content</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin</span>:-<span class="number">25px</span> <span class="number">0</span> <span class="number">0</span> -<span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#000000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Set the element as absolute</p><p>Fix the width &amp; height</p><p>Top &amp; left =&gt; 50%</p><p>Then set margin to be negative ( margin-top &amp; margin-left to be half of th width &amp; height ) to draw the element back to the center</p><h4 id="fixed-left-part-responsive-right-part">Fixed left part , responsive right part</h4><p>1⃣️ Float to the left with fixed width</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span>left<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span>right<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.left</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>:left;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">border</span>: solid <span class="number">#000</span> <span class="number">1px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span>&#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">border</span>: solid <span class="number">#000</span> <span class="number">1px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2⃣️ Span the right part and confine it with another cage</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>left<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>right<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.left</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>:left;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">border</span>: solid <span class="number">#000</span> <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: -<span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>:left;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">border</span>: solid <span class="number">#777</span> <span class="number">1px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span>&#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The right part width =&gt; 100% + float : left ( will overflow ) =&gt; draw it back with margin-left : 100px</p><p>3⃣️ table cell feature</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>left<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>right<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.left</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>:left;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">border</span>: solid <span class="number">#999</span> <span class="number">1px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: table-cell;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">3000px</span>;</span><br><span class="line">    <span class="attribute">border</span>: solid <span class="number">#777</span> <span class="number">1px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>Table-cell make the element behave like a<td><p>element !</p><h4 id="generate-three-exactly-the-same-elements-in-a-row">Generate three exactly-the-same elements in a row</h4><p>1⃣️ flex : 1</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>item1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>item2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>item3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#d71c1c</span>;</span><br><span class="line">    <span class="attribute">text-align</span>:center;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#dddddd</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Flex number means the proportion of the element.</p><p>If all three flex numbers are 1</p><p>Then they are the same</p><p>2⃣️ 1/3 width</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>item1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>item2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span>item3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">33.3%</span>;</span><br><span class="line">    <span class="attribute">background</span>:<span class="number">#66ccff</span>;</span><br><span class="line">    <span class="attribute">text-align</span>:center;</span><br><span class="line">    <span class="attribute">float</span>:left</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>If you add borders it won't work, not recommended !</p><p>3⃣️ inline-block</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">33.3%</span>;</span><br><span class="line">    <span class="attribute">text-align</span>:center;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#66ccff</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>:-<span class="number">5px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4⃣️ table-cell</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: table;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: table-cell;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#dddddd</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="javascript">JavaScript</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;del&gt;经过豆瓣友邻的无私帮助搞到了头条内推 应该很难 我做好挂的准备惹&lt;/del&gt;&lt;/p&gt;
&lt;h3 id=&quot;css&quot;&gt;CSS&lt;/h3&gt;
&lt;h4 id=&quot;centering-a-element&quot;&gt;Centering a element&lt;/h4&gt;
&lt;figure class
      
    
    </summary>
    
    
    
      <category term="Interview" scheme="http://yoursite.com/tags/Interview/"/>
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 80. Remove Duplicates from Sorted Array II</title>
    <link href="http://yoursite.com/2020/06/17/LeetCode-80-Remove-Duplicates-from-Sorted-Array-II/"/>
    <id>http://yoursite.com/2020/06/17/LeetCode-80-Remove-Duplicates-from-Sorted-Array-II/</id>
    <published>2020-06-17T03:08:34.000Z</published>
    <updated>2020-06-17T03:11:46.416Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Given a sorted array <em>nums</em>, remove the duplicates <a href="https://en.wikipedia.org/wiki/In-place_algorithm" target="_blank" rel="noopener"><strong>in-place</strong></a> such that duplicates appeared at most <em>twice</em> and return the new length.</p><p>Do not allocate extra space for another array, you must do this by <strong>modifying the input array <a href="https://en.wikipedia.org/wiki/In-place_algorithm" target="_blank" rel="noopener">in-place</a></strong> with O(1) extra memory.</p><p><strong>Example 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Given nums &#x3D; [1,1,1,2,2,3],</span><br><span class="line"></span><br><span class="line">Your function should return length &#x3D; 5, with the first five elements of nums being 1, 1, 2, 2 and 3 respectively.</span><br><span class="line"></span><br><span class="line">It doesn&#39;t matter what you leave beyond the returned length.</span><br></pre></td></tr></table></figure><p><strong>Example 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Given nums &#x3D; [0,0,1,1,1,1,2,3,3],</span><br><span class="line"></span><br><span class="line">Your function should return length &#x3D; 7, with the first seven elements of nums being modified to 0, 0, 1, 1, 2, 3 and 3 respectively.</span><br><span class="line"></span><br><span class="line">It doesn&#39;t matter what values are set beyond the returned length.</span><br></pre></td></tr></table></figure><p><strong>Clarification:</strong></p><p>Confused why the returned value is an integer but your answer is an array?</p><p>Note that the input array is passed in by <strong>reference</strong>, which means modification to the input array will be known to the caller as well.</p><p>Internally you can think of this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; nums is passed in by reference. (i.e., without making a copy)</span><br><span class="line">int len &#x3D; removeDuplicates(nums);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; any modification to nums in your function would be known by the caller.</span><br><span class="line">&#x2F;&#x2F; using the length returned by your function, it prints the first len elements.</span><br><span class="line">for (int i &#x3D; 0; i &lt; len; i++) &#123;</span><br><span class="line">    print(nums[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number[]&#125;</span> <span class="variable">nums</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;number&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> removeDuplicates = <span class="function"><span class="keyword">function</span>(<span class="params">nums</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> n <span class="keyword">of</span> nums) &#123;</span><br><span class="line">        <span class="keyword">if</span>(index&lt;<span class="number">2</span> || n&gt;nums[index<span class="number">-2</span>]) &#123;</span><br><span class="line">            nums[index++]=n;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> index;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Accepted</span><br><span class="line">Runtime: <span class="number">68</span> ms</span><br><span class="line">Your input</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">stdout</span><br><span class="line"><span class="number">1</span> [ <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span> ] <span class="number">1</span></span><br><span class="line"><span class="number">1</span> [ <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span> ] <span class="number">2</span></span><br><span class="line"><span class="number">1</span> [ <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span> ] <span class="number">2</span></span><br><span class="line"><span class="number">2</span> [ <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span> ] <span class="number">3</span></span><br><span class="line"><span class="number">2</span> [ <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span> ] <span class="number">4</span></span><br><span class="line"><span class="number">3</span> [ <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span> ] <span class="number">5</span></span><br><span class="line"></span><br><span class="line">Output</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">Expected</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Given a sorted array &lt;em&gt;nums&lt;/em&gt;, remove the duplicates &lt;a href=&quot;https://en.wikipedia.org/wiki/In-place_algorithm&quot; target=
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 179. Largest Number</title>
    <link href="http://yoursite.com/2020/06/16/LeetCode-179-Largest-Number/"/>
    <id>http://yoursite.com/2020/06/16/LeetCode-179-Largest-Number/</id>
    <published>2020-06-16T08:33:49.000Z</published>
    <updated>2020-06-16T08:35:57.168Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Given a list of non negative integers, arrange them such that they form the largest number.</p><p><strong>Example 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [10,2]</span><br><span class="line">Output: &quot;210&quot;</span><br></pre></td></tr></table></figure><p><strong>Example 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [3,30,34,5,9]</span><br><span class="line">Output: &quot;9534330&quot;</span><br></pre></td></tr></table></figure><p><strong>Note:</strong> The result may be very large, so you need to return a string instead of an integer.</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Explot JS features</span></span><br><span class="line"><span class="comment">// Kinda cheat (in a good way ?)</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number[]&#125;</span> <span class="variable">nums</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;string&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> largestNumber = <span class="function"><span class="keyword">function</span>(<span class="params">nums</span>) </span>&#123;</span><br><span class="line">    nums.sort(<span class="function">(<span class="params">a,b</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ((b+<span class="string">''</span>+a)-(a+<span class="string">''</span>+b));</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> nums.join(<span class="string">''</span>).replace(<span class="regexp">/^0*/</span>,<span class="string">''</span>) || <span class="string">'0'</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Given a list of non negative integers, arrange them such that they form the largest number.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example 1:&lt;/stron
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 856. Score of Parentheses</title>
    <link href="http://yoursite.com/2020/06/16/LeetCode-856-Score-of-Parentheses/"/>
    <id>http://yoursite.com/2020/06/16/LeetCode-856-Score-of-Parentheses/</id>
    <published>2020-06-16T05:13:59.000Z</published>
    <updated>2020-06-16T05:54:11.932Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Given a balanced parentheses string <code>S</code>, compute the score of the string based on the following rule:</p><ul><li><code>()</code> has score 1</li><li><code>AB</code> has score <code>A + B</code>, where A and B are balanced parentheses strings.</li><li><code>(A)</code> has score <code>2 * A</code>, where A is a balanced parentheses string.</li></ul><p><strong>Example 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: &quot;()&quot;</span><br><span class="line">Output: 1</span><br></pre></td></tr></table></figure><p><strong>Example 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: &quot;(())&quot;</span><br><span class="line">Output: 2</span><br></pre></td></tr></table></figure><p><strong>Example 3:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: &quot;()()&quot;</span><br><span class="line">Output: 2</span><br></pre></td></tr></table></figure><p><strong>Example 4:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: &quot;(()(()))&quot;</span><br><span class="line">Output: 6</span><br></pre></td></tr></table></figure><p><strong>Note:</strong></p><ol><li><code>S</code> is a balanced parentheses string, containing only <code>(</code> and <code>)</code>.</li><li><code>2 &lt;= S.length &lt;= 50</code></li></ol></blockquote><p>This is not a basic pairing problem.</p><p>Watch out for <code>AB</code> and <code>(A)</code> ! ( This is a hint to store the current value and do some adding operations )</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Stack O(N)</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string&#125;</span> <span class="variable">S</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;number&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> scoreOfParentheses = <span class="function"><span class="keyword">function</span>(<span class="params">S</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> stack = [];</span><br><span class="line">    <span class="keyword">let</span> cur = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;S.length;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(S[i]===<span class="string">'('</span>) &#123;</span><br><span class="line">            stack.push(cur);</span><br><span class="line">            cur = <span class="number">0</span>;</span><br><span class="line">          <span class="comment">// cur = 0: this is not a pair</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            cur = stack.pop() + <span class="built_in">Math</span>.max (<span class="number">1</span>,<span class="number">2</span>*cur)</span><br><span class="line">          <span class="comment">// + : AB =&gt; A+B </span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cur;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Given a balanced parentheses string &lt;code&gt;S&lt;/code&gt;, compute the score of the string based on the following rule:&lt;/p&gt;
&lt;ul&gt;
&lt;l
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Gibberish dev journal: some random thoughts</title>
    <link href="http://yoursite.com/2020/06/14/Gibberish-dev-journal-some-random-thoughts/"/>
    <id>http://yoursite.com/2020/06/14/Gibberish-dev-journal-some-random-thoughts/</id>
    <published>2020-06-14T12:15:53.000Z</published>
    <updated>2020-06-15T14:08:03.768Z</updated>
    
    <content type="html"><![CDATA[<h4 id="list-a-directory-with-tree-command"><a class="markdownIt-Anchor" href="#list-a-directory-with-tree-command"></a> List A Directory With Tree Command</h4><p>Very helpful, especially when you are working on the dev documentations.</p><p>I am a Mac OS user, so <code>brew install tree</code></p><p>And Let’s try out !</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">yuanruqian@lydia gibberish % cd src</span><br><span class="line">yuanruqian@lydia src % tree</span><br><span class="line">.</span><br><span class="line">├── App.vue</span><br><span class="line">├── assets</span><br><span class="line">│   └── logo.png</span><br><span class="line">├── components</span><br><span class="line">│   ├── HelloWorld.vue</span><br><span class="line">│   ├── Home.vue</span><br><span class="line">│   ├── Login.vue</span><br><span class="line">│   ├── common</span><br><span class="line">│   │   ├── Footer.vue</span><br><span class="line">│   │   └── NavMenu.vue</span><br><span class="line">│   ├── home</span><br><span class="line">│   │   └── AppIndex.vue</span><br><span class="line">│   └── library</span><br><span class="line">│       ├── Books.vue</span><br><span class="line">│       ├── EditForm.vue</span><br><span class="line">│       ├── LibraryIndex.vue</span><br><span class="line">│       ├── SearchBar.vue</span><br><span class="line">│       └── SideMenu.vue</span><br><span class="line">├── main.js</span><br><span class="line">├── plugins</span><br><span class="line">│   └── Vuetify.js</span><br><span class="line">├── router</span><br><span class="line">│   └── index.js</span><br><span class="line">└── store</span><br><span class="line">    └── index.js</span><br><span class="line"></span><br><span class="line">8 directories, 17 files</span><br><span class="line">yuanruqian@lydia src %</span><br></pre></td></tr></table></figure><p>A nice way to show the shole structure of the frontend part, right ?</p><h4 id="codepen-for-quick-prototyping"><a class="markdownIt-Anchor" href="#codepen-for-quick-prototyping"></a> Codepen for quick prototyping</h4><p>Open a Vuetify example component in Codepen.</p><p>Modify on Codepen to build a prototype.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;list-a-directory-with-tree-command&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#list-a-directory-with-tree-command&quot;&gt;&lt;/a&gt; List A Directory Wi
      
    
    </summary>
    
    
    
      <category term="Dev" scheme="http://yoursite.com/tags/Dev/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 43. Multiply Strings</title>
    <link href="http://yoursite.com/2020/06/10/LeetCode-43-Multiply-Strings/"/>
    <id>http://yoursite.com/2020/06/10/LeetCode-43-Multiply-Strings/</id>
    <published>2020-06-10T04:15:14.000Z</published>
    <updated>2020-06-10T05:00:41.302Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Given two non-negative integers <code>num1</code> and <code>num2</code> represented as strings, return the product of <code>num1</code> and <code>num2</code>, also represented as a string.</p><p><strong>Example 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: num1 &#x3D; &quot;2&quot;, num2 &#x3D; &quot;3&quot;</span><br><span class="line">Output: &quot;6&quot;</span><br></pre></td></tr></table></figure><p><strong>Example 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: num1 &#x3D; &quot;123&quot;, num2 &#x3D; &quot;456&quot;</span><br><span class="line">Output: &quot;56088&quot;</span><br></pre></td></tr></table></figure><p><strong>Note:</strong></p><ol><li>The length of both <code>num1</code> and <code>num2</code> is &lt; 110.</li><li>Both <code>num1</code> and <code>num2</code> contain only digits <code>0-9</code>.</li><li>Both <code>num1</code> and <code>num2</code> do not contain any leading zero, except the number 0 itself.</li><li>You <strong>must not use any built-in BigInteger library</strong> or <strong>convert the inputs to integer</strong> directly.</li></ol></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string&#125;</span> <span class="variable">num1</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string&#125;</span> <span class="variable">num2</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;string&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> multiply = <span class="function"><span class="keyword">function</span> (<span class="params">num1, num2</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> z = [];</span><br><span class="line">    <span class="keyword">let</span> hold = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> totalLength = num1.length + num2.length;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (num1 === <span class="string">'0'</span> || num2 === <span class="string">'0'</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (num1 === <span class="string">'1'</span> || num2 === <span class="string">'1'</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> num1 === <span class="string">'1'</span></span><br><span class="line">            ? num2</span><br><span class="line">            : num1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    num1 = num1.split(<span class="string">''</span>).reverse();</span><br><span class="line">    num2 = num2.split(<span class="string">''</span>).reverse();</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> k = <span class="number">0</span>; k &lt; totalLength; k++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; num1.length; i++) &#123;</span><br><span class="line">            <span class="keyword">let</span> j = k - i;</span><br><span class="line">            <span class="keyword">if</span> (num2[j]) &#123;</span><br><span class="line">                hold = hold + (num1[i] * num2[j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(k === totalLength <span class="number">-1</span> &amp;&amp; hold === <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        z[k] = hold % <span class="number">10</span>;</span><br><span class="line">        hold = <span class="built_in">Math</span>.trunc(hold / <span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> z.reverse().join(<span class="string">''</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Accepted</span><br><span class="line">Runtime: <span class="number">72</span> ms</span><br><span class="line">Your input</span><br><span class="line"><span class="string">"123"</span></span><br><span class="line"><span class="string">"456"</span></span><br><span class="line">stdout</span><br><span class="line">after reverse num1: [ <span class="string">'3'</span>, <span class="string">'2'</span>, <span class="string">'1'</span> ]</span><br><span class="line">after reverse num2: [ <span class="string">'6'</span>, <span class="string">'5'</span>, <span class="string">'4'</span> ]</span><br><span class="line">[] <span class="number">18</span> = <span class="number">3</span> * <span class="number">6</span></span><br><span class="line">[ <span class="number">8</span> ] <span class="number">28</span> </span><br><span class="line">[ <span class="number">8</span>, <span class="number">8</span> ] <span class="number">30</span></span><br><span class="line">[ <span class="number">8</span>, <span class="number">8</span>, <span class="number">0</span> ] <span class="number">16</span></span><br><span class="line">[ <span class="number">8</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">6</span> ] <span class="number">5</span></span><br><span class="line">[ <span class="number">8</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">5</span> ] <span class="number">0</span></span><br><span class="line"></span><br><span class="line">Output</span><br><span class="line"><span class="string">"56088"</span></span><br><span class="line">Expected</span><br><span class="line"><span class="string">"56088"</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Given two non-negative integers &lt;code&gt;num1&lt;/code&gt; and &lt;code&gt;num2&lt;/code&gt; represented as strings, return the product of &lt;code&gt;
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>2020-德勤-STEM-summer-intern-挂经</title>
    <link href="http://yoursite.com/2020/06/09/2020-%E5%BE%B7%E5%8B%A4-STEM-summer-intern-%E6%8C%82%E7%BB%8F/"/>
    <id>http://yoursite.com/2020/06/09/2020-%E5%BE%B7%E5%8B%A4-STEM-summer-intern-%E6%8C%82%E7%BB%8F/</id>
    <published>2020-06-09T07:48:25.000Z</published>
    <updated>2020-06-09T08:50:23.600Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>申请职位 ： Project Intern - STEM Majors (For External Client Services) - Guangzhou</p></blockquote><p>面试的姐姐上来让我做了一小段英文的自我介绍</p><p>然后问我是否了解这个部门做啥（我如实回答不知道😂）</p><p><del>之前我的猜想是开发外包但是没敢说</del></p><p>面试官说技术咨询总部在重庆 广州是分部 大概100来个人</p><p>然后问了我的项目经历（很尴尬 因为我一直在刷题和忙学校的课程没有什么项目 有的也特别简单）</p><p>感觉确实和互联网大厂不太一样</p><p>如果说大厂是刷题+基础知识</p><p>IT咨询 则是 实践能力 你有没有做过项目？有没有开发经历？因为进去就是要上手做活的</p><p>接着问了我有什么优点值得</p><p>然后问了一些技术问题：</p><ul><li>数据库接触过吗？怎么优化查询？（我答的不好，因为我一年多没碰过了）</li><li>Java 怎么样？（感觉我凉凉了 他们很重视Java的样子）</li><li>学校教的啥框架？（我回答 微软全家桶 .NET + SQL Server + Xamarin 都是C#的东西 感觉更加 雪上加霜）</li></ul><p>最后有啥要问的</p><ul><li>我问面试官能否给我一点建议（建议我做复杂点的项目）</li><li>我问是不是咨询不太像大厂螺丝钉，前端后端什么的分的比较清楚，而是想招 General SDE，做啥具体看组（是的，所以需要你不停学习新技术）</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;申请职位 ： Project Intern - STEM Majors (For External Client Services) - Guangzhou&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;面试的姐姐上来让我做了一小段英文的自我介绍&lt;/p
      
    
    </summary>
    
    
    
      <category term="Interview" scheme="http://yoursite.com/tags/Interview/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 41. First Missing Positive</title>
    <link href="http://yoursite.com/2020/06/09/LeetCode-41-First-Missing-Positive/"/>
    <id>http://yoursite.com/2020/06/09/LeetCode-41-First-Missing-Positive/</id>
    <published>2020-06-09T07:47:40.000Z</published>
    <updated>2020-06-09T08:41:03.664Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Given an unsorted integer array, find the smallest missing positive integer.</p><p><strong>Example 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [1,2,0]</span><br><span class="line">Output: 3</span><br></pre></td></tr></table></figure><p><strong>Example 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [3,4,-1,1]</span><br><span class="line">Output: 2</span><br></pre></td></tr></table></figure><p><strong>Example 3:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [7,8,9,11,12]</span><br><span class="line">Output: 1</span><br></pre></td></tr></table></figure><p><strong>Note:</strong></p><p>Your algorithm should run in <em>O</em>(<em>n</em>) time and uses constant extra space.</p></blockquote><p>O(N) =&gt; First sort the array , put every element into the right place if I can</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number[]&#125;</span> <span class="variable">nums</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;number&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> firstMissingPositive = <span class="function"><span class="keyword">function</span>(<span class="params">nums</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> swap = <span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> t = nums[a];</span><br><span class="line">        nums[a] = nums[b]</span><br><span class="line">        nums[b] = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;nums.length) &#123;</span><br><span class="line">        <span class="keyword">if</span>(nums[i]&gt;<span class="number">0</span> &amp;&amp; nums[i]&lt;=nums.length &amp;&amp; nums[nums[i]<span class="number">-1</span>]!==nums[i] ) &#123;</span><br><span class="line">            swap(i,nums[i]<span class="number">-1</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="comment">// Don't use for loop or you will find some glitch after swap</span></span><br><span class="line">  <span class="comment">// Like [...,3,4,1...]</span></span><br><span class="line">  <span class="comment">// 1 comes after and would be swap to a place not considering again</span></span><br><span class="line">  <span class="comment">// Remember to wait to check the current combination after the swap !!!</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> j=<span class="number">0</span>;j&lt;nums.length;j++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(nums[j]!=j+<span class="number">1</span>) <span class="keyword">return</span> j+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> nums.length+<span class="number">1</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Given an unsorted integer array, find the smallest missing positive integer.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt;&lt;/p&gt;
&lt;figure 
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>R Data Analysis:Where it Pays to Attend College</title>
    <link href="http://yoursite.com/2020/06/08/R-Data-Analysis-Where-it-Pays-to-Attend-College/"/>
    <id>http://yoursite.com/2020/06/08/R-Data-Analysis-Where-it-Pays-to-Attend-College/</id>
    <published>2020-06-08T05:27:26.000Z</published>
    <updated>2020-06-08T15:00:35.653Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Huge thanks to WSJ &amp; Kaggle for the dataset : https://www.kaggle.com/wsj/college-salaries</p><p>It's summer again. High school kids are facing the question " which college ?". And junior / sophomore college kids are wondering what to choose as major.</p><p>So here is my very basic data analysis and hope this can help someone.</p></blockquote><h3 id="degrees-that-pay-back">Degrees that pay back</h3><h4 id="when-you-start-...">When you start ...</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; first_off_best &lt;- data.frame(major=degree_pay_back$Undergraduate.Major,start=degree_pay_back$Starting.Median.Salary)</span><br><span class="line">&gt; first_off_best &lt;- first_off_best[order(first_off_best$start,decreasing = <span class="literal">T</span>),]</span><br><span class="line">&gt; first_off_best &lt;- first_off_best[c(<span class="number">1</span>:<span class="number">10</span>),]</span><br></pre></td></tr></table></figure><table><thead><tr class="header"><th style="text-align: left;"></th><th style="text-align: left;">Major</th><th style="text-align: left;"><strong>Starting Median Salary</strong></th></tr></thead><tbody><tr class="odd"><td style="text-align: left;">44</td><td style="text-align: left;">Physician Assistant</td><td style="text-align: left;">$74,300.00</td></tr><tr class="even"><td style="text-align: left;">9</td><td style="text-align: left;">Chemical Engineering</td><td style="text-align: left;">$63,200.00</td></tr><tr class="odd"><td style="text-align: left;">13</td><td style="text-align: left;">Computer Engineering</td><td style="text-align: left;">$61,400.00</td></tr><tr class="even"><td style="text-align: left;">20</td><td style="text-align: left;">Electrical Engineering</td><td style="text-align: left;">$60,900.00</td></tr><tr class="odd"><td style="text-align: left;">39</td><td style="text-align: left;">Mechanical Engineering</td><td style="text-align: left;">$57,900.00</td></tr><tr class="even"><td style="text-align: left;">2</td><td style="text-align: left;">Aerospace Engineering</td><td style="text-align: left;">$57,700.00</td></tr><tr class="odd"><td style="text-align: left;">31</td><td style="text-align: left;">Industrial Engineering</td><td style="text-align: left;">$57,700.00</td></tr><tr class="even"><td style="text-align: left;">14</td><td style="text-align: left;">Computer Science</td><td style="text-align: left;">$55,900.00</td></tr><tr class="odd"><td style="text-align: left;">41</td><td style="text-align: left;">Nursing</td><td style="text-align: left;">$54,200.00</td></tr><tr class="even"><td style="text-align: left;">11</td><td style="text-align: left;">Civil Engineering</td><td style="text-align: left;">$53,900.00</td></tr></tbody></table><p>So if you want a rather high starting salary, you probably should study these majors ⬆️</p><h4 id="midlife-expectations">Midlife expectations</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; midlife_best &lt;- data.frame(major=degree_pay_back$Undergraduate.Major,mid=degree_pay_back$Mid.Career.Median.Salary)</span><br><span class="line">&gt; midlife_best &lt;- midlife_best[order(midlife_best$mid,decreasing = <span class="literal">T</span>),]</span><br><span class="line">&gt; midlife_best &lt;- midlife_best[c(<span class="number">1</span>:<span class="number">10</span>),]</span><br></pre></td></tr></table></figure><table><thead><tr class="header"><th style="text-align: left;"></th><th style="text-align: left;">Major</th><th style="text-align: left;"><strong>Mid-Career Median Salary</strong></th></tr></thead><tbody><tr class="odd"><td style="text-align: left;">18</td><td style="text-align: left;">Economics</td><td style="text-align: left;">$98,600.00</td></tr><tr class="even"><td style="text-align: left;">45</td><td style="text-align: left;">Physics</td><td style="text-align: left;">$97,300.00</td></tr><tr class="odd"><td style="text-align: left;">14</td><td style="text-align: left;">Computer Science</td><td style="text-align: left;">$95,500.00</td></tr><tr class="even"><td style="text-align: left;">31</td><td style="text-align: left;">Industrial Engineering</td><td style="text-align: left;">$94,700.00</td></tr><tr class="odd"><td style="text-align: left;">39</td><td style="text-align: left;">Mechanical Engineering</td><td style="text-align: left;">$93,600.00</td></tr><tr class="even"><td style="text-align: left;">38</td><td style="text-align: left;">Math</td><td style="text-align: left;">$92,400.00</td></tr><tr class="odd"><td style="text-align: left;">44</td><td style="text-align: left;">Physician Assistant</td><td style="text-align: left;">$91,700.00</td></tr><tr class="even"><td style="text-align: left;">11</td><td style="text-align: left;">Civil Engineering</td><td style="text-align: left;">$90,500.00</td></tr><tr class="odd"><td style="text-align: left;">15</td><td style="text-align: left;">Construction</td><td style="text-align: left;">$88,900.00</td></tr><tr class="even"><td style="text-align: left;">23</td><td style="text-align: left;">Finance</td><td style="text-align: left;">$88,300.00</td></tr></tbody></table><p>If you want a good salary when you are 30s / 40s, please consider these majors ⬆️</p><h4 id="life-long-good-salary">Life-long good salary</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; life_long_best &lt;- intersect(first_off_best$major,midlife_best$major)</span><br><span class="line">&gt; life_long_best &lt;- data.frame(life_long_best)</span><br></pre></td></tr></table></figure><table><thead><tr class="header"><th style="text-align: left;"></th><th style="text-align: left;">Major</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;">1</td><td style="text-align: left;">Physician Assistant</td></tr><tr class="even"><td style="text-align: left;">2</td><td style="text-align: left;">Mechanical Engineering</td></tr><tr class="odd"><td style="text-align: left;">3</td><td style="text-align: left;">Industrial Engineering</td></tr><tr class="even"><td style="text-align: left;">4</td><td style="text-align: left;">Computer Science</td></tr><tr class="odd"><td style="text-align: left;">5</td><td style="text-align: left;">Civil Engineering</td></tr></tbody></table><h4 id="majors-with-the-highest-pay-differentials">Majors with the highest pay differentials</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt; dollarToNumber &lt;- <span class="keyword">function</span>(vec,data) &#123;</span><br><span class="line">+ vec &lt;- gsub(<span class="string">"[$]"</span>,<span class="string">''</span>,data)</span><br><span class="line">+ vec &lt;- as.numeric(gsub(<span class="string">','</span>,<span class="string">''</span>,vec))</span><br><span class="line">+ &#125;</span><br><span class="line">// change currency to number</span><br><span class="line">&gt; salary_10_per &lt;- dollarToNumber(salary_10_per,degree_pay_back$Mid.Career.10th.Percentile.Salary)</span><br><span class="line">&gt; salary_90_per &lt;- dollarToNumber(salary_90_per,degree_pay_back$Mid.Career.90th.Percentile.Salary)</span><br><span class="line">&gt; num_diff &lt;- salary_90_per-salary_10_per</span><br><span class="line">&gt; salary_50_per &lt;- dollarToNumber(salary_50_per,degree_pay_back$Mid.Career.Median.Salary)</span><br><span class="line">&gt; per_diff &lt;- num_diff*<span class="number">100</span>/salary_50_per</span><br><span class="line">&gt; midlife_best &lt;- data.frame(major = degree_pay_back$Undergraduate.Major,low = salary_10_per,mid=salary_50_per,high=salary_90_per,num_diff=num_diff,per_diff=per_diff)</span><br><span class="line">&gt; View(midlife_best)</span><br><span class="line">&gt; midlife_best &lt;- midlife_best[order(midlife_best$per_diff,decreasing = <span class="literal">T</span>),]</span><br><span class="line">&gt; View(midlife_best)</span><br></pre></td></tr></table></figure><table><thead><tr class="header"><th style="text-align: left;"></th><th style="text-align: left;">major</th><th style="text-align: left;">low</th><th style="text-align: left;">mid</th><th style="text-align: left;">high</th><th style="text-align: left;">high - low</th><th style="text-align: center;">(High - low) / mid</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;">17</td><td style="text-align: left;">Drama</td><td style="text-align: left;">36700</td><td style="text-align: left;">56900</td><td style="text-align: left;">153000</td><td style="text-align: left;">116300</td><td style="text-align: center;">204.39367</td></tr><tr class="even"><td style="text-align: left;">40</td><td style="text-align: left;">Music</td><td style="text-align: left;">26700</td><td style="text-align: left;">55000</td><td style="text-align: left;">134000</td><td style="text-align: left;">107300</td><td style="text-align: center;">195.09091</td></tr><tr class="odd"><td style="text-align: left;">4</td><td style="text-align: left;">Anthropology</td><td style="text-align: left;">33800</td><td style="text-align: left;">61500</td><td style="text-align: left;">138000</td><td style="text-align: left;">104200</td><td style="text-align: center;">169.43089</td></tr><tr class="even"><td style="text-align: left;">23</td><td style="text-align: left;">Finance</td><td style="text-align: left;">47200</td><td style="text-align: left;">88300</td><td style="text-align: left;">195000</td><td style="text-align: left;">147800</td><td style="text-align: center;">167.38392</td></tr><tr class="odd"><td style="text-align: left;">37</td><td style="text-align: left;">Marketing</td><td style="text-align: left;">42100</td><td style="text-align: left;">79600</td><td style="text-align: left;">175000</td><td style="text-align: left;">132900</td><td style="text-align: center;">166.95980</td></tr><tr class="even"><td style="text-align: left;">43</td><td style="text-align: left;">Philosophy</td><td style="text-align: left;">35500</td><td style="text-align: left;">81200</td><td style="text-align: left;">168000</td><td style="text-align: left;">132500</td><td style="text-align: center;">163.17734</td></tr><tr class="odd"><td style="text-align: left;">46</td><td style="text-align: left;">Political Science</td><td style="text-align: left;">41200</td><td style="text-align: left;">78200</td><td style="text-align: left;">168000</td><td style="text-align: left;">126800</td><td style="text-align: center;">162.14834</td></tr><tr class="even"><td style="text-align: left;">18</td><td style="text-align: left;">Economics</td><td style="text-align: left;">50600</td><td style="text-align: left;">98600</td><td style="text-align: left;">210000</td><td style="text-align: left;">159400</td><td style="text-align: center;">161.66329</td></tr><tr class="odd"><td style="text-align: left;">35</td><td style="text-align: left;">Journalism</td><td style="text-align: left;">38400</td><td style="text-align: left;">66700</td><td style="text-align: left;">145000</td><td style="text-align: left;">106600</td><td style="text-align: center;">159.82009</td></tr><tr class="even"><td style="text-align: left;">3</td><td style="text-align: left;">Agriculture</td><td style="text-align: left;">36300</td><td style="text-align: left;">71900</td><td style="text-align: left;">150000</td><td style="text-align: left;">113700</td><td style="text-align: center;">158.13630</td></tr><tr class="odd"><td style="text-align: left;">47</td><td style="text-align: left;">Psychology</td><td style="text-align: left;">31600</td><td style="text-align: left;">60400</td><td style="text-align: left;">127000</td><td style="text-align: left;">95400</td><td style="text-align: center;">157.94702</td></tr><tr class="even"><td style="text-align: left;">29</td><td style="text-align: left;">History</td><td style="text-align: left;">37000</td><td style="text-align: left;">71000</td><td style="text-align: left;">149000</td><td style="text-align: left;">112000</td><td style="text-align: center;">157.74648</td></tr><tr class="odd"><td style="text-align: left;">21</td><td style="text-align: left;">English</td><td style="text-align: left;">33400</td><td style="text-align: left;">64700</td><td style="text-align: left;">133000</td><td style="text-align: left;">99600</td><td style="text-align: center;">153.94127</td></tr><tr class="even"><td style="text-align: left;">30</td><td style="text-align: left;">Hospitality &amp; Tourism</td><td style="text-align: left;">35500</td><td style="text-align: left;">57500</td><td style="text-align: left;">124000</td><td style="text-align: left;">88500</td><td style="text-align: center;">153.91304</td></tr><tr class="odd"><td style="text-align: left;">7</td><td style="text-align: left;">Biology</td><td style="text-align: left;">36900</td><td style="text-align: left;">64800</td><td style="text-align: left;">135000</td><td style="text-align: left;">98100</td><td style="text-align: center;">151.38889</td></tr><tr class="even"><td style="text-align: left;">12</td><td style="text-align: left;">Communications</td><td style="text-align: left;">37500</td><td style="text-align: left;">70000</td><td style="text-align: left;">143000</td><td style="text-align: left;">105500</td><td style="text-align: center;">150.71429</td></tr><tr class="odd"><td style="text-align: left;">8</td><td style="text-align: left;">Business Management</td><td style="text-align: left;">38800</td><td style="text-align: left;">72100</td><td style="text-align: left;">147000</td><td style="text-align: left;">108200</td><td style="text-align: center;">150.06935</td></tr><tr class="even"><td style="text-align: left;">49</td><td style="text-align: left;">Sociology</td><td style="text-align: left;">30700</td><td style="text-align: left;">58200</td><td style="text-align: left;">118000</td><td style="text-align: left;">87300</td><td style="text-align: center;">150.00000</td></tr><tr class="odd"><td style="text-align: left;">38</td><td style="text-align: left;">Math</td><td style="text-align: left;">45200</td><td style="text-align: left;">92400</td><td style="text-align: left;">183000</td><td style="text-align: left;">137800</td><td style="text-align: center;">149.13420</td></tr><tr class="even"><td style="text-align: left;">22</td><td style="text-align: left;">Film</td><td style="text-align: left;">33900</td><td style="text-align: left;">68500</td><td style="text-align: left;">136000</td><td style="text-align: left;">102100</td><td style="text-align: center;">149.05109</td></tr><tr class="odd"><td style="text-align: left;">6</td><td style="text-align: left;">Art History</td><td style="text-align: left;">28800</td><td style="text-align: left;">64900</td><td style="text-align: left;">125000</td><td style="text-align: left;">96200</td><td style="text-align: center;">148.22804</td></tr><tr class="even"><td style="text-align: left;">34</td><td style="text-align: left;">International Relations</td><td style="text-align: left;">38200</td><td style="text-align: left;">80900</td><td style="text-align: left;">157000</td><td style="text-align: left;">118800</td><td style="text-align: center;">146.84796</td></tr><tr class="odd"><td style="text-align: left;">1</td><td style="text-align: left;">Accounting</td><td style="text-align: left;">42200</td><td style="text-align: left;">77100</td><td style="text-align: left;">152000</td><td style="text-align: left;">109800</td><td style="text-align: center;">142.41245</td></tr><tr class="even"><td style="text-align: left;">25</td><td style="text-align: left;">Geography</td><td style="text-align: left;">40000</td><td style="text-align: left;">65500</td><td style="text-align: left;">132000</td><td style="text-align: left;">92000</td><td style="text-align: center;">140.45802</td></tr><tr class="odd"><td style="text-align: left;">19</td><td style="text-align: left;">Education</td><td style="text-align: left;">29300</td><td style="text-align: left;">52000</td><td style="text-align: left;">102000</td><td style="text-align: left;">72700</td><td style="text-align: center;">139.80769</td></tr><tr class="even"><td style="text-align: left;">26</td><td style="text-align: left;">Geology</td><td style="text-align: left;">45000</td><td style="text-align: left;">79500</td><td style="text-align: left;">156000</td><td style="text-align: left;">111000</td><td style="text-align: center;">139.62264</td></tr><tr class="odd"><td style="text-align: left;">33</td><td style="text-align: left;">Interior Design</td><td style="text-align: left;">35700</td><td style="text-align: left;">53200</td><td style="text-align: left;">107000</td><td style="text-align: left;">71300</td><td style="text-align: center;">134.02256</td></tr><tr class="even"><td style="text-align: left;">16</td><td style="text-align: left;">Criminal Justice</td><td style="text-align: left;">32200</td><td style="text-align: left;">56300</td><td style="text-align: left;">107000</td><td style="text-align: left;">74800</td><td style="text-align: center;">132.85968</td></tr><tr class="odd"><td style="text-align: left;">15</td><td style="text-align: left;">Construction</td><td style="text-align: left;">56300</td><td style="text-align: left;">88900</td><td style="text-align: left;">171000</td><td style="text-align: left;">114700</td><td style="text-align: center;">129.02137</td></tr><tr class="even"><td style="text-align: left;">10</td><td style="text-align: left;">Chemistry</td><td style="text-align: left;">45300</td><td style="text-align: left;">79900</td><td style="text-align: left;">148000</td><td style="text-align: left;">102700</td><td style="text-align: center;">128.53567</td></tr><tr class="odd"><td style="text-align: left;">48</td><td style="text-align: left;">Religion</td><td style="text-align: left;">29700</td><td style="text-align: left;">52000</td><td style="text-align: left;">96400</td><td style="text-align: left;">66700</td><td style="text-align: center;">128.26923</td></tr><tr class="even"><td style="text-align: left;">27</td><td style="text-align: left;">Graphic Design</td><td style="text-align: left;">36000</td><td style="text-align: left;">59800</td><td style="text-align: left;">112000</td><td style="text-align: left;">76000</td><td style="text-align: center;">127.09030</td></tr><tr class="odd"><td style="text-align: left;">45</td><td style="text-align: left;">Physics</td><td style="text-align: left;">56000</td><td style="text-align: left;">97300</td><td style="text-align: left;">178000</td><td style="text-align: left;">122000</td><td style="text-align: center;">125.38541</td></tr><tr class="even"><td style="text-align: left;">50</td><td style="text-align: left;">Spanish</td><td style="text-align: left;">31000</td><td style="text-align: left;">53100</td><td style="text-align: left;">96400</td><td style="text-align: left;">65400</td><td style="text-align: center;">123.16384</td></tr><tr class="odd"><td style="text-align: left;">31</td><td style="text-align: left;">Industrial Engineering</td><td style="text-align: left;">57100</td><td style="text-align: left;">94700</td><td style="text-align: left;">173000</td><td style="text-align: left;">115900</td><td style="text-align: center;">122.38648</td></tr><tr class="even"><td style="text-align: left;">36</td><td style="text-align: left;">Management Information Systems (MIS)</td><td style="text-align: left;">45300</td><td style="text-align: left;">82300</td><td style="text-align: left;">146000</td><td style="text-align: left;">100700</td><td style="text-align: center;">122.35723</td></tr><tr class="odd"><td style="text-align: left;">42</td><td style="text-align: left;">Nutrition</td><td style="text-align: left;">33900</td><td style="text-align: left;">55300</td><td style="text-align: left;">99200</td><td style="text-align: left;">65300</td><td style="text-align: center;">118.08318</td></tr><tr class="even"><td style="text-align: left;">9</td><td style="text-align: left;">Chemical Engineering</td><td style="text-align: left;">71900</td><td style="text-align: left;">107000</td><td style="text-align: left;">194000</td><td style="text-align: left;">122100</td><td style="text-align: center;">114.11215</td></tr><tr class="odd"><td style="text-align: left;">32</td><td style="text-align: left;">Information Technology (IT)</td><td style="text-align: left;">44500</td><td style="text-align: left;">74800</td><td style="text-align: left;">129000</td><td style="text-align: left;">84500</td><td style="text-align: center;">112.96791</td></tr><tr class="even"><td style="text-align: left;">24</td><td style="text-align: left;">Forestry</td><td style="text-align: left;">41000</td><td style="text-align: left;">62600</td><td style="text-align: left;">111000</td><td style="text-align: left;">70000</td><td style="text-align: center;">111.82109</td></tr><tr class="odd"><td style="text-align: left;">5</td><td style="text-align: left;">Architecture</td><td style="text-align: left;">50600</td><td style="text-align: left;">76800</td><td style="text-align: left;">136000</td><td style="text-align: left;">85400</td><td style="text-align: center;">111.19792</td></tr><tr class="even"><td style="text-align: left;">28</td><td style="text-align: left;">Health Care Administration</td><td style="text-align: left;">34600</td><td style="text-align: left;">60600</td><td style="text-align: left;">101000</td><td style="text-align: left;">66400</td><td style="text-align: center;">109.57096</td></tr><tr class="odd"><td style="text-align: left;">39</td><td style="text-align: left;">Mechanical Engineering</td><td style="text-align: left;">63700</td><td style="text-align: left;">93600</td><td style="text-align: left;">163000</td><td style="text-align: left;">99300</td><td style="text-align: center;">106.08974</td></tr><tr class="even"><td style="text-align: left;">14</td><td style="text-align: left;">Computer Science</td><td style="text-align: left;">56000</td><td style="text-align: left;">95500</td><td style="text-align: left;">154000</td><td style="text-align: left;">98000</td><td style="text-align: center;">102.61780</td></tr><tr class="odd"><td style="text-align: left;">20</td><td style="text-align: left;">Electrical Engineering</td><td style="text-align: left;">69300</td><td style="text-align: left;">103000</td><td style="text-align: left;">168000</td><td style="text-align: left;">98700</td><td style="text-align: center;">95.82524</td></tr><tr class="even"><td style="text-align: left;">2</td><td style="text-align: left;">Aerospace Engineering</td><td style="text-align: left;">64300</td><td style="text-align: left;">101000</td><td style="text-align: left;">161000</td><td style="text-align: left;">96700</td><td style="text-align: center;">95.74257</td></tr><tr class="odd"><td style="text-align: left;">11</td><td style="text-align: left;">Civil Engineering</td><td style="text-align: left;">63400</td><td style="text-align: left;">90500</td><td style="text-align: left;">148000</td><td style="text-align: left;">84600</td><td style="text-align: center;">93.48066</td></tr><tr class="even"><td style="text-align: left;">13</td><td style="text-align: left;">Computer Engineering</td><td style="text-align: left;">66100</td><td style="text-align: left;">105000</td><td style="text-align: left;">162000</td><td style="text-align: left;">95900</td><td style="text-align: center;">91.33333</td></tr><tr class="odd"><td style="text-align: left;">41</td><td style="text-align: left;">Nursing</td><td style="text-align: left;">47600</td><td style="text-align: left;">67000</td><td style="text-align: left;">98300</td><td style="text-align: left;">50700</td><td style="text-align: center;">75.67164</td></tr><tr class="even"><td style="text-align: left;">44</td><td style="text-align: left;">Physician Assistant</td><td style="text-align: left;">66400</td><td style="text-align: left;">91700</td><td style="text-align: left;">124000</td><td style="text-align: left;">57600</td><td style="text-align: center;">62.81352</td></tr></tbody></table><p>If you are an artist or you work in financial market, if you work really hard and are lucky enough, you can greatly outperform your peers!</p><h3 id="salaries-by-college-type">Salaries by college type</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; college_type$Starting.Median.Salary &lt;- dollarToNumber(college_type$Starting.Median.Salary,college_type$Starting.Median.Salary)</span><br><span class="line">// turn currency into number</span><br><span class="line">&gt; start_by_type &lt;-aggregate(x = college_type$Starting.Median.Salary,by = list(college_type$School.Type),FUN=mean)</span><br><span class="line">&gt; barplot(start_by_type$x,names.arg = start_by_type$Group.1,main = <span class="string">"Starting Median Salary by Different College Type"</span>,col = <span class="string">"#66ccff"</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/h9XHj23.png" /></p><p>If you are a new grad who go to an Ivy League or engineering school, the higher chance that you will get a well paid job.</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; college_type$Mid.Career.Median.Salary &lt;- dollarToNumber(college_type$Mid.Career.Median.Salary,college_type$Mid.Career.Median.Salary)</span><br><span class="line">&gt; midlife_by_type &lt;- aggregate(x = college_type$Mid.Career.Median.Salary,by=list(college_type$School.Type),FUN=mean)</span><br><span class="line">&gt; barplot(midlife_by_type$x,names.arg = midlife_by_type$Group.1,col = <span class="string">"#000080"</span>,main = <span class="string">"Mid-career Median Salary by Different College Type"</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/RyHgAqd.png" /></p><p>Ivy League graduates outdo all other students.</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; highest_salary &lt;- (c(college_type$Starting.Median.Salary)+c(college_type$Mid.Career.Median.Salary))/<span class="number">2</span></span><br><span class="line">&gt; highest_salary_df &lt;- data.frame(college=college_type$School.Name,median_salary=highest_salary)</span><br><span class="line">&gt; highest_salary_df &lt;- highest_salary_df[order(highest_salary_df$median_salary,decreasing = <span class="literal">T</span>),]</span><br><span class="line">&gt; highest_salary_df &lt;- highest_salary_df[c(<span class="number">1</span>:<span class="number">25</span>),]</span><br></pre></td></tr></table></figure><table><thead><tr class="header"><th style="text-align: left;"></th><th style="text-align: left;">college</th><th style="text-align: left;">median salary</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;">2</td><td style="text-align: left;">California Institute of Technology (CIT)</td><td style="text-align: left;">99250</td></tr><tr class="even"><td style="text-align: left;">1</td><td style="text-align: left;">Massachusetts Institute of Technology (MIT)</td><td style="text-align: left;">99100</td></tr><tr class="odd"><td style="text-align: left;">88</td><td style="text-align: left;">Princeton University</td><td style="text-align: left;">98750</td></tr><tr class="even"><td style="text-align: left;">3</td><td style="text-align: left;">Harvey Mudd College</td><td style="text-align: left;">96900</td></tr><tr class="odd"><td style="text-align: left;">87</td><td style="text-align: left;">Dartmouth College</td><td style="text-align: left;">96000</td></tr><tr class="even"><td style="text-align: left;">90</td><td style="text-align: left;">Harvard University</td><td style="text-align: left;">93700</td></tr><tr class="odd"><td style="text-align: left;">89</td><td style="text-align: left;">Yale University</td><td style="text-align: left;">92550</td></tr><tr class="even"><td style="text-align: left;">91</td><td style="text-align: left;">University of Pennsylvania</td><td style="text-align: left;">90450</td></tr><tr class="odd"><td style="text-align: left;">4</td><td style="text-align: left;">Polytechnic University of New York, Brooklyn</td><td style="text-align: left;">88200</td></tr><tr class="even"><td style="text-align: left;">5</td><td style="text-align: left;">Cooper Union</td><td style="text-align: left;">88100</td></tr><tr class="odd"><td style="text-align: left;">6</td><td style="text-align: left;">Worcester Polytechnic Institute (WPI)</td><td style="text-align: left;">87500</td></tr><tr class="even"><td style="text-align: left;">7</td><td style="text-align: left;">Carnegie Mellon University (CMU)</td><td style="text-align: left;">86400</td></tr><tr class="odd"><td style="text-align: left;">95</td><td style="text-align: left;">University of California, Berkeley</td><td style="text-align: left;">85950</td></tr><tr class="even"><td style="text-align: left;">8</td><td style="text-align: left;">Rensselaer Polytechnic Institute (RPI)</td><td style="text-align: left;">85550</td></tr><tr class="odd"><td style="text-align: left;">92</td><td style="text-align: left;">Cornell University</td><td style="text-align: left;">85150</td></tr><tr class="even"><td style="text-align: left;">94</td><td style="text-align: left;">Columbia University</td><td style="text-align: left;">83200</td></tr><tr class="odd"><td style="text-align: left;">11</td><td style="text-align: left;">Stevens Institute of Technology</td><td style="text-align: left;">82800</td></tr><tr class="even"><td style="text-align: left;">93</td><td style="text-align: left;">Brown University</td><td style="text-align: left;">82600</td></tr><tr class="odd"><td style="text-align: left;">9</td><td style="text-align: left;">Georgia Institute of Technology</td><td style="text-align: left;">82150</td></tr><tr class="even"><td style="text-align: left;">10</td><td style="text-align: left;">Colorado School of Mines</td><td style="text-align: left;">82050</td></tr><tr class="odd"><td style="text-align: left;">40</td><td style="text-align: left;">Bucknell University</td><td style="text-align: left;">82050</td></tr><tr class="even"><td style="text-align: left;">42</td><td style="text-align: left;">Amherst College</td><td style="text-align: left;">80750</td></tr><tr class="odd"><td style="text-align: left;">43</td><td style="text-align: left;">Lafayette College</td><td style="text-align: left;">80450</td></tr><tr class="even"><td style="text-align: left;">41</td><td style="text-align: left;">Colgate University</td><td style="text-align: left;">80400</td></tr><tr class="odd"><td style="text-align: left;">97</td><td style="text-align: left;">Cal Poly San Luis Obispo</td><td style="text-align: left;">79100</td></tr></tbody></table><h3 id="salary-by-region">Salary by region</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; salary_by_region$Starting.Median.Salary &lt;- dollarToNumber(salary_by_region$Starting.Median.Salary,salary_by_region$Starting.Median.Salary)</span><br><span class="line">&gt; salary_by_region$Mid.Career.Median.Salary &lt;- dollarToNumber(salary_by_region$Mid.Career.Median.Salary,salary_by_region$Mid.Career.Median.Salary)</span><br><span class="line">&gt; salary_by_region$mean_median &lt;- c(salary_by_region$Starting.Median.Salary+salary_by_region$Mid.Career.Median.Salary)/<span class="number">2</span></span><br><span class="line">&gt; salary_mean &lt;- aggregate(x=salary_by_region$mean_median,by=list(salary_by_region$Region),FUN=mean)</span><br><span class="line">&gt; barplot(salary_mean$x,xlab=<span class="string">"Region"</span>,ylab=<span class="string">"Median salary"</span>,main=<span class="string">"Median Salary by Region"</span>,col=<span class="string">"#008080"</span>,names.arg = salary_mean$Group.1,ylim = c(<span class="number">0</span>,<span class="number">80000</span>))</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/bDpjSMb.png" /></p><p>If you want more money, Cali or Northeastern region might be the best choice !</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Huge thanks to WSJ &amp;amp; Kaggle for the dataset : https://www.kaggle.com/wsj/college-salaries&lt;/p&gt;
&lt;p&gt;It&#39;s summer again. High
      
    
    </summary>
    
    
    
      <category term="R" scheme="http://yoursite.com/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 40. Combination Sum II</title>
    <link href="http://yoursite.com/2020/06/08/LeetCode-40-Combination-Sum-II/"/>
    <id>http://yoursite.com/2020/06/08/LeetCode-40-Combination-Sum-II/</id>
    <published>2020-06-08T04:54:20.000Z</published>
    <updated>2020-06-08T04:55:22.709Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Given a collection of candidate numbers (<code>candidates</code>) and a target number (<code>target</code>), find all unique combinations in <code>candidates</code> where the candidate numbers sums to <code>target</code>.</p><p>Each number in <code>candidates</code> may only be used <strong>once</strong> in the combination.</p><p><strong>Note:</strong></p><ul><li>All numbers (including <code>target</code>) will be positive integers.</li><li>The solution set must not contain duplicate combinations.</li></ul><p><strong>Example 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Input: candidates &#x3D; [10,1,2,7,6,1,5], target &#x3D; 8,</span><br><span class="line">A solution set is:</span><br><span class="line">[</span><br><span class="line">  [1, 7],</span><br><span class="line">  [1, 2, 5],</span><br><span class="line">  [2, 6],</span><br><span class="line">  [1, 1, 6]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><strong>Example 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Input: candidates &#x3D; [2,5,2,1,2], target &#x3D; 5,</span><br><span class="line">A solution set is:</span><br><span class="line">[</span><br><span class="line">  [1,2,2],</span><br><span class="line">  [5]</span><br><span class="line">]</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number[]&#125;</span> <span class="variable">candidates</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> <span class="variable">target</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;number[][]&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> combinationSum2 = <span class="function"><span class="keyword">function</span>(<span class="params">candidates, target</span>) </span>&#123;</span><br><span class="line">    candidates.sort(<span class="function">(<span class="params">a,b</span>)=&gt;</span>a-b);</span><br><span class="line">    <span class="keyword">let</span> res = [];</span><br><span class="line">    <span class="keyword">let</span> dfs = <span class="function"><span class="keyword">function</span>(<span class="params">id,n,comb</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// id : index of current element, n : target , comb : path array</span></span><br><span class="line">        <span class="keyword">if</span>(n===<span class="number">0</span>) &#123;</span><br><span class="line">            res.push(comb);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i=id;i&lt;candidates.length;i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(candidates[i]&lt;=n) &#123;</span><br><span class="line">                dfs(i+<span class="number">1</span>, n - candidates[i], [...comb, candidates[i]]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(candidates[i+<span class="number">1</span>]===candidates[i]) &#123;</span><br><span class="line">                  i++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(<span class="number">0</span>,target,[]);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Given a collection of candidate numbers (&lt;code&gt;candidates&lt;/code&gt;) and a target number (&lt;code&gt;target&lt;/code&gt;), find all unique
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Data Analysis with R: College Admission</title>
    <link href="http://yoursite.com/2020/06/06/Data-Analysis-with-R-College-Admission/"/>
    <id>http://yoursite.com/2020/06/06/Data-Analysis-with-R-College-Admission/</id>
    <published>2020-06-06T07:14:57.000Z</published>
    <updated>2020-06-08T05:13:50.654Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Data source : https://www.kaggle.com/samsonqian/college-admissions/data#</p><p>Huge thanks to the provider of the dataset ! 🙏</p><p>As a junior student who wanted to apply for American universities this year yet interrupted by the COVID-19 pandemic, I feel very distressed and lost during the past few months.</p><p>I don't know what to do anymore. Everything derails my plans.</p><p>So I thought maybe I should get myself together and gap one or two years.</p><p>Now I have a new start.</p><p>During my gap year at least I can do more research on the admission system (though what I get is undergrad admission data) and prepare myself. That's why I want to write this piece.</p><p>Also I want to practice my R skill in the real world 🥳</p></blockquote><h4 id="the-most-selective-colleges">The most selective colleges ?</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; data.admission_rate &lt;- data$Admissions.total/data$Applicants.total*<span class="number">100</span></span><br><span class="line">&gt; data.enroll_rate &lt;- data$Enrolled.total/data$Admissions.total*<span class="number">100</span></span><br><span class="line">&gt; ad_en &lt;- data.frame(name = data$Name, ad = data.admission_rate, en = data.enroll_rate)</span><br></pre></td></tr></table></figure><p>Well, I find some <code>NA</code> so I need to clean the data first.</p><p>Filter out all rows has <code>NA</code> :</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; ad_en &lt;- ad_en[!(is.na(ad_en$ad)|is.na(ad_en$en)),]</span><br></pre></td></tr></table></figure><p><del>Be careful about rows and columns in R, never forget the coma !!! 😭</del></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; ad_top_100 &lt;- ad_en[order(ad_en$ad),]</span><br><span class="line">&gt; ad_top_100 &lt;- ad_top_100[c(<span class="number">1</span>,<span class="number">100</span>),]</span><br></pre></td></tr></table></figure><p>Let's check out the top 100 most admission selective colleges :</p><table><colgroup><col style="width: 4%" /><col style="width: 62%" /><col style="width: 18%" /><col style="width: 14%" /></colgroup><thead><tr class="header"><th style="text-align: left;"></th><th style="text-align: left;">name</th><th style="text-align: left;">Admission rate %</th><th style="text-align: left;">enroll rate %</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;">1470</td><td style="text-align: left;">Stanford University</td><td style="text-align: left;">5.686618</td><td style="text-align: left;">75.95109</td></tr><tr class="even"><td style="text-align: left;">545</td><td style="text-align: left;">Harvard University</td><td style="text-align: left;">5.844731</td><td style="text-align: left;">81.04543</td></tr><tr class="odd"><td style="text-align: left;">180</td><td style="text-align: left;">Yale University</td><td style="text-align: left;">7.050419</td><td style="text-align: left;">66.37298</td></tr><tr class="even"><td style="text-align: left;">761</td><td style="text-align: left;">Princeton University</td><td style="text-align: left;">7.407827</td><td style="text-align: left;">65.46103</td></tr><tr class="odd"><td style="text-align: left;">794</td><td style="text-align: left;">Columbia University in the City of New York</td><td style="text-align: left;">7.415780</td><td style="text-align: left;">59.90686</td></tr><tr class="even"><td style="text-align: left;">796</td><td style="text-align: left;">Cooper Union for the Advancement of Science and Art</td><td style="text-align: left;">7.735672</td><td style="text-align: left;">75.30364</td></tr><tr class="odd"><td style="text-align: left;">552</td><td style="text-align: left;">Massachusetts Institute of Technology</td><td style="text-align: left;">8.152088</td><td style="text-align: left;">72.02842</td></tr><tr class="even"><td style="text-align: left;">290</td><td style="text-align: left;">University of Chicago</td><td style="text-align: left;">8.810718</td><td style="text-align: left;">53.40824</td></tr><tr class="odd"><td style="text-align: left;">1173</td><td style="text-align: left;">Brown University</td><td style="text-align: left;">9.177357</td><td style="text-align: left;">58.13866</td></tr><tr class="even"><td style="text-align: left;">735</td><td style="text-align: left;">Dartmouth College</td><td style="text-align: left;">9.779316</td><td style="text-align: left;">48.58407</td></tr><tr class="odd"><td style="text-align: left;">65</td><td style="text-align: left;">California Institute of Technology</td><td style="text-align: left;">10.551039</td><td style="text-align: left;">42.63699</td></tr><tr class="even"><td style="text-align: left;">95</td><td style="text-align: left;">Claremont McKenna College</td><td style="text-align: left;">11.725263</td><td style="text-align: left;">52.08655</td></tr><tr class="odd"><td style="text-align: left;">1141</td><td style="text-align: left;">University of Pennsylvania</td><td style="text-align: left;">12.243463</td><td style="text-align: left;">63.21149</td></tr><tr class="even"><td style="text-align: left;">1258</td><td style="text-align: left;">Vanderbilt University</td><td style="text-align: left;">12.743175</td><td style="text-align: left;">40.70149</td></tr><tr class="odd"><td style="text-align: left;">691</td><td style="text-align: left;">College of the Ozarks</td><td style="text-align: left;">13.007319</td><td style="text-align: left;">91.30435</td></tr><tr class="even"><td style="text-align: left;">911</td><td style="text-align: left;">Duke University</td><td style="text-align: left;">13.422664</td><td style="text-align: left;">42.04072</td></tr><tr class="odd"><td style="text-align: left;">664</td><td style="text-align: left;">Rust College</td><td style="text-align: left;">13.864213</td><td style="text-align: left;">65.67506</td></tr><tr class="even"><td style="text-align: left;">125</td><td style="text-align: left;">Pomona College</td><td style="text-align: left;">13.924228</td><td style="text-align: left;">39.85944</td></tr><tr class="odd"><td style="text-align: left;">523</td><td style="text-align: left;">Amherst College</td><td style="text-align: left;">14.280308</td><td style="text-align: left;">41.16608</td></tr><tr class="even"><td style="text-align: left;">1159</td><td style="text-align: left;">Swarthmore College</td><td style="text-align: left;">14.315949</td><td style="text-align: left;">40.97149</td></tr><tr class="odd"><td style="text-align: left;">123</td><td style="text-align: left;">Pitzer College</td><td style="text-align: left;">14.507898</td><td style="text-align: left;">43.71859</td></tr><tr class="even"><td style="text-align: left;">482</td><td style="text-align: left;">Bowdoin College</td><td style="text-align: left;">14.946115</td><td style="text-align: left;">47.15370</td></tr><tr class="odd"><td style="text-align: left;">321</td><td style="text-align: left;">Northwestern University</td><td style="text-align: left;">15.321273</td><td style="text-align: left;">41.46987</td></tr><tr class="even"><td style="text-align: left;">699</td><td style="text-align: left;">Washington University in St Louis</td><td style="text-align: left;">15.552678</td><td style="text-align: left;">34.37233</td></tr><tr class="odd"><td style="text-align: left;">797</td><td style="text-align: left;">Cornell University</td><td style="text-align: left;">15.555389</td><td style="text-align: left;">51.80006</td></tr><tr class="even"><td style="text-align: left;">1293</td><td style="text-align: left;">Rice University</td><td style="text-align: left;">16.743432</td><td style="text-align: left;">37.89229</td></tr><tr class="odd"><td style="text-align: left;">190</td><td style="text-align: left;">Georgetown University</td><td style="text-align: left;">16.967437</td><td style="text-align: left;">46.00059</td></tr><tr class="even"><td style="text-align: left;">578</td><td style="text-align: left;">Williams College</td><td style="text-align: left;">17.017966</td><td style="text-align: left;">45.46966</td></tr><tr class="odd"><td style="text-align: left;">1349</td><td style="text-align: left;">Middlebury College</td><td style="text-align: left;">17.158359</td><td style="text-align: left;">39.39394</td></tr><tr class="even"><td style="text-align: left;">82</td><td style="text-align: left;">University of California-Berkeley</td><td style="text-align: left;">17.998282</td><td style="text-align: left;">37.46849</td></tr><tr class="odd"><td style="text-align: left;">504</td><td style="text-align: left;">Johns Hopkins University</td><td style="text-align: left;">18.133671</td><td style="text-align: left;">35.92660</td></tr><tr class="even"><td style="text-align: left;">101</td><td style="text-align: left;">Harvey Mudd College</td><td style="text-align: left;">18.168974</td><td style="text-align: left;">33.74806</td></tr><tr class="odd"><td style="text-align: left;">1397</td><td style="text-align: left;">Washington and Lee University</td><td style="text-align: left;">18.434587</td><td style="text-align: left;">41.84830</td></tr><tr class="even"><td style="text-align: left;">571</td><td style="text-align: left;">Tufts University</td><td style="text-align: left;">18.844671</td><td style="text-align: left;">37.85653</td></tr><tr class="odd"><td style="text-align: left;">138</td><td style="text-align: left;">University of Southern California</td><td style="text-align: left;">19.838253</td><td style="text-align: left;">31.10165</td></tr><tr class="even"><td style="text-align: left;">233</td><td style="text-align: left;">Albany State University</td><td style="text-align: left;">19.915152</td><td style="text-align: left;">30.49300</td></tr><tr class="odd"><td style="text-align: left;">787</td><td style="text-align: left;">Barnard College</td><td style="text-align: left;">20.531573</td><td style="text-align: left;">50.39096</td></tr><tr class="even"><td style="text-align: left;">178</td><td style="text-align: left;">Wesleyan University</td><td style="text-align: left;">20.923751</td><td style="text-align: left;">35.77545</td></tr><tr class="odd"><td style="text-align: left;">626</td><td style="text-align: left;">Carleton College</td><td style="text-align: left;">20.951029</td><td style="text-align: left;">35.70461</td></tr><tr class="even"><td style="text-align: left;">325</td><td style="text-align: left;">Robert Morris University Illinois</td><td style="text-align: left;">21.004902</td><td style="text-align: left;">83.89732</td></tr><tr class="odd"><td style="text-align: left;">1372</td><td style="text-align: left;">Liberty University</td><td style="text-align: left;">21.652724</td><td style="text-align: left;">45.07448</td></tr><tr class="even"><td style="text-align: left;">85</td><td style="text-align: left;">University of California-Los Angeles</td><td style="text-align: left;">21.989378</td><td style="text-align: left;">35.16676</td></tr><tr class="odd"><td style="text-align: left;">683</td><td style="text-align: left;">Missouri Valley College</td><td style="text-align: left;">22.181146</td><td style="text-align: left;">86.45833</td></tr><tr class="even"><td style="text-align: left;">148</td><td style="text-align: left;">Colorado College</td><td style="text-align: left;">22.283737</td><td style="text-align: left;">40.52795</td></tr><tr class="odd"><td style="text-align: left;">368</td><td style="text-align: left;">University of Notre Dame</td><td style="text-align: left;">22.304074</td><td style="text-align: left;">52.59146</td></tr><tr class="even"><td style="text-align: left;">661</td><td style="text-align: left;">Mississippi Valley State University</td><td style="text-align: left;">22.716327</td><td style="text-align: left;">34.84099</td></tr><tr class="odd"><td style="text-align: left;">805</td><td style="text-align: left;">CUNY Lehman College</td><td style="text-align: left;">23.276195</td><td style="text-align: left;">15.25471</td></tr><tr class="even"><td style="text-align: left;">1238</td><td style="text-align: left;">Le Moyne-Owen College</td><td style="text-align: left;">23.349436</td><td style="text-align: left;">65.51724</td></tr><tr class="odd"><td style="text-align: left;">1093</td><td style="text-align: left;">Haverford College</td><td style="text-align: left;">23.486750</td><td style="text-align: left;">39.19240</td></tr><tr class="even"><td style="text-align: left;">898</td><td style="text-align: left;">Vassar College</td><td style="text-align: left;">24.114782</td><td style="text-align: left;">36.35371</td></tr><tr class="odd"><td style="text-align: left;">481</td><td style="text-align: left;">Bates College</td><td style="text-align: left;">24.165554</td><td style="text-align: left;">39.46330</td></tr><tr class="even"><td style="text-align: left;">798</td><td style="text-align: left;">CUNY Bernard M Baruch College</td><td style="text-align: left;">24.825052</td><td style="text-align: left;">24.03164</td></tr><tr class="odd"><td style="text-align: left;">1073</td><td style="text-align: left;">Carnegie Mellon University</td><td style="text-align: left;">25.487185</td><td style="text-align: left;">29.96052</td></tr><tr class="even"><td style="text-align: left;">910</td><td style="text-align: left;">Davidson College</td><td style="text-align: left;">25.605901</td><td style="text-align: left;">39.75309</td></tr><tr class="odd"><td style="text-align: left;">483</td><td style="text-align: left;">Colby College</td><td style="text-align: left;">26.040318</td><td style="text-align: left;">34.30398</td></tr><tr class="even"><td style="text-align: left;">842</td><td style="text-align: left;">New York University</td><td style="text-align: left;">26.045466</td><td style="text-align: left;">34.56126</td></tr><tr class="odd"><td style="text-align: left;">245</td><td style="text-align: left;">Emory University</td><td style="text-align: left;">26.334764</td><td style="text-align: left;">29.61756</td></tr><tr class="even"><td style="text-align: left;">792</td><td style="text-align: left;">Colgate University</td><td style="text-align: left;">26.379269</td><td style="text-align: left;">34.35944</td></tr><tr class="odd"><td style="text-align: left;">478</td><td style="text-align: left;">Tulane University of Louisiana</td><td style="text-align: left;">26.429188</td><td style="text-align: left;">20.21103</td></tr><tr class="even"><td style="text-align: left;">817</td><td style="text-align: left;">Hamilton College</td><td style="text-align: left;">27.187562</td><td style="text-align: left;">35.99707</td></tr><tr class="odd"><td style="text-align: left;">200</td><td style="text-align: left;">Edward Waters College</td><td style="text-align: left;">27.320399</td><td style="text-align: left;">39.92322</td></tr><tr class="even"><td style="text-align: left;">931</td><td style="text-align: left;">University of North Carolina at Chapel Hill</td><td style="text-align: left;">27.594331</td><td style="text-align: left;">49.89168</td></tr><tr class="odd"><td style="text-align: left;">45</td><td style="text-align: left;">University of Arkansas at Pine Bluff</td><td style="text-align: left;">27.699072</td><td style="text-align: left;">50.08818</td></tr><tr class="even"><td style="text-align: left;">332</td><td style="text-align: left;">Shimer College</td><td style="text-align: left;">28.571429</td><td style="text-align: left;">100.00000</td></tr><tr class="odd"><td style="text-align: left;">289</td><td style="text-align: left;">Chicago State University</td><td style="text-align: left;">28.645334</td><td style="text-align: left;">18.46154</td></tr><tr class="even"><td style="text-align: left;">572</td><td style="text-align: left;">Wellesley College</td><td style="text-align: left;">29.108080</td><td style="text-align: left;">42.89834</td></tr><tr class="odd"><td style="text-align: left;">1069</td><td style="text-align: left;">Bucknell University</td><td style="text-align: left;">29.507990</td><td style="text-align: left;">39.78678</td></tr><tr class="even"><td style="text-align: left;">803</td><td style="text-align: left;">CUNY Hunter College</td><td style="text-align: left;">29.715846</td><td style="text-align: left;">21.56455</td></tr><tr class="odd"><td style="text-align: left;">1323</td><td style="text-align: left;">Texas Wesleyan University</td><td style="text-align: left;">29.916067</td><td style="text-align: left;">27.35471</td></tr><tr class="even"><td style="text-align: left;">1392</td><td style="text-align: left;">University of Virginia-Main Campus</td><td style="text-align: left;">29.985509</td><td style="text-align: left;">40.50167</td></tr><tr class="odd"><td style="text-align: left;">1501</td><td style="text-align: left;">Trine University-Regional/Non-Traditional Campuses</td><td style="text-align: left;">30.303030</td><td style="text-align: left;">70.00000</td></tr><tr class="even"><td style="text-align: left;">992</td><td style="text-align: left;">Oberlin College</td><td style="text-align: left;">30.411401</td><td style="text-align: left;">34.52697</td></tr><tr class="odd"><td style="text-align: left;">78</td><td style="text-align: left;">California State University-Long Beach</td><td style="text-align: left;">30.818445</td><td style="text-align: left;">25.21821</td></tr><tr class="even"><td style="text-align: left;">1105</td><td style="text-align: left;">Lehigh University</td><td style="text-align: left;">30.836445</td><td style="text-align: left;">30.86038</td></tr><tr class="odd"><td style="text-align: left;">1383</td><td style="text-align: left;">University of Richmond</td><td style="text-align: left;">31.155216</td><td style="text-align: left;">26.29860</td></tr><tr class="even"><td style="text-align: left;">127</td><td style="text-align: left;">San Diego State University</td><td style="text-align: left;">31.213963</td><td style="text-align: left;">25.91735</td></tr><tr class="odd"><td style="text-align: left;">67</td><td style="text-align: left;">California Polytechnic State University-San Luis Obispo</td><td style="text-align: left;">31.230882</td><td style="text-align: left;">31.50732</td></tr><tr class="even"><td style="text-align: left;">177</td><td style="text-align: left;">Trinity College</td><td style="text-align: left;">31.782541</td><td style="text-align: left;">24.83553</td></tr><tr class="odd"><td style="text-align: left;">799</td><td style="text-align: left;">CUNY Brooklyn College</td><td style="text-align: left;">31.981051</td><td style="text-align: left;">18.09014</td></tr><tr class="even"><td style="text-align: left;">529</td><td style="text-align: left;">Boston College</td><td style="text-align: left;">32.215339</td><td style="text-align: left;">28.02024</td></tr><tr class="odd"><td style="text-align: left;">1058</td><td style="text-align: left;">Corban University</td><td style="text-align: left;">32.251381</td><td style="text-align: left;">23.76874</td></tr></tbody></table><p>Well, not every college on the list is a "traditional prestige university". But many elite universities like Stanford, Harvard, Yale are on the list.</p><h4 id="how-about-the-standard-test-scores">How about the standard test scores?</h4><p>First, consider the 75th percentile —— how good are the good students ?</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; per_75 &lt;- data$SAT.Math.75th.percentile.score+data$SAT.Writing.75th.percentile.score+data$SAT.Critical.Reading.75th.percentile.score+data$ACT.Composite.75th.percentile.score</span><br><span class="line">&gt; table_75 &lt;- data.frame(name = data$Name,per_75=per_75)</span><br><span class="line">&gt; table_75 &lt;- table_75[!is.na(table_75$per_75),]</span><br><span class="line">&gt; table_75 &lt;- table_75[order(table_75$per_75,decreasing=<span class="literal">T</span>),]</span><br><span class="line">&gt; table_75 &lt;- table_75[c(<span class="number">1</span>:<span class="number">25</span>),]</span><br></pre></td></tr></table></figure><table><thead><tr class="header"><th style="text-align: left;"></th><th style="text-align: left;">name</th><th style="text-align: left;">per_75 = SAT 75% + ACT 75%</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;">545</td><td style="text-align: left;">Harvard University</td><td style="text-align: left;">2435</td></tr><tr class="even"><td style="text-align: left;">65</td><td style="text-align: left;">California Institute of Technology</td><td style="text-align: left;">2425</td></tr><tr class="odd"><td style="text-align: left;">180</td><td style="text-align: left;">Yale University</td><td style="text-align: left;">2425</td></tr><tr class="even"><td style="text-align: left;">761</td><td style="text-align: left;">Princeton University</td><td style="text-align: left;">2425</td></tr><tr class="odd"><td style="text-align: left;">290</td><td style="text-align: left;">University of Chicago</td><td style="text-align: left;">2405</td></tr><tr class="even"><td style="text-align: left;">552</td><td style="text-align: left;">Massachusetts Institute of Technology</td><td style="text-align: left;">2385</td></tr><tr class="odd"><td style="text-align: left;">735</td><td style="text-align: left;">Dartmouth College</td><td style="text-align: left;">2384</td></tr><tr class="even"><td style="text-align: left;">794</td><td style="text-align: left;">Columbia University in the City of New York</td><td style="text-align: left;">2384</td></tr><tr class="odd"><td style="text-align: left;">1470</td><td style="text-align: left;">Stanford University</td><td style="text-align: left;">2384</td></tr><tr class="even"><td style="text-align: left;">578</td><td style="text-align: left;">Williams College</td><td style="text-align: left;">2374</td></tr><tr class="odd"><td style="text-align: left;">1258</td><td style="text-align: left;">Vanderbilt University</td><td style="text-align: left;">2374</td></tr><tr class="even"><td style="text-align: left;">911</td><td style="text-align: left;">Duke University</td><td style="text-align: left;">2364</td></tr><tr class="odd"><td style="text-align: left;">101</td><td style="text-align: left;">Harvey Mudd College</td><td style="text-align: left;">2355</td></tr><tr class="even"><td style="text-align: left;">125</td><td style="text-align: left;">Pomona College</td><td style="text-align: left;">2354</td></tr><tr class="odd"><td style="text-align: left;">321</td><td style="text-align: left;">Northwestern University</td><td style="text-align: left;">2354</td></tr><tr class="even"><td style="text-align: left;">699</td><td style="text-align: left;">Washington University in St Louis</td><td style="text-align: left;">2354</td></tr><tr class="odd"><td style="text-align: left;">1141</td><td style="text-align: left;">University of Pennsylvania</td><td style="text-align: left;">2354</td></tr><tr class="even"><td style="text-align: left;">1293</td><td style="text-align: left;">Rice University</td><td style="text-align: left;">2354</td></tr><tr class="odd"><td style="text-align: left;">1173</td><td style="text-align: left;">Brown University</td><td style="text-align: left;">2344</td></tr><tr class="even"><td style="text-align: left;">1159</td><td style="text-align: left;">Swarthmore College</td><td style="text-align: left;">2334</td></tr><tr class="odd"><td style="text-align: left;">523</td><td style="text-align: left;">Amherst College</td><td style="text-align: left;">2324</td></tr><tr class="even"><td style="text-align: left;">571</td><td style="text-align: left;">Tufts University</td><td style="text-align: left;">2323</td></tr><tr class="odd"><td style="text-align: left;">1073</td><td style="text-align: left;">Carnegie Mellon University</td><td style="text-align: left;">2314</td></tr><tr class="even"><td style="text-align: left;">482</td><td style="text-align: left;">Bowdoin College</td><td style="text-align: left;">2313</td></tr><tr class="odd"><td style="text-align: left;">797</td><td style="text-align: left;">Cornell University</td><td style="text-align: left;">2304</td></tr></tbody></table><p>It seems that good grades can get you into prestige universities.</p><p>Then, what about the other side of the spectrum ?</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; per_25 &lt;- data$SAT.Math.25th.percentile.score+data$SAT.Writing.25th.percentile.score+data$ACT.Composite.25th.percentile.score+data$SAT.Critical.Reading.25th.percentile.score</span><br><span class="line">&gt; table_25 &lt;- data.frame(name = data$Name,per_25 = per_25)</span><br><span class="line">&gt; table_25 &lt;- table_25[order(table_25$per_25,decreasing=<span class="literal">T</span>),]</span><br><span class="line">&gt; table_25 &lt;- table_25[c(<span class="number">1</span>:<span class="number">25</span>),]</span><br></pre></td></tr></table></figure><table><thead><tr class="header"><th style="text-align: left;"></th><th style="text-align: left;">name</th><th style="text-align: left;">per_25 = SAT 25% + ACT 25%</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;">65</td><td style="text-align: left;">California Institute of Technology</td><td style="text-align: left;">2243</td></tr><tr class="even"><td style="text-align: left;">290</td><td style="text-align: left;">University of Chicago</td><td style="text-align: left;">2172</td></tr><tr class="odd"><td style="text-align: left;">552</td><td style="text-align: left;">Massachusetts Institute of Technology</td><td style="text-align: left;">2153</td></tr><tr class="even"><td style="text-align: left;">180</td><td style="text-align: left;">Yale University</td><td style="text-align: left;">2152</td></tr><tr class="odd"><td style="text-align: left;">545</td><td style="text-align: left;">Harvard University</td><td style="text-align: left;">2152</td></tr><tr class="even"><td style="text-align: left;">699</td><td style="text-align: left;">Washington University in St Louis</td><td style="text-align: left;">2152</td></tr><tr class="odd"><td style="text-align: left;">761</td><td style="text-align: left;">Princeton University</td><td style="text-align: left;">2151</td></tr><tr class="even"><td style="text-align: left;">1258</td><td style="text-align: left;">Vanderbilt University</td><td style="text-align: left;">2122</td></tr><tr class="odd"><td style="text-align: left;">321</td><td style="text-align: left;">Northwestern University</td><td style="text-align: left;">2111</td></tr><tr class="even"><td style="text-align: left;">794</td><td style="text-align: left;">Columbia University in the City of New York</td><td style="text-align: left;">2111</td></tr><tr class="odd"><td style="text-align: left;">101</td><td style="text-align: left;">Harvey Mudd College</td><td style="text-align: left;">2102</td></tr><tr class="even"><td style="text-align: left;">125</td><td style="text-align: left;">Pomona College</td><td style="text-align: left;">2101</td></tr><tr class="odd"><td style="text-align: left;">1470</td><td style="text-align: left;">Stanford University</td><td style="text-align: left;">2101</td></tr><tr class="even"><td style="text-align: left;">482</td><td style="text-align: left;">Bowdoin College</td><td style="text-align: left;">2080</td></tr><tr class="odd"><td style="text-align: left;">571</td><td style="text-align: left;">Tufts University</td><td style="text-align: left;">2080</td></tr><tr class="even"><td style="text-align: left;">1141</td><td style="text-align: left;">University of Pennsylvania</td><td style="text-align: left;">2080</td></tr><tr class="odd"><td style="text-align: left;">1293</td><td style="text-align: left;">Rice University</td><td style="text-align: left;">2071</td></tr><tr class="even"><td style="text-align: left;">911</td><td style="text-align: left;">Duke University</td><td style="text-align: left;">2070</td></tr><tr class="odd"><td style="text-align: left;">1159</td><td style="text-align: left;">Swarthmore College</td><td style="text-align: left;">2061</td></tr><tr class="even"><td style="text-align: left;">735</td><td style="text-align: left;">Dartmouth College</td><td style="text-align: left;">2060</td></tr><tr class="odd"><td style="text-align: left;">523</td><td style="text-align: left;">Amherst College</td><td style="text-align: left;">2050</td></tr><tr class="even"><td style="text-align: left;">578</td><td style="text-align: left;">Williams College</td><td style="text-align: left;">2040</td></tr><tr class="odd"><td style="text-align: left;">626</td><td style="text-align: left;">Carleton College</td><td style="text-align: left;">2029</td></tr><tr class="even"><td style="text-align: left;">1173</td><td style="text-align: left;">Brown University</td><td style="text-align: left;">2029</td></tr><tr class="odd"><td style="text-align: left;">1073</td><td style="text-align: left;">Carnegie Mellon University</td><td style="text-align: left;">2020</td></tr></tbody></table><p>Still, the lower boundary of prestige universities is very demanding ...</p><p>Now we can intersect the two lists above to get the most academic-demanding universities :</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; prestige &lt;- data.frame(prestige)</span><br><span class="line">&gt; View(prestige)</span><br></pre></td></tr></table></figure><table><thead><tr class="header"><th style="text-align: left;"></th><th style="text-align: left;">Name</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;">1</td><td style="text-align: left;">California Institute of Technology</td></tr><tr class="even"><td style="text-align: left;">2</td><td style="text-align: left;">University of Chicago</td></tr><tr class="odd"><td style="text-align: left;">3</td><td style="text-align: left;">Massachusetts Institute of Technology</td></tr><tr class="even"><td style="text-align: left;">4</td><td style="text-align: left;">Yale University</td></tr><tr class="odd"><td style="text-align: left;">5</td><td style="text-align: left;">Harvard University</td></tr><tr class="even"><td style="text-align: left;">6</td><td style="text-align: left;">Washington University in St Louis</td></tr><tr class="odd"><td style="text-align: left;">7</td><td style="text-align: left;">Princeton University</td></tr><tr class="even"><td style="text-align: left;">8</td><td style="text-align: left;">Vanderbilt University</td></tr><tr class="odd"><td style="text-align: left;">9</td><td style="text-align: left;">Northwestern University</td></tr><tr class="even"><td style="text-align: left;">10</td><td style="text-align: left;">Columbia University in the City of New York</td></tr><tr class="odd"><td style="text-align: left;">11</td><td style="text-align: left;">Harvey Mudd College</td></tr><tr class="even"><td style="text-align: left;">12</td><td style="text-align: left;">Pomona College</td></tr><tr class="odd"><td style="text-align: left;">13</td><td style="text-align: left;">Stanford University</td></tr><tr class="even"><td style="text-align: left;">14</td><td style="text-align: left;">Bowdoin College</td></tr><tr class="odd"><td style="text-align: left;">15</td><td style="text-align: left;">Tufts University</td></tr><tr class="even"><td style="text-align: left;">16</td><td style="text-align: left;">University of Pennsylvania</td></tr><tr class="odd"><td style="text-align: left;">17</td><td style="text-align: left;">Rice University</td></tr><tr class="even"><td style="text-align: left;">18</td><td style="text-align: left;">Duke University</td></tr><tr class="odd"><td style="text-align: left;">19</td><td style="text-align: left;">Swarthmore College</td></tr><tr class="even"><td style="text-align: left;">20</td><td style="text-align: left;">Dartmouth College</td></tr><tr class="odd"><td style="text-align: left;">21</td><td style="text-align: left;">Amherst College</td></tr><tr class="even"><td style="text-align: left;">22</td><td style="text-align: left;">Williams College</td></tr><tr class="odd"><td style="text-align: left;">23</td><td style="text-align: left;">Brown University</td></tr><tr class="even"><td style="text-align: left;">24</td><td style="text-align: left;">Carnegie Mellon University</td></tr></tbody></table><h4 id="can-you-graduate">Can you graduate ?</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; grad_rate &lt;- data$Graduation.rate...Bachelor.degree.within.4.years..total+data$Graduation.rate...Bachelor.degree.within.5.years..total+data$Graduation.rate...Bachelor.degree.within.6.years..total</span><br><span class="line">&gt; grad_rate_table &lt;- data.frame(name=data$Name,grad_rate=grad_rate)</span><br><span class="line">&gt; grad_rate_table &lt;- grad_rate_table[grad_rate_table$grad_rate&gt;<span class="number">0</span>,]</span><br><span class="line">&gt; boxplot(grad_rate_table$grad_rate/<span class="number">300</span>*<span class="number">100</span>)</span><br><span class="line">&gt; title(main = <span class="string">"Graduation rate box plot"</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/3X7pbD2.png" /></p><p>It seems that students better push themselves harder. About 35% ~ 60% students cannot graduate in 6 years 🤔</p><h4 id="the-endowment">The endowment ?</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; FASB &lt;- data.frame(name = data$Name, endow = data$Endowment.assets..year.end..per.FTE.enrollment..FASB.)</span><br><span class="line">&gt; FASB &lt;- FASB[!is.na(FASB$endow),]</span><br><span class="line">&gt; GASB &lt;- data.frame(name = data$Name,endow = data$Endowment.assets..year.end..per.FTE.enrollment..GASB.)</span><br><span class="line">&gt; GASB &lt;- GASB[!is.na(GASB$endow),]</span><br><span class="line">&gt; endowment &lt;- rbind(FASB,GASB)</span><br><span class="line">&gt; endowment &lt;- endowment[order(endowment$endow,decreasing = <span class="literal">T</span>),]</span><br><span class="line">&gt; endowment &lt;- endowment[c(<span class="number">1</span>:<span class="number">25</span>),]</span><br></pre></td></tr></table></figure><table><thead><tr class="header"><th style="text-align: left;"></th><th style="text-align: left;">Name</th><th style="text-align: left;">Endowment = FASB + GASB</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;">1492</td><td style="text-align: left;">Soka University of America</td><td style="text-align: left;">2505435</td></tr><tr class="even"><td style="text-align: left;">761</td><td style="text-align: left;">Princeton University</td><td style="text-align: left;">2320421</td></tr><tr class="odd"><td style="text-align: left;">180</td><td style="text-align: left;">Yale University</td><td style="text-align: left;">1528324</td></tr><tr class="even"><td style="text-align: left;">545</td><td style="text-align: left;">Harvard University</td><td style="text-align: left;">1392761</td></tr><tr class="odd"><td style="text-align: left;">1470</td><td style="text-align: left;">Stanford University</td><td style="text-align: left;">1215932</td></tr><tr class="even"><td style="text-align: left;">125</td><td style="text-align: left;">Pomona College</td><td style="text-align: left;">1146818</td></tr><tr class="odd"><td style="text-align: left;">1159</td><td style="text-align: left;">Swarthmore College</td><td style="text-align: left;">1034611</td></tr><tr class="even"><td style="text-align: left;">552</td><td style="text-align: left;">Massachusetts Institute of Technology</td><td style="text-align: left;">980404</td></tr><tr class="odd"><td style="text-align: left;">391</td><td style="text-align: left;">Grinnell College</td><td style="text-align: left;">950232</td></tr><tr class="even"><td style="text-align: left;">523</td><td style="text-align: left;">Amherst College</td><td style="text-align: left;">930009</td></tr><tr class="odd"><td style="text-align: left;">578</td><td style="text-align: left;">Williams College</td><td style="text-align: left;">888422</td></tr><tr class="even"><td style="text-align: left;">65</td><td style="text-align: left;">California Institute of Technology</td><td style="text-align: left;">872856</td></tr><tr class="odd"><td style="text-align: left;">1293</td><td style="text-align: left;">Rice University</td><td style="text-align: left;">729227</td></tr><tr class="even"><td style="text-align: left;">796</td><td style="text-align: left;">Cooper Union for the Advancement of Science and Art</td><td style="text-align: left;">704474</td></tr><tr class="odd"><td style="text-align: left;">434</td><td style="text-align: left;">Berea College</td><td style="text-align: left;">623784</td></tr><tr class="even"><td style="text-align: left;">1397</td><td style="text-align: left;">Washington and Lee University</td><td style="text-align: left;">599001</td></tr><tr class="odd"><td style="text-align: left;">572</td><td style="text-align: left;">Wellesley College</td><td style="text-align: left;">593054</td></tr><tr class="even"><td style="text-align: left;">735</td><td style="text-align: left;">Dartmouth College</td><td style="text-align: left;">581104</td></tr><tr class="odd"><td style="text-align: left;">482</td><td style="text-align: left;">Bowdoin College</td><td style="text-align: left;">574151</td></tr><tr class="even"><td style="text-align: left;">368</td><td style="text-align: left;">University of Notre Dame</td><td style="text-align: left;">545295</td></tr><tr class="odd"><td style="text-align: left;">1383</td><td style="text-align: left;">University of Richmond</td><td style="text-align: left;">479753</td></tr><tr class="even"><td style="text-align: left;">566</td><td style="text-align: left;">Smith College</td><td style="text-align: left;">462144</td></tr><tr class="odd"><td style="text-align: left;">1482</td><td style="text-align: left;">Mayo Graduate School</td><td style="text-align: left;">458781</td></tr><tr class="even"><td style="text-align: left;">1068</td><td style="text-align: left;">Bryn Mawr College</td><td style="text-align: left;">458469</td></tr><tr class="odd"><td style="text-align: left;">95</td><td style="text-align: left;">Claremont McKenna College</td><td style="text-align: left;">456319</td></tr></tbody></table><p>A lot of prestige universities also received the largest endowments.</p><h4 id="women-enrolled">Women enrolled ?</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; women &lt;- data$Percent.of.total.enrollment.that.are.women</span><br><span class="line">&gt; women_undergrad &lt;- data$Percent.of.undergraduate.enrollment.that.are.women</span><br><span class="line">&gt; women_grad &lt;- data$Percent.of.graduate.enrollment.that.are.women</span><br><span class="line">&gt; boxplot(women,women_undergrad,women_grad,main=<span class="string">"Percent of enrollment that are women"</span>,names = c(<span class="string">"Total"</span>,<span class="string">"Undergrad"</span>,<span class="string">"Graduate"</span>),notch = <span class="literal">T</span>)</span><br></pre></td></tr></table></figure><figure><img src="https://i.imgur.com/BBqbmAW.png" alt="Imgur" /><figcaption>Imgur</figcaption></figure><p>We can easily tell from the graph above that women enrollment rate in higher education is definitely improving. Female students make up more than 50% in most colleges.</p><h4 id="diversity">Diversity ?</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; american_native &lt;- data$Percent.of.total.enrollment.that.are.Native.Hawaiian.or.Other.Pacific.Islander</span><br><span class="line">&gt; asian &lt;- data$Percent.of.total.enrollment.that.are.Asian</span><br><span class="line">&gt; black &lt;- data$Percent.of.total.enrollment.that.are.Black.or.African.American</span><br><span class="line">&gt; latino &lt;- data$Percent.of.total.enrollment.that.are.Hispanic.Latino</span><br><span class="line">&gt; hawaiian &lt;- data$Percent.of.total.enrollment.that.are.Native.Hawaiian.or.Other.Pacific.Islander</span><br><span class="line">&gt; white &lt;- data$Percent.of.total.enrollment.that.are.White</span><br><span class="line">&gt; unknown &lt;- data$Percent.of.total.enrollment.that.are.Race.ethnicity.unknown</span><br><span class="line">&gt; boxplot(american_native,asian,black,latino,hawaiian,white,unknown,main=<span class="string">"Percent of different races/ethnicity"</span>,notch = <span class="literal">T</span>,names = c(<span class="string">"Native"</span>,<span class="string">"Asian"</span>,<span class="string">"Black"</span>,<span class="string">"Latino"</span>,<span class="string">"Hawaiian"</span>,<span class="string">"White"</span>,<span class="string">"Unknown"</span>))</span><br></pre></td></tr></table></figure><figure><img src="https://i.imgur.com/BgnvXTJ.png" alt="Imgur" /><figcaption>Imgur</figcaption></figure><p>Hmmm ... the data range is a little bit drastic this time ...</p><p>Because I myself is Asian, I am curious to see what universities have the highest percentage of Asian students :</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; asian_df &lt;- data.frame(name=data$Name,asian_en=asian)</span><br><span class="line">&gt; asian_df &lt;- asian_df[!is.na(asian_df$asian_en),]</span><br><span class="line">&gt; asian_df &lt;- asian_df[order(asian_df$asian_en,decreasing = <span class="literal">T</span>),]</span><br><span class="line">&gt; asian_df &lt;- asian_df[c(<span class="number">1</span>:<span class="number">25</span>),]</span><br></pre></td></tr></table></figure><table><thead><tr class="header"><th style="text-align: left;"></th><th style="text-align: left;">Name</th><th style="text-align: left;">Asian_enrollment_rate</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;">277</td><td style="text-align: left;">University of Hawaii-West Oahu</td><td style="text-align: left;">40</td></tr><tr class="even"><td style="text-align: left;">84</td><td style="text-align: left;">University of California-Irvine</td><td style="text-align: left;">39</td></tr><tr class="odd"><td style="text-align: left;">275</td><td style="text-align: left;">University of Hawaii at Manoa</td><td style="text-align: left;">36</td></tr><tr class="even"><td style="text-align: left;">87</td><td style="text-align: left;">University of California-San Diego</td><td style="text-align: left;">35</td></tr><tr class="odd"><td style="text-align: left;">86</td><td style="text-align: left;">University of California-Riverside</td><td style="text-align: left;">33</td></tr><tr class="even"><td style="text-align: left;">121</td><td style="text-align: left;">University of the Pacific</td><td style="text-align: left;">32</td></tr><tr class="odd"><td style="text-align: left;">131</td><td style="text-align: left;">San Jose State University</td><td style="text-align: left;">32</td></tr><tr class="even"><td style="text-align: left;">1486</td><td style="text-align: left;">Remington College-Honolulu Campus</td><td style="text-align: left;">32</td></tr><tr class="odd"><td style="text-align: left;">83</td><td style="text-align: left;">University of California-Davis</td><td style="text-align: left;">31</td></tr><tr class="even"><td style="text-align: left;">798</td><td style="text-align: left;">CUNY Bernard M Baruch College</td><td style="text-align: left;">31</td></tr><tr class="odd"><td style="text-align: left;">82</td><td style="text-align: left;">University of California-Berkeley</td><td style="text-align: left;">30</td></tr><tr class="even"><td style="text-align: left;">85</td><td style="text-align: left;">University of California-Los Angeles</td><td style="text-align: left;">28</td></tr><tr class="odd"><td style="text-align: left;">129</td><td style="text-align: left;">San Francisco State University</td><td style="text-align: left;">27</td></tr><tr class="even"><td style="text-align: left;">273</td><td style="text-align: left;">Chaminade University of Honolulu</td><td style="text-align: left;">27</td></tr><tr class="odd"><td style="text-align: left;">65</td><td style="text-align: left;">California Institute of Technology</td><td style="text-align: left;">26</td></tr><tr class="even"><td style="text-align: left;">72</td><td style="text-align: left;">California State Polytechnic University-Pomona</td><td style="text-align: left;">24</td></tr><tr class="odd"><td style="text-align: left;">77</td><td style="text-align: left;">California State University-East Bay</td><td style="text-align: left;">23</td></tr><tr class="even"><td style="text-align: left;">808</td><td style="text-align: left;">CUNY Queens College</td><td style="text-align: left;">23</td></tr><tr class="odd"><td style="text-align: left;">809</td><td style="text-align: left;">CUNY York College</td><td style="text-align: left;">23</td></tr><tr class="even"><td style="text-align: left;">1487</td><td style="text-align: left;">University of Washington-Bothell Campus</td><td style="text-align: left;">23</td></tr><tr class="odd"><td style="text-align: left;">78</td><td style="text-align: left;">California State University-Long Beach</td><td style="text-align: left;">22</td></tr><tr class="even"><td style="text-align: left;">101</td><td style="text-align: left;">Harvey Mudd College</td><td style="text-align: left;">22</td></tr><tr class="odd"><td style="text-align: left;">572</td><td style="text-align: left;">Wellesley College</td><td style="text-align: left;">22</td></tr><tr class="even"><td style="text-align: left;">765</td><td style="text-align: left;">Rutgers University-New Brunswick</td><td style="text-align: left;">22</td></tr><tr class="odd"><td style="text-align: left;">76</td><td style="text-align: left;">California State University-Fullerton</td><td style="text-align: left;">21</td></tr></tbody></table><h4 id="where-will-you-go">Where will you go ?</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; geo_table &lt;- as.data.frame(table(data$Geographic.region))</span><br><span class="line">&gt; percent &lt;- paste(round(geo_table$Freq*<span class="number">100</span>/sum(geo_table$Freq)),<span class="string">"%"</span>)</span><br><span class="line">&gt; pie(geo_table$Freq,labels=paste(geo_table$Var1,percent),main=<span class="string">"Percent of Locations"</span>,col=rainbow(length(geo_table$Var1)))</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/nqhhoIp.png" /></p><h4 id="section"></h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Data source : https://www.kaggle.com/samsonqian/college-admissions/data#&lt;/p&gt;
&lt;p&gt;Huge thanks to the provider of the dataset !
      
    
    </summary>
    
    
    
      <category term="R" scheme="http://yoursite.com/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 109. Convert Sorted List to Binary Search Tree</title>
    <link href="http://yoursite.com/2020/06/06/LeetCode-109-Convert-Sorted-List-to-Binary-Search-Tree/"/>
    <id>http://yoursite.com/2020/06/06/LeetCode-109-Convert-Sorted-List-to-Binary-Search-Tree/</id>
    <published>2020-06-06T05:28:58.000Z</published>
    <updated>2020-06-06T05:30:22.808Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Given a singly linked list where elements are sorted in ascending order, convert it to a height balanced BST.</p><p>For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of <em>every</em> node never differ by more than 1.</p><p><strong>Example:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Given the sorted linked list: [-10,-3,0,5,9],</span><br><span class="line"></span><br><span class="line">One possible answer is: [0,-3,9,-10,null,5], which represents the following height balanced BST:</span><br><span class="line"></span><br><span class="line">      0</span><br><span class="line">     &#x2F; \</span><br><span class="line">   -3   9</span><br><span class="line">   &#x2F;   &#x2F;</span><br><span class="line"> -10  5</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * function ListNode(val, next) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = (val===undefined ? 0 : val)</span></span><br><span class="line"><span class="comment"> *     this.next = (next===undefined ? null : next)</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * function TreeNode(val, left, right) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = (val===undefined ? 0 : val)</span></span><br><span class="line"><span class="comment"> *     this.left = (left===undefined ? null : left)</span></span><br><span class="line"><span class="comment"> *     this.right = (right===undefined ? null : right)</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;ListNode&#125;</span> <span class="variable">head</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;TreeNode&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> sortedListToBST = <span class="function"><span class="keyword">function</span>(<span class="params">head</span>) </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> list = [];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(head) &#123;</span><br><span class="line">        list.push(head.val);</span><br><span class="line">        head = head.next;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> buildTree = <span class="function"><span class="keyword">function</span>(<span class="params">start,end</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(start&gt;end) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> mid = <span class="built_in">Math</span>.floor((start+end)/<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">let</span> root = <span class="keyword">new</span> TreeNode(list[mid]);</span><br><span class="line">        root.left = buildTree(start,mid<span class="number">-1</span>);</span><br><span class="line">        root.right = buildTree(mid+<span class="number">1</span>,end);</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> buildTree(<span class="number">0</span>,list.length<span class="number">-1</span>);</span><br><span class="line">    </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Given a singly linked list where elements are sorted in ascending order, convert it to a height balanced BST.&lt;/p&gt;
&lt;p&gt;For thi
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 164. Maximum Gap</title>
    <link href="http://yoursite.com/2020/06/05/LeetCode-164-Maximum-Gap/"/>
    <id>http://yoursite.com/2020/06/05/LeetCode-164-Maximum-Gap/</id>
    <published>2020-06-04T18:54:32.000Z</published>
    <updated>2020-06-05T06:35:34.451Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Given an unsorted array, find the maximum difference between the successive elements in its sorted form.</p><p>Return 0 if the array contains less than 2 elements.</p><p><strong>Example 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Input: [3,6,9,1]</span><br><span class="line">Output: 3</span><br><span class="line">Explanation: The sorted form of the array is [1,3,6,9], either</span><br><span class="line">             (3,6) or (6,9) has the maximum difference 3.</span><br></pre></td></tr></table></figure><p><strong>Example 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: [10]</span><br><span class="line">Output: 0</span><br><span class="line">Explanation: The array contains less than 2 elements, therefore return 0.</span><br></pre></td></tr></table></figure><p><strong>Note:</strong></p><ul><li>You may assume all elements in the array are non-negative integers and fit in the 32-bit signed integer range.</li><li>Try to solve it in linear time/space.</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number[]&#125;</span> <span class="variable">nums</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;number&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> maximumGap = <span class="function"><span class="keyword">function</span>(<span class="params">nums</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> max = <span class="built_in">Math</span>.max(...nums);</span><br><span class="line">    <span class="keyword">let</span> min = <span class="built_in">Math</span>.min(...nums);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> bucketSize = <span class="built_in">Math</span>.max(<span class="number">1</span>, <span class="built_in">Math</span>.floor((max - min)/ nums.length - <span class="number">1</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> buckets = &#123;&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;nums.length;i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> bucketId = <span class="built_in">Math</span>.floor((nums[i] - min) / bucketSize);</span><br><span class="line">        buckets[bucketId] = &#123;</span><br><span class="line">            min: <span class="built_in">Math</span>.min(nums[i], buckets[bucketId] ? buckets[bucketId].min : <span class="literal">Infinity</span>),</span><br><span class="line">            max: <span class="built_in">Math</span>.max(nums[i], buckets[bucketId] ? buckets[bucketId].max : -<span class="literal">Infinity</span>)</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> prevBucketMax = min, maxGap = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">Object</span>.values(buckets).forEach(<span class="function">(<span class="params">b</span>) =&gt;</span> &#123;</span><br><span class="line">maxGap = <span class="built_in">Math</span>.max(maxGap, b.min - prevBucketMax);</span><br><span class="line">            prevBucketMax = b.max;</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> maxGap;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number[]&#125;</span> <span class="variable">nums</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;number&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// I don't know what goes wrong but it doesn't pass all test cases</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> maximumGap = <span class="function"><span class="keyword">function</span>(<span class="params">nums</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!nums || nums.length &lt; <span class="number">2</span>)  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">const</span> max = <span class="built_in">Math</span>.max(...nums);</span><br><span class="line">    <span class="keyword">const</span> min = <span class="built_in">Math</span>.min(...nums);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> gap = <span class="built_in">Math</span>.floor((max - min)/(nums.length - <span class="number">1</span>));</span><br><span class="line">    <span class="keyword">let</span> bucketsMIN = <span class="built_in">Array</span>(nums.length<span class="number">-1</span>).fill(<span class="built_in">Number</span>.MAX_SAFE_INTEGER); </span><br><span class="line">    <span class="keyword">let</span> bucketsMAX = <span class="built_in">Array</span>(nums.length<span class="number">-1</span>).fill(<span class="built_in">Number</span>.MIN_SAFE_INTEGER); </span><br><span class="line">   </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">of</span> nums) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i===min || i===max) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">let</span> idx = <span class="built_in">Math</span>.floor((i-min)/gap);</span><br><span class="line">        bucketsMIN[idx] = <span class="built_in">Math</span>.min(i, bucketsMIN[idx]);</span><br><span class="line">        bucketsMAX[idx] = <span class="built_in">Math</span>.max(i, bucketsMAX[idx]);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> maxGap = <span class="built_in">Number</span>.MIN_SAFE_INTEGER;</span><br><span class="line">    <span class="keyword">let</span> pre = min;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; nums.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (bucketsMAX[i] === <span class="built_in">Number</span>.MIN_SAFE_INTEGER &amp;&amp; bucketsMIN[i] === <span class="built_in">Number</span>.MAX_SAFE_INTEGER)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        maxGap = <span class="built_in">Math</span>.max(maxGap, bucketsMIN[i] - pre);</span><br><span class="line">        pre = bucketsMAX[i];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    maxGap = <span class="built_in">Math</span>.max(maxGap, max - pre);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> maxGap;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Given an unsorted array, find the maximum difference between the successive elements in its sorted form.&lt;/p&gt;
&lt;p&gt;Return 0 if 
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
</feed>
