<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lydia Yuan&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-10-07T12:30:08.243Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Lydia Yuan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>实现 call, apply, bind</title>
    <link href="http://yoursite.com/2020/10/07/%E5%AE%9E%E7%8E%B0-call-bind-apply/"/>
    <id>http://yoursite.com/2020/10/07/%E5%AE%9E%E7%8E%B0-call-bind-apply/</id>
    <published>2020-10-07T06:33:06.000Z</published>
    <updated>2020-10-07T12:30:08.243Z</updated>
    
    <content type="html"><![CDATA[<h3 id="call"><a class="markdownIt-Anchor" href="#call"></a> call</h3><p>先复习 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call">MDN</a><br /><code>func.call([thisArg[, arg1, arg2, ...argN]])</code><br />所以需要传入指定的 <code>this</code> 和一个参数列表<br />返回的就是函数执行本身的返回结果</p><p>同时复习一下 <code>arguments</code> 参数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyMax</span>(<span class="params">...arr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> args = <span class="built_in">arguments</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(args);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.max(...arr);</span><br><span class="line">&#125;</span><br><span class="line">MyMax(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>);</span><br><span class="line"><span class="comment">/* Arguments(5) [1, 3, 5, 7, 9, callee: (...), Symbol(Symbol.iterator): ƒ]</span></span><br><span class="line"><span class="comment">0: 1</span></span><br><span class="line"><span class="comment">1: 3</span></span><br><span class="line"><span class="comment">2: 5</span></span><br><span class="line"><span class="comment">3: 7</span></span><br><span class="line"><span class="comment">4: 9</span></span><br><span class="line"><span class="comment">callee: (...)</span></span><br><span class="line"><span class="comment">length: 5</span></span><br><span class="line"><span class="comment">Symbol(Symbol.iterator): ƒ values()</span></span><br><span class="line"><span class="comment">get callee: ƒ ()</span></span><br><span class="line"><span class="comment">set callee: ƒ ()</span></span><br><span class="line"><span class="comment">__proto__: Object</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">IntoMyMax</span>(<span class="params">...arr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> args = <span class="built_in">arguments</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">Array</span>.from(args).slice(<span class="number">0</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.max(...arr);</span><br><span class="line">&#125;</span><br><span class="line">IntoMyMax(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>);</span><br><span class="line"><span class="comment">// (5) [1, 3, 5, 7, 9]</span></span><br></pre></td></tr></table></figure><p>可见通过 <code>arguments</code> 即可得到函数传入的参数</p><p>下面开始实现</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Function</span>.prototype.myCall = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> [thisArg, ...args] = [...arguments];</span><br><span class="line">    <span class="keyword">if</span>(!thisArg) &#123;</span><br><span class="line">        thisArg = <span class="built_in">window</span> || globalThis;</span><br><span class="line">    &#125;</span><br><span class="line">    thisArg.func = <span class="built_in">this</span>;</span><br><span class="line">    <span class="keyword">let</span> res = thisArg.func(...args);</span><br><span class="line">    <span class="keyword">delete</span> thisArg.func;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 测试一下</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">PrintAllOfThese</span>(<span class="params">...args</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> a <span class="keyword">of</span> args) <span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;</span><br><span class="line">PrintAllOfThese.myCall(<span class="built_in">this</span>,<span class="string">&#x27;this&#x27;</span>,<span class="string">&#x27;is&#x27;</span>,<span class="string">&#x27;my&#x27;</span>,<span class="string">&#x27;call&#x27;</span>);</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">this</span></span><br><span class="line"><span class="comment">is</span></span><br><span class="line"><span class="comment">my</span></span><br><span class="line"><span class="comment">call</span></span><br><span class="line"><span class="comment">/*</span></span><br></pre></td></tr></table></figure><h3 id="apply"><a class="markdownIt-Anchor" href="#apply"></a> apply</h3><p>先复习 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply">MDN</a><br />可见就是 <code>call</code> 第二个参数从参数列表变成数组罢了 改改就成</p><p>下面开始实现</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Function</span>.prototype.myApply = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> [thisArg, args] = [...arguments];</span><br><span class="line">    <span class="keyword">if</span>(!thisArg) &#123;</span><br><span class="line">        thisArg = <span class="built_in">window</span> || globalThis;</span><br><span class="line">    &#125;</span><br><span class="line">    thisArg.func = <span class="built_in">this</span>;</span><br><span class="line">    <span class="keyword">let</span> res = thisArg.func(args);</span><br><span class="line">    <span class="keyword">delete</span> thisArg.func;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 测试一下</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">PrintAllOfThese</span>(<span class="params">args</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> a <span class="keyword">of</span> args) <span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;</span><br><span class="line">PrintAllOfThese.myApply(<span class="built_in">this</span>,[<span class="string">&#x27;this&#x27;</span>,<span class="string">&#x27;is&#x27;</span>,<span class="string">&#x27;my&#x27;</span>,<span class="string">&#x27;apply&#x27;</span>]);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">this</span></span><br><span class="line"><span class="comment">is</span></span><br><span class="line"><span class="comment">my</span></span><br><span class="line"><span class="comment">apply</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="bind"><a class="markdownIt-Anchor" href="#bind"></a> bind</h3><p>再来复习下 <a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_objects/Function/bind">MDN</a><br />对于返回值 MDN 这么说<br /><code>A copy of the given function with the specified this value, and initial arguments (if provided).</code></p><p>所以说是返回一个函数<br />柯里化套娃 这样（？）</p><p>下来来实现一下 ⬇️</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Function</span>.prototype.myBind = <span class="function"><span class="keyword">function</span>(<span class="params">context</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> self = <span class="built_in">this</span>;</span><br><span class="line">    <span class="keyword">let</span> args = [...arguments].slice(<span class="number">1</span>);</span><br><span class="line">    <span class="comment">// 第一个参数应该是 this 所以从第二个开始</span></span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> newArgs = [...arguments];</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> self.apply(context,args.concat(newArgs));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 测试</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">PrintAllOfThese</span>(<span class="params">args</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> a <span class="keyword">of</span> args) <span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> print = PrintAllOfThese.bind(<span class="built_in">this</span>,[<span class="string">&#x27;this&#x27;</span>,<span class="string">&#x27;is&#x27;</span>,<span class="string">&#x27;my&#x27;</span>,<span class="string">&#x27;bind&#x27;</span>]);</span><br><span class="line">print();</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">this</span></span><br><span class="line"><span class="comment">is</span></span><br><span class="line"><span class="comment">my</span></span><br><span class="line"><span class="comment">bind</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;call&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#call&quot;&gt;&lt;/a&gt; call&lt;/h3&gt;
&lt;p&gt;先复习 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScri
      
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>instanceof 的原理与实现</title>
    <link href="http://yoursite.com/2020/10/06/instanceof-%E7%9A%84%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E7%8E%B0/"/>
    <id>http://yoursite.com/2020/10/06/instanceof-%E7%9A%84%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E7%8E%B0/</id>
    <published>2020-10-06T00:53:11.000Z</published>
    <updated>2020-10-06T02:01:02.001Z</updated>
    
    <content type="html"><![CDATA[<p>先复习一下 <code>instanceof</code> 的背景：<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof">MDN instanceof</a> &gt; The instanceof operator tests to see if the prototype property of a constructor appears anywhere in the prototype chain of an object. The return value is a boolean value.</p><p>所以就是原型链回溯 看看一路上是否有相等的 constructor 叻 🤔</p><p>下面是实现（<code>__proto__</code> 有点坑 不推荐这种直接拿私有属性的写法！！！请看最后） ⬇️ <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> MyInstanceof = <span class="function">(<span class="params">left, right</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> leftPro = left.__proto__;</span><br><span class="line">    <span class="keyword">let</span> rightPro = right.prototype;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(leftPro === <span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(leftPro === rightPro) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        leftPro = leftPro.__proto__;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> 测试一下 ⬇️ <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Car</span>(<span class="params">make, model, year</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">this</span>.make = make;</span><br><span class="line">  <span class="built_in">this</span>.model = model;</span><br><span class="line">  <span class="built_in">this</span>.year = year;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> auto = <span class="keyword">new</span> Car(<span class="string">&#x27;Honda&#x27;</span>, <span class="string">&#x27;Accord&#x27;</span>, <span class="number">1998</span>);</span><br><span class="line"><span class="built_in">console</span>.log(MyInstanceof(auto, Car));</span><br><span class="line"><span class="comment">// true</span></span><br></pre></td></tr></table></figure> ### ⚠️ <code>__proto__</code> 我看 <a href="Object.getPrototypeOf(left);">MDN</a> 的时候发现 <code>__proto__</code> 不再被推荐叻 所以我觉得 是不是改用 <code>Object.getPrototypeOf</code> 好点？？？ 毕竟 <code>left.__proto === Object.getPrototypeOf(left)</code> 结果是 <code>true</code></p><p>下面是改动后的实现 ⬇️ <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> MyUpdatedInstanceof = <span class="function">(<span class="params">left, right</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> leftPro = <span class="built_in">Object</span>.getPrototypeOf(left);</span><br><span class="line">    <span class="keyword">let</span> rightPro = right.prototype;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(leftPro === <span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(leftPro === rightPro) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        leftPro = <span class="built_in">Object</span>.getPrototypeOf(left);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> 测试一下 ⬇️ <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Car</span>(<span class="params">make, model, year</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">this</span>.make = make;</span><br><span class="line">  <span class="built_in">this</span>.model = model;</span><br><span class="line">  <span class="built_in">this</span>.year = year;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> newAuto = <span class="keyword">new</span> Car(<span class="string">&#x27;Honda&#x27;</span>, <span class="string">&#x27;Accord&#x27;</span>, <span class="number">1998</span>);</span><br><span class="line"><span class="built_in">console</span>.log(MyUpdatedInstanceof(newAuto, Car));</span><br><span class="line"><span class="comment">// true</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;先复习一下 &lt;code&gt;instanceof&lt;/code&gt; 的背景：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof&quot;&gt;MDN in
      
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>实现debounce/throttle</title>
    <link href="http://yoursite.com/2020/10/04/%E5%AE%9E%E7%8E%B0debounce-throttle/"/>
    <id>http://yoursite.com/2020/10/04/%E5%AE%9E%E7%8E%B0debounce-throttle/</id>
    <published>2020-10-04T10:00:57.000Z</published>
    <updated>2020-10-05T01:46:44.234Z</updated>
    
    <content type="html"><![CDATA[<h3 id="防抖-debounce">防抖 debounce</h3><p><code>debounce</code> 即防抖 常见于频繁操作 <code>resize</code>, <code>mousemove</code>, <code>scroll</code>, <code>keypress</code> 等行为的场景</p><p>对于多次的连续动作 等到平息后 只提交一次 下面来手撕 ⬇️ <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> debounce = <span class="function">(<span class="params">func, delay</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> timer;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> context = <span class="built_in">this</span>;</span><br><span class="line">        <span class="keyword">let</span> args = <span class="built_in">arguments</span>;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">        timer = <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            func.apply(context, args);</span><br><span class="line">        &#125;, delay);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>写个测试 ⬇️ 一个显示鼠标位置的小 demo <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;playground&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-id">#playground</span> &#123;</span></span><br><span class="line">  width: 100vh;</span><br><span class="line">  height: 100vh;</span><br><span class="line">  background: yellow;</span><br><span class="line">  color: black;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> playground = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;playground&#x27;</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> getUserAction = <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(event);</span></span><br><span class="line"><span class="javascript">    playground.innerHTML = event.clientX + <span class="string">&#x27;, &#x27;</span> + event.clientY;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="javascript"><span class="keyword">const</span> debounce = <span class="function">(<span class="params">func, delay</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> timer;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> context = <span class="built_in">this</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> args = <span class="built_in">arguments</span>;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">clearTimeout</span>(timer);</span></span><br><span class="line"><span class="javascript">        timer = <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">            func.apply(context, args);</span><br><span class="line"><span class="javascript">            <span class="comment">// 考虑到需要传入 event 的情况 需要绑定 对应对象的 this 并且传入参数</span></span></span><br><span class="line">        &#125;, delay);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">playground.onmousemove = debounce(getUserAction</span><br><span class="line">,1000);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure> codepen 直通车 🚗 ： <a href="https://codepen.io/yuanruqian/pen/ZEWgMaM">Debounce demo test</a> 测试显示 确实是停下后一秒再显示</p><h3 id="节流-throttle">节流 throttle</h3><p><code>throttle</code> 即节流 就是每隔段时间只执行一次 很显然 要么是记录一下时间看当前时间有没有超过 或者 直接用定时器解决</p><h4 id="时间比较法">时间比较法</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> throttleByTime = <span class="function">(<span class="params">fn, delay</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> prev = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> curr = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">        <span class="keyword">let</span> context = <span class="built_in">this</span>;</span><br><span class="line">        <span class="keyword">let</span> args = <span class="built_in">arguments</span>;</span><br><span class="line">        <span class="keyword">if</span>((curr - prev)&gt;delay) &#123;</span><br><span class="line">            fn.apply(context, args);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="定时器法">定时器法</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> throttleByInterval = <span class="function">(<span class="params">fn, delay</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> timer;</span><br><span class="line">    <span class="keyword">let</span> prev = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> context = <span class="built_in">this</span>;</span><br><span class="line">        <span class="keyword">let</span> args = <span class="built_in">arguments</span>;</span><br><span class="line">        <span class="keyword">if</span>(!timer) &#123;</span><br><span class="line">            timer = <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                fn.apply(context, args);</span><br><span class="line">            &#125;, delay);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>继续写个测试 ⬇️ <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;manual&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;automatic&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-id">#container</span> &#123;</span></span><br><span class="line">  display: grid;</span><br><span class="line">  grid-column-gap: 10vh;</span><br><span class="line">  grid-template-columns: auto auto;</span><br><span class="line"><span class="css">  <span class="selector-tag">background-color</span>: <span class="selector-id">#2196F3</span>;</span></span><br><span class="line">  padding: 10vh;</span><br><span class="line">  height: 50vh;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-id">#manual</span> &#123;</span></span><br><span class="line">  background: yellow;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-id">#automatic</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background</span>: <span class="selector-id">#66ccff</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> playground = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;playground&#x27;</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> getUserAction = <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(event);</span></span><br><span class="line"><span class="javascript">    playground.innerHTML = event.clientX + <span class="string">&#x27;, &#x27;</span> + event.clientY;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="javascript"><span class="keyword">const</span> debounce = <span class="function">(<span class="params">func, delay</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> timer;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> context = <span class="built_in">this</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> args = <span class="built_in">arguments</span>;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">clearTimeout</span>(timer);</span></span><br><span class="line"><span class="javascript">        timer = <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">            func.apply(context, args);</span><br><span class="line"><span class="javascript">            <span class="comment">// 考虑到需要传入 event 的情况 需要绑定 对应对象的 this 并且传入参数</span></span></span><br><span class="line">        &#125;, delay);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">playground.onmousemove = debounce(getUserAction</span><br><span class="line">,1000);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>codepen 直通车 🚗： <a href="https://codepen.io/yuanruqian/pen/bGpXJoW">Throttle demo test</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;防抖-debounce&quot;&gt;防抖 debounce&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;debounce&lt;/code&gt; 即防抖 常见于频繁操作 &lt;code&gt;resize&lt;/code&gt;, &lt;code&gt;mousemove&lt;/code&gt;, &lt;code&gt;scroll&lt;/code&gt;,
      
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>实现柯里化</title>
    <link href="http://yoursite.com/2020/10/04/%E5%AE%9E%E7%8E%B0%E6%9F%AF%E9%87%8C%E5%8C%96/"/>
    <id>http://yoursite.com/2020/10/04/%E5%AE%9E%E7%8E%B0%E6%9F%AF%E9%87%8C%E5%8C%96/</id>
    <published>2020-10-04T02:29:05.000Z</published>
    <updated>2020-10-04T04:35:22.980Z</updated>
    
    <content type="html"><![CDATA[<p>今天把之前刷题的记录都删掉了 就 感觉博客还是不应该单纯刷题 不如手撕 API 这样 🤔 不太后悔 也不心疼 （说明我之前搞得真的没有价值 😭</p><p>好了不说了 开始手撕 这是需要达成的样子 ⬇️ <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">a, b, c</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> a + b + c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> curriedSum = curry(sum);</span><br><span class="line"></span><br><span class="line">alert( curriedSum(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>) ); <span class="comment">// 6, still callable normally</span></span><br><span class="line">alert( curriedSum(<span class="number">1</span>)(<span class="number">2</span>,<span class="number">3</span>) ); <span class="comment">// 6, currying of 1st arg</span></span><br><span class="line">alert( curriedSum(<span class="number">1</span>)(<span class="number">2</span>)(<span class="number">3</span>) ); <span class="comment">// 6, full currying</span></span><br></pre></td></tr></table></figure> 既然是“连贯的” 返回的肯定也是一个函数</p><p>先来看下 一个函数 如何获取它的参数等基本信息 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">a, b, c</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);  </span><br><span class="line">  <span class="keyword">return</span> a + b + c;</span><br><span class="line">&#125;</span><br><span class="line">sum.length;</span><br><span class="line"><span class="comment">// 3</span></span><br><span class="line">sum(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"><span class="comment">// Arguments(3) [1, 2, 3, callee: ƒ, Symbol(Symbol.iterator): ƒ]</span></span><br></pre></td></tr></table></figure> 所以可以通过内部调用 <code>argumemts.length</code> 获取传入的参数个数 可以通过 <code>fn.length</code> 获取需要的参数个数 由上面的例子可以看出来 如果 <code>fn.length</code> 大于 <code>arguments.length</code> 需要返回一个函数以供之后调用 即 <code>curriedSum(1)(2,3)</code> 如果 <code>fn.length</code> 等于 <code>arguments.length</code> 立即执行即可 即 <code>curriedSum(1,2,3)</code> 下面开始实现 ⬇️ <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> curry = <span class="function"><span class="params">fn</span> =&gt;</span></span><br><span class="line">    judge = <span class="function">(<span class="params">...args</span>) =&gt;</span></span><br><span class="line">        args.length === fn.length</span><br><span class="line">            ? fn(...args)</span><br><span class="line">            <span class="comment">// 直接立刻执行</span></span><br><span class="line">            : <span class="function">(<span class="params">arg</span>) =&gt;</span> judge(...args, arg)</span><br><span class="line">            <span class="comment">// 本次参数和上次的 ...args 合并 递归</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 测试一下</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">a, b, c</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> a + b + c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> curriedSum = curry(sum);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(curriedSum(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>));</span><br><span class="line"><span class="comment">// 6</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(curriedSum(<span class="number">1</span>)(<span class="number">2</span>)(<span class="number">3</span>));</span><br><span class="line"><span class="comment">// 6</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天把之前刷题的记录都删掉了 就 感觉博客还是不应该单纯刷题 不如手撕 API 这样 🤔 不太后悔 也不心疼 （说明我之前搞得真的没有价值 😭&lt;/p&gt;
&lt;p&gt;好了不说了 开始手撕 这是需要达成的样子 ⬇️ &lt;figure class=&quot;highlight javascr
      
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>实现深拷贝</title>
    <link href="http://yoursite.com/2020/10/03/%E5%AE%9E%E7%8E%B0%E6%B7%B1%E6%8B%B7%E8%B4%9D/"/>
    <id>http://yoursite.com/2020/10/03/%E5%AE%9E%E7%8E%B0%E6%B7%B1%E6%8B%B7%E8%B4%9D/</id>
    <published>2020-10-03T00:58:03.000Z</published>
    <updated>2020-10-03T02:51:48.322Z</updated>
    
    <content type="html"><![CDATA[<p>深拷贝的实现也是笔试很常见的题目叻</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> deepClone = <span class="function">(<span class="params">target</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> target !== <span class="string">&#x27;object&#x27;</span> || target === <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> target;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> clone = <span class="built_in">Array</span>.isArray(target) ? [] : &#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> target) &#123;</span><br><span class="line">        clone[key] = deepClone(target[key]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> clone;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个时候先不考虑循环引用的问题 先来测试下 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> test = &#123;</span><br><span class="line">    a: <span class="number">1</span>,</span><br><span class="line">    b: &#123;</span><br><span class="line">        c: <span class="number">2</span>,</span><br><span class="line">        d: &#123;</span><br><span class="line">            e:<span class="number">3</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(deepClone(test));</span><br><span class="line"><span class="comment">// &#123;a: 1, b: &#123;…&#125;&#125; 👌</span></span><br></pre></td></tr></table></figure> 接下来该考虑 循环引用的问题 比如 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> test = &#123;</span><br><span class="line">    a: <span class="number">1</span>,</span><br><span class="line">&#125;</span><br><span class="line">test.b = test;</span><br><span class="line"><span class="built_in">console</span>.log(test);</span><br></pre></td></tr></table></figure> 直接用上面的 <code>deepClone</code> 会爆栈…… 提示 <code>Uncaught RangeError: Maximum call stack size exceeded</code> 那么自然是需要一个暂时的储存去储存已经复制的 key-value 来看看新的 key 是否在这个 key-value 集合中出现过 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> deepClone = <span class="function">(<span class="params">target, map = <span class="keyword">new</span> <span class="built_in">WeakMap</span>()</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> target !== <span class="string">&#x27;object&#x27;</span> || target === <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> target;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(map.get(target)) <span class="keyword">return</span> map.get(target);</span><br><span class="line">    <span class="keyword">let</span> clone = <span class="built_in">Array</span>.isArray(target) ? [] : &#123;&#125;;</span><br><span class="line">    map.set(target,clone);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> target) &#123;</span><br><span class="line">        clone[key] = deepClone(target[key],map);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> clone;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> 再来测试下 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> test = &#123;</span><br><span class="line">    a: <span class="number">1</span>,</span><br><span class="line">&#125;</span><br><span class="line">test.b = test;</span><br><span class="line"><span class="built_in">console</span>.log(deepClone(test));</span><br><span class="line"><span class="comment">// &#123;a: 1, b: &#123;…&#125;&#125; 正常叻 😄</span></span><br></pre></td></tr></table></figure> 再接着考虑 <code>Date</code> 和 <code>RegExp</code> 的问题 因为这两类还是有些问题 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> test2 = &#123;</span><br><span class="line">    a: <span class="regexp">/\d&#123;2&#125;/</span>,</span><br><span class="line">    b: <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">&#x27;2020-8-15&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> clone = deepClone(test2);</span><br><span class="line"><span class="built_in">console</span>.log(clone.a,clone.b);</span><br><span class="line"><span class="comment">// &#123;&#125; &#123;&#125; 输出两个空对象 🤔</span></span><br></pre></td></tr></table></figure> 再改改 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> deepClone = <span class="function">(<span class="params">target, map = <span class="keyword">new</span> <span class="built_in">WeakMap</span>()</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> target !== <span class="string">&#x27;object&#x27;</span> || target === <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> target;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(map.get(target)) <span class="keyword">return</span> map.get(target);</span><br><span class="line">    <span class="keyword">let</span> clone = <span class="built_in">Array</span>.isArray(target) ? [] : &#123;&#125;;</span><br><span class="line">    map.set(target,clone);</span><br><span class="line">    <span class="keyword">if</span>(target <span class="keyword">instanceof</span> <span class="built_in">RegExp</span>) <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">RegExp</span>(target);</span><br><span class="line">    <span class="keyword">if</span>(target <span class="keyword">instanceof</span> <span class="built_in">Date</span>) <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Date</span>(target);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> target) &#123;</span><br><span class="line">        clone[key] = deepClone(target[key],map);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> clone;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> 继续测试 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> test2 = &#123;</span><br><span class="line">    a: <span class="regexp">/\d&#123;2&#125;/</span>,</span><br><span class="line">    b: <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">&#x27;2020-8-15&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> clone = deepClone(test2);</span><br><span class="line"><span class="built_in">console</span>.log(clone.a,clone.b);</span><br><span class="line"><span class="comment">// /\d&#123;2&#125;/ Sat Aug 15 2020 00:00:00 GMT+0800 (China Standard Time) OK惹 🎉</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;深拷贝的实现也是笔试很常见的题目叻&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>一道笔试题：JS模版字符串替换</title>
    <link href="http://yoursite.com/2020/09/29/%E4%B8%80%E9%81%93%E7%AC%94%E8%AF%95%E9%A2%98%EF%BC%9AJS%E6%A8%A1%E7%89%88%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9B%BF%E6%8D%A2/"/>
    <id>http://yoursite.com/2020/09/29/%E4%B8%80%E9%81%93%E7%AC%94%E8%AF%95%E9%A2%98%EF%BC%9AJS%E6%A8%A1%E7%89%88%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9B%BF%E6%8D%A2/</id>
    <published>2020-09-29T14:49:48.000Z</published>
    <updated>2020-09-29T15:14:37.163Z</updated>
    
    <content type="html"><![CDATA[<p>今晚金山WPS笔试又双叒叕遇到了 还算挺高频的笔试题8</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;The final answer is :&#123;&#123;finalAnswer&#125;&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> obj = &#123; <span class="attr">finalAnswer</span> : <span class="string">&#x27;42&#x27;</span>&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(render(str,obj));</span><br><span class="line"><span class="comment">// 要求输出：The final answer is :42</span></span><br></pre></td></tr></table></figure><p>整理一下思路好了（ 菜鸡落泪.jpg</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> render = <span class="function">(<span class="params">str, obj</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> s = str;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">        <span class="keyword">const</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;&#123;&#123;&#x27;</span>+key+<span class="string">&#x27;&#125;&#125;&#x27;</span>,<span class="string">&#x27;g&#x27;</span>);</span><br><span class="line">        s = s.replace(reg,obj[key]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试： <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;The final answer is :&#123;&#123;finalAnswer&#125;&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> obj = &#123; <span class="attr">finalAnswer</span> : <span class="string">&#x27;42&#x27;</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> render = <span class="function">(<span class="params">str, obj</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> s = str;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">        <span class="keyword">const</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;&#123;&#123;&#x27;</span>+key+<span class="string">&#x27;&#125;&#125;&#x27;</span>,<span class="string">&#x27;g&#x27;</span>);</span><br><span class="line">        s = s.replace(reg,obj[key]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(render(str,obj));</span><br><span class="line"><span class="comment">// The final answer is :42 </span></span><br></pre></td></tr></table></figure></p><p>之前的想法是先正则提取 符合 <code>&#123;&#123;xxx&#125;&#125;</code> 格式的 然后取 <code>$n</code> 替换 还是 naïve 叻 明显给定的 key 比手撕一个 全局匹配 <code>&#123;&#123;xxx&#125;&#125;</code> 的简单点不是吗（逃</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今晚金山WPS笔试又双叒叕遇到了 还算挺高频的笔试题8&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;s
      
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>由一道面试题看promise</title>
    <link href="http://yoursite.com/2020/09/16/%E7%94%B1%E4%B8%80%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9C%8Bpromise/"/>
    <id>http://yoursite.com/2020/09/16/%E7%94%B1%E4%B8%80%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9C%8Bpromise/</id>
    <published>2020-09-16T03:55:41.000Z</published>
    <updated>2020-09-16T04:00:34.496Z</updated>
    
    <content type="html"><![CDATA[<blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">            resolve();</span><br><span class="line">            reject()</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        promise.then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="number">3</span>);</span><br><span class="line">        &#125;,() =&gt; &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"失败的状态"</span>)</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">4</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><p>⬆️ 这是原题目</p><p>输出顺序为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><p>因为 promise 只有三个状态</p><p><code>pending</code> , <code>fulfilled</code> , <code>rejected</code></p><p>且 <code>pending</code> 变为任意后两者后 状态不会再改变</p><p>故此处先变为 <code>fulfilled</code> 后 <code>reject()</code> 无效</p><p>所以 <code>then</code> 回调还是会调用 <code>resolve()</code> 的对应输出 <code>console.log(3);</code></p><p>同理 如果我们调换一下顺序</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">    reject();</span><br><span class="line">    resolve();</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">promise.then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">3</span>);</span><br><span class="line">&#125;,() =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"失败的状态"</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">4</span>);</span><br></pre></td></tr></table></figure><p>此时的输出就是</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line">失败的状态</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/sp
      
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>数组去重方法梳理</title>
    <link href="http://yoursite.com/2020/09/16/%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E6%96%B9%E6%B3%95%E6%A2%B3%E7%90%86/"/>
    <id>http://yoursite.com/2020/09/16/%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E6%96%B9%E6%B3%95%E6%A2%B3%E7%90%86/</id>
    <published>2020-09-16T03:32:28.000Z</published>
    <updated>2020-09-16T03:40:49.437Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>测试数组：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>]; </span><br></pre></td></tr></table></figure></blockquote><h3 id="es6-set-方法"><a class="markdownIt-Anchor" href="#es6-set-方法"></a> ES6 Set 方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> noRepeat = <span class="function">(<span class="params">arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Array</span>.from(<span class="keyword">new</span> <span class="built_in">Set</span>(arr));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="filter-方法"><a class="markdownIt-Anchor" href="#filter-方法"></a> Filter 方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> noRepeat2 = <span class="function">(<span class="params">arr</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">return</span> arr.filter(<span class="function">(<span class="params">item,index</span>)=&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> arr.indexOf(item)===index;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="object-key-不可重复"><a class="markdownIt-Anchor" href="#object-key-不可重复"></a> Object key 不可重复</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> noReapeat3 = <span class="function">(<span class="params">arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> obj = &#123;&#125;;</span><br><span class="line">  <span class="keyword">return</span> arr.filter( <span class="function"><span class="params">ele</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> obj.hasOwnProperty(<span class="keyword">typeof</span> ele + ele) ? <span class="literal">false</span>: (obj[<span class="keyword">typeof</span> ele + ele] = <span class="literal">true</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;测试数组：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;
      
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>数组扁平化方法梳理</title>
    <link href="http://yoursite.com/2020/09/16/%E6%95%B0%E7%BB%84%E6%89%81%E5%B9%B3%E5%8C%96%E6%96%B9%E6%B3%95%E6%A2%B3%E7%90%86/"/>
    <id>http://yoursite.com/2020/09/16/%E6%95%B0%E7%BB%84%E6%89%81%E5%B9%B3%E5%8C%96%E6%96%B9%E6%B3%95%E6%A2%B3%E7%90%86/</id>
    <published>2020-09-16T02:55:43.000Z</published>
    <updated>2020-09-16T03:16:16.182Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>测试数组:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,[<span class="number">2</span>,[<span class="number">3</span>,[<span class="number">4</span>]]]];</span><br></pre></td></tr></table></figure></blockquote><h3 id="转为-string">转为 string</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> flatten = <span class="function">(<span class="params">arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">String</span>(arr).split(<span class="string">','</span>).map(<span class="built_in">Number</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用 string 的特性</p><p>⚠️ 注意返回值为 string , 需要转化为 number</p><h3 id="递归">递归</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> flatten2 = <span class="function">(<span class="params">arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> arr.reduce(<span class="function">(<span class="params">accumulator, currentValue</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> accumulator.concat(<span class="built_in">Array</span>.isArray(currentValue)?flatten2(currentValue):currentValue);</span><br><span class="line">    &#125;,[]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;测试数组:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;
      
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 1315. Sum of Nodes with Even-Valued Grandparent</title>
    <link href="http://yoursite.com/2020/08/29/LeetCode-1315-Sum-of-Nodes-with-Even-Valued-Grandparent/"/>
    <id>http://yoursite.com/2020/08/29/LeetCode-1315-Sum-of-Nodes-with-Even-Valued-Grandparent/</id>
    <published>2020-08-29T03:41:52.000Z</published>
    <updated>2020-08-29T03:43:32.523Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Given a binary tree, return the sum of values of nodes with even-valued grandparent. (A <em>grandparent</em> of a node is the parent of its parent, if it exists.)</p><p>If there are no nodes with an even-valued grandparent, return <code>0</code>.</p><p><strong>Example 1:</strong></p><p><strong><img src="https://assets.leetcode.com/uploads/2019/07/24/1473_ex1.png" alt="img" /></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: root &#x3D; [6,7,8,2,7,1,3,9,null,1,4,null,null,null,5]</span><br><span class="line">Output: 18</span><br><span class="line">Explanation: The red nodes are the nodes with even-value grandparent while the blue nodes are the even-value grandparents.</span><br></pre></td></tr></table></figure><p><strong>Constraints:</strong></p><ul><li>The number of nodes in the tree is between <code>1</code> and <code>10^4</code>.</li><li>The value of nodes is between <code>1</code> and <code>100</code>.</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * function TreeNode(val, left, right) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = (val===undefined ? 0 : val)</span></span><br><span class="line"><span class="comment"> *     this.left = (left===undefined ? null : left)</span></span><br><span class="line"><span class="comment"> *     this.right = (right===undefined ? null : right)</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;TreeNode&#125;</span> <span class="variable">root</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;number&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> sumEvenGrandparent = <span class="function">(<span class="params">root</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> dfs(root,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">  <span class="comment">// start from root so the parent &amp; grand parent nodes do not exist ! just assign some random odd values</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> dfs = <span class="function">(<span class="params">root,parent,grandparent</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(!root) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> dfs(root.left,root.val,parent) + dfs(root.right,root.val,parent)+(grandparent%<span class="number">2</span>===<span class="number">0</span>?root.val:<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Given a binary tree, return the sum of values of nodes with even-valued grandparent. (A &lt;em&gt;grandparent&lt;/em&gt; of a node is th
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>JS 将数字转换为货币形式</title>
    <link href="http://yoursite.com/2020/08/16/JS-%E5%B0%86%E6%95%B0%E5%AD%97%E8%BD%AC%E6%8D%A2%E4%B8%BA%E8%B4%A7%E5%B8%81%E5%BD%A2%E5%BC%8F/"/>
    <id>http://yoursite.com/2020/08/16/JS-%E5%B0%86%E6%95%B0%E5%AD%97%E8%BD%AC%E6%8D%A2%E4%B8%BA%E8%B4%A7%E5%B8%81%E5%BD%A2%E5%BC%8F/</id>
    <published>2020-08-16T09:02:40.000Z</published>
    <updated>2020-08-16T12:37:52.333Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>将各种数字整数部分转换为三个数字一个逗号隔断的形式</p><p>比如 : 111111 =&gt; 111,111</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">string res;</span><br><span class="line">        int n &#x3D; num.size(), keep &#x3D; n - k;</span><br><span class="line">        for (char c : num) &#123;</span><br><span class="line">            while (k &amp;&amp; res.size() &amp;&amp; res.back() &gt; c) &#123;</span><br><span class="line">                res.pop_back();</span><br><span class="line">                --k;</span><br><span class="line">            &#125;</span><br><span class="line">            if (res.size() || c !&#x3D; &#39;0&#39;) res.push_back(c);</span><br><span class="line">        &#125;</span><br><span class="line">        while (res.size() &amp;&amp; k--) res.pop_back();</span><br><span class="line">        return res.empty() ? &quot;0&quot; : res;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;将各种数字整数部分转换为三个数字一个逗号隔断的形式&lt;/p&gt;
&lt;p&gt;比如 : 111111 =&amp;gt; 111,111&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td 
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>JS 词法作用域</title>
    <link href="http://yoursite.com/2020/08/16/JS-%E8%AF%8D%E6%B3%95%E4%BD%9C%E7%94%A8%E5%9F%9F/"/>
    <id>http://yoursite.com/2020/08/16/JS-%E8%AF%8D%E6%B3%95%E4%BD%9C%E7%94%A8%E5%9F%9F/</id>
    <published>2020-08-16T02:56:05.000Z</published>
    <updated>2020-08-16T07:34:44.475Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> value = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'foo:'</span>,value,<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> value = <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'bar:'</span>,value,<span class="keyword">this</span>);</span><br><span class="line">    foo();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bar();</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bar: 2 Window &#123;parent: Window, opener: null, top: Window, length: 0, frames: Window, …&#125;</span><br><span class="line">foo: 1 Window &#123;parent: Window, opener: null, top: Window, length: 0, frames: Window, …&#125;</span><br></pre></td></tr></table></figure><p>执行 foo 函数会先从 foo 函数内部查找是否有局部变量 value</p><p>如果没有就查找上面一层的代码 全局 window 也就是 value 等于 1</p><p>bar 函数 内部 有 value = 2 所以执行 bar 会输出 2</p><p><em>JS是静态词法作用域</em></p><p>如果是动态的词法作用域 如 bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">value=1</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">foo</span></span> () &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$value</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">bar</span></span> () &#123;</span><br><span class="line">    <span class="built_in">local</span> value=2;</span><br><span class="line">    foo;</span><br><span class="line">&#125;</span><br><span class="line">bar</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yuanruqian@lydia ~ % bash scope.bash</span><br><span class="line">2</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = &#123;</span><br><span class="line">name :<span class="number">1</span>,</span><br><span class="line">b:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name++;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.name</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'a.b():'</span>,a.b())</span><br><span class="line"><span class="keyword">var</span> c = a.b</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'c():'</span>,c())</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 输出</span></span><br><span class="line">a.b(): <span class="number">2</span></span><br><span class="line">c(): <span class="number">2</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span 
      
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>公平洗牌算法</title>
    <link href="http://yoursite.com/2020/08/08/%E5%85%AC%E5%B9%B3%E6%B4%97%E7%89%8C%E7%AE%97%E6%B3%95/"/>
    <id>http://yoursite.com/2020/08/08/%E5%85%AC%E5%B9%B3%E6%B4%97%E7%89%8C%E7%AE%97%E6%B3%95/</id>
    <published>2020-08-08T07:01:54.000Z</published>
    <updated>2020-08-08T07:15:01.597Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>每一位上出现某个元素的概率都相等</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">JustCardShifting</span>(<span class="params">cards</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> N = cards.length;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'original:'</span>,cards);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i=N<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) &#123;</span><br><span class="line">    <span class="keyword">const</span> rand = <span class="built_in">Math</span>.floor(i*<span class="built_in">Math</span>.random())</span><br><span class="line">    <span class="built_in">console</span>.log(rand)</span><br><span class="line">    [cards[i],cards[rand]]=[cards[rand],cards[i]]</span><br><span class="line">&#125;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'after:'</span>,cards)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">9</span>,<span class="number">23</span>,<span class="number">1</span>,<span class="number">63</span>,<span class="number">4</span>,<span class="number">1</span>]</span><br><span class="line">JustCardShifting(arr)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;每一位上出现某个元素的概率都相等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line
      
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>实现一个简单的红绿灯</title>
    <link href="http://yoursite.com/2020/08/08/%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E7%BA%A2%E7%BB%BF%E7%81%AF/"/>
    <id>http://yoursite.com/2020/08/08/%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E7%BA%A2%E7%BB%BF%E7%81%AF/</id>
    <published>2020-08-08T05:23:49.000Z</published>
    <updated>2020-08-08T07:00:40.583Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>打印red，停1s,打印yellow,停2s,打印green,停4s</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// async await</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sleep</span>(<span class="params">duration</span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">setTimeout(resolve, duration);</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">changeColor</span>(<span class="params">color, duration</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'traffic-light '</span>, color);</span><br><span class="line"><span class="keyword">await</span> sleep(duration);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> i=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> (i++<span class="xml"><span class="tag">&lt;<span class="name">5)</span> &#123;</span></span></span><br><span class="line"><span class="xml">await changeColor('red', 1000);</span></span><br><span class="line"><span class="xml">await changeColor('yellow', 2000);</span></span><br><span class="line"><span class="xml">await changeColor('green', 4000);</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">show()</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;打印red，停1s,打印yellow,停2s,打印green,停4s&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre
      
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Data Analysis with R: College Admission</title>
    <link href="http://yoursite.com/2020/06/06/Data-Analysis-with-R-College-Admission/"/>
    <id>http://yoursite.com/2020/06/06/Data-Analysis-with-R-College-Admission/</id>
    <published>2020-06-06T07:14:57.000Z</published>
    <updated>2020-06-08T05:13:50.654Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Data source : https://www.kaggle.com/samsonqian/college-admissions/data#</p><p>Huge thanks to the provider of the dataset ! 🙏</p><p>As a junior student who wanted to apply for American universities this year yet interrupted by the COVID-19 pandemic, I feel very distressed and lost during the past few months.</p><p>I don't know what to do anymore. Everything derails my plans.</p><p>So I thought maybe I should get myself together and gap one or two years.</p><p>Now I have a new start.</p><p>During my gap year at least I can do more research on the admission system (though what I get is undergrad admission data) and prepare myself. That's why I want to write this piece.</p><p>Also I want to practice my R skill in the real world 🥳</p></blockquote><h4 id="the-most-selective-colleges">The most selective colleges ?</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; data.admission_rate &lt;- data$Admissions.total/data$Applicants.total*<span class="number">100</span></span><br><span class="line">&gt; data.enroll_rate &lt;- data$Enrolled.total/data$Admissions.total*<span class="number">100</span></span><br><span class="line">&gt; ad_en &lt;- data.frame(name = data$Name, ad = data.admission_rate, en = data.enroll_rate)</span><br></pre></td></tr></table></figure><p>Well, I find some <code>NA</code> so I need to clean the data first.</p><p>Filter out all rows has <code>NA</code> :</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; ad_en &lt;- ad_en[!(is.na(ad_en$ad)|is.na(ad_en$en)),]</span><br></pre></td></tr></table></figure><p><del>Be careful about rows and columns in R, never forget the coma !!! 😭</del></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; ad_top_100 &lt;- ad_en[order(ad_en$ad),]</span><br><span class="line">&gt; ad_top_100 &lt;- ad_top_100[c(<span class="number">1</span>,<span class="number">100</span>),]</span><br></pre></td></tr></table></figure><p>Let's check out the top 100 most admission selective colleges :</p><table><colgroup><col style="width: 4%" /><col style="width: 62%" /><col style="width: 18%" /><col style="width: 14%" /></colgroup><thead><tr class="header"><th style="text-align: left;"></th><th style="text-align: left;">name</th><th style="text-align: left;">Admission rate %</th><th style="text-align: left;">enroll rate %</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;">1470</td><td style="text-align: left;">Stanford University</td><td style="text-align: left;">5.686618</td><td style="text-align: left;">75.95109</td></tr><tr class="even"><td style="text-align: left;">545</td><td style="text-align: left;">Harvard University</td><td style="text-align: left;">5.844731</td><td style="text-align: left;">81.04543</td></tr><tr class="odd"><td style="text-align: left;">180</td><td style="text-align: left;">Yale University</td><td style="text-align: left;">7.050419</td><td style="text-align: left;">66.37298</td></tr><tr class="even"><td style="text-align: left;">761</td><td style="text-align: left;">Princeton University</td><td style="text-align: left;">7.407827</td><td style="text-align: left;">65.46103</td></tr><tr class="odd"><td style="text-align: left;">794</td><td style="text-align: left;">Columbia University in the City of New York</td><td style="text-align: left;">7.415780</td><td style="text-align: left;">59.90686</td></tr><tr class="even"><td style="text-align: left;">796</td><td style="text-align: left;">Cooper Union for the Advancement of Science and Art</td><td style="text-align: left;">7.735672</td><td style="text-align: left;">75.30364</td></tr><tr class="odd"><td style="text-align: left;">552</td><td style="text-align: left;">Massachusetts Institute of Technology</td><td style="text-align: left;">8.152088</td><td style="text-align: left;">72.02842</td></tr><tr class="even"><td style="text-align: left;">290</td><td style="text-align: left;">University of Chicago</td><td style="text-align: left;">8.810718</td><td style="text-align: left;">53.40824</td></tr><tr class="odd"><td style="text-align: left;">1173</td><td style="text-align: left;">Brown University</td><td style="text-align: left;">9.177357</td><td style="text-align: left;">58.13866</td></tr><tr class="even"><td style="text-align: left;">735</td><td style="text-align: left;">Dartmouth College</td><td style="text-align: left;">9.779316</td><td style="text-align: left;">48.58407</td></tr><tr class="odd"><td style="text-align: left;">65</td><td style="text-align: left;">California Institute of Technology</td><td style="text-align: left;">10.551039</td><td style="text-align: left;">42.63699</td></tr><tr class="even"><td style="text-align: left;">95</td><td style="text-align: left;">Claremont McKenna College</td><td style="text-align: left;">11.725263</td><td style="text-align: left;">52.08655</td></tr><tr class="odd"><td style="text-align: left;">1141</td><td style="text-align: left;">University of Pennsylvania</td><td style="text-align: left;">12.243463</td><td style="text-align: left;">63.21149</td></tr><tr class="even"><td style="text-align: left;">1258</td><td style="text-align: left;">Vanderbilt University</td><td style="text-align: left;">12.743175</td><td style="text-align: left;">40.70149</td></tr><tr class="odd"><td style="text-align: left;">691</td><td style="text-align: left;">College of the Ozarks</td><td style="text-align: left;">13.007319</td><td style="text-align: left;">91.30435</td></tr><tr class="even"><td style="text-align: left;">911</td><td style="text-align: left;">Duke University</td><td style="text-align: left;">13.422664</td><td style="text-align: left;">42.04072</td></tr><tr class="odd"><td style="text-align: left;">664</td><td style="text-align: left;">Rust College</td><td style="text-align: left;">13.864213</td><td style="text-align: left;">65.67506</td></tr><tr class="even"><td style="text-align: left;">125</td><td style="text-align: left;">Pomona College</td><td style="text-align: left;">13.924228</td><td style="text-align: left;">39.85944</td></tr><tr class="odd"><td style="text-align: left;">523</td><td style="text-align: left;">Amherst College</td><td style="text-align: left;">14.280308</td><td style="text-align: left;">41.16608</td></tr><tr class="even"><td style="text-align: left;">1159</td><td style="text-align: left;">Swarthmore College</td><td style="text-align: left;">14.315949</td><td style="text-align: left;">40.97149</td></tr><tr class="odd"><td style="text-align: left;">123</td><td style="text-align: left;">Pitzer College</td><td style="text-align: left;">14.507898</td><td style="text-align: left;">43.71859</td></tr><tr class="even"><td style="text-align: left;">482</td><td style="text-align: left;">Bowdoin College</td><td style="text-align: left;">14.946115</td><td style="text-align: left;">47.15370</td></tr><tr class="odd"><td style="text-align: left;">321</td><td style="text-align: left;">Northwestern University</td><td style="text-align: left;">15.321273</td><td style="text-align: left;">41.46987</td></tr><tr class="even"><td style="text-align: left;">699</td><td style="text-align: left;">Washington University in St Louis</td><td style="text-align: left;">15.552678</td><td style="text-align: left;">34.37233</td></tr><tr class="odd"><td style="text-align: left;">797</td><td style="text-align: left;">Cornell University</td><td style="text-align: left;">15.555389</td><td style="text-align: left;">51.80006</td></tr><tr class="even"><td style="text-align: left;">1293</td><td style="text-align: left;">Rice University</td><td style="text-align: left;">16.743432</td><td style="text-align: left;">37.89229</td></tr><tr class="odd"><td style="text-align: left;">190</td><td style="text-align: left;">Georgetown University</td><td style="text-align: left;">16.967437</td><td style="text-align: left;">46.00059</td></tr><tr class="even"><td style="text-align: left;">578</td><td style="text-align: left;">Williams College</td><td style="text-align: left;">17.017966</td><td style="text-align: left;">45.46966</td></tr><tr class="odd"><td style="text-align: left;">1349</td><td style="text-align: left;">Middlebury College</td><td style="text-align: left;">17.158359</td><td style="text-align: left;">39.39394</td></tr><tr class="even"><td style="text-align: left;">82</td><td style="text-align: left;">University of California-Berkeley</td><td style="text-align: left;">17.998282</td><td style="text-align: left;">37.46849</td></tr><tr class="odd"><td style="text-align: left;">504</td><td style="text-align: left;">Johns Hopkins University</td><td style="text-align: left;">18.133671</td><td style="text-align: left;">35.92660</td></tr><tr class="even"><td style="text-align: left;">101</td><td style="text-align: left;">Harvey Mudd College</td><td style="text-align: left;">18.168974</td><td style="text-align: left;">33.74806</td></tr><tr class="odd"><td style="text-align: left;">1397</td><td style="text-align: left;">Washington and Lee University</td><td style="text-align: left;">18.434587</td><td style="text-align: left;">41.84830</td></tr><tr class="even"><td style="text-align: left;">571</td><td style="text-align: left;">Tufts University</td><td style="text-align: left;">18.844671</td><td style="text-align: left;">37.85653</td></tr><tr class="odd"><td style="text-align: left;">138</td><td style="text-align: left;">University of Southern California</td><td style="text-align: left;">19.838253</td><td style="text-align: left;">31.10165</td></tr><tr class="even"><td style="text-align: left;">233</td><td style="text-align: left;">Albany State University</td><td style="text-align: left;">19.915152</td><td style="text-align: left;">30.49300</td></tr><tr class="odd"><td style="text-align: left;">787</td><td style="text-align: left;">Barnard College</td><td style="text-align: left;">20.531573</td><td style="text-align: left;">50.39096</td></tr><tr class="even"><td style="text-align: left;">178</td><td style="text-align: left;">Wesleyan University</td><td style="text-align: left;">20.923751</td><td style="text-align: left;">35.77545</td></tr><tr class="odd"><td style="text-align: left;">626</td><td style="text-align: left;">Carleton College</td><td style="text-align: left;">20.951029</td><td style="text-align: left;">35.70461</td></tr><tr class="even"><td style="text-align: left;">325</td><td style="text-align: left;">Robert Morris University Illinois</td><td style="text-align: left;">21.004902</td><td style="text-align: left;">83.89732</td></tr><tr class="odd"><td style="text-align: left;">1372</td><td style="text-align: left;">Liberty University</td><td style="text-align: left;">21.652724</td><td style="text-align: left;">45.07448</td></tr><tr class="even"><td style="text-align: left;">85</td><td style="text-align: left;">University of California-Los Angeles</td><td style="text-align: left;">21.989378</td><td style="text-align: left;">35.16676</td></tr><tr class="odd"><td style="text-align: left;">683</td><td style="text-align: left;">Missouri Valley College</td><td style="text-align: left;">22.181146</td><td style="text-align: left;">86.45833</td></tr><tr class="even"><td style="text-align: left;">148</td><td style="text-align: left;">Colorado College</td><td style="text-align: left;">22.283737</td><td style="text-align: left;">40.52795</td></tr><tr class="odd"><td style="text-align: left;">368</td><td style="text-align: left;">University of Notre Dame</td><td style="text-align: left;">22.304074</td><td style="text-align: left;">52.59146</td></tr><tr class="even"><td style="text-align: left;">661</td><td style="text-align: left;">Mississippi Valley State University</td><td style="text-align: left;">22.716327</td><td style="text-align: left;">34.84099</td></tr><tr class="odd"><td style="text-align: left;">805</td><td style="text-align: left;">CUNY Lehman College</td><td style="text-align: left;">23.276195</td><td style="text-align: left;">15.25471</td></tr><tr class="even"><td style="text-align: left;">1238</td><td style="text-align: left;">Le Moyne-Owen College</td><td style="text-align: left;">23.349436</td><td style="text-align: left;">65.51724</td></tr><tr class="odd"><td style="text-align: left;">1093</td><td style="text-align: left;">Haverford College</td><td style="text-align: left;">23.486750</td><td style="text-align: left;">39.19240</td></tr><tr class="even"><td style="text-align: left;">898</td><td style="text-align: left;">Vassar College</td><td style="text-align: left;">24.114782</td><td style="text-align: left;">36.35371</td></tr><tr class="odd"><td style="text-align: left;">481</td><td style="text-align: left;">Bates College</td><td style="text-align: left;">24.165554</td><td style="text-align: left;">39.46330</td></tr><tr class="even"><td style="text-align: left;">798</td><td style="text-align: left;">CUNY Bernard M Baruch College</td><td style="text-align: left;">24.825052</td><td style="text-align: left;">24.03164</td></tr><tr class="odd"><td style="text-align: left;">1073</td><td style="text-align: left;">Carnegie Mellon University</td><td style="text-align: left;">25.487185</td><td style="text-align: left;">29.96052</td></tr><tr class="even"><td style="text-align: left;">910</td><td style="text-align: left;">Davidson College</td><td style="text-align: left;">25.605901</td><td style="text-align: left;">39.75309</td></tr><tr class="odd"><td style="text-align: left;">483</td><td style="text-align: left;">Colby College</td><td style="text-align: left;">26.040318</td><td style="text-align: left;">34.30398</td></tr><tr class="even"><td style="text-align: left;">842</td><td style="text-align: left;">New York University</td><td style="text-align: left;">26.045466</td><td style="text-align: left;">34.56126</td></tr><tr class="odd"><td style="text-align: left;">245</td><td style="text-align: left;">Emory University</td><td style="text-align: left;">26.334764</td><td style="text-align: left;">29.61756</td></tr><tr class="even"><td style="text-align: left;">792</td><td style="text-align: left;">Colgate University</td><td style="text-align: left;">26.379269</td><td style="text-align: left;">34.35944</td></tr><tr class="odd"><td style="text-align: left;">478</td><td style="text-align: left;">Tulane University of Louisiana</td><td style="text-align: left;">26.429188</td><td style="text-align: left;">20.21103</td></tr><tr class="even"><td style="text-align: left;">817</td><td style="text-align: left;">Hamilton College</td><td style="text-align: left;">27.187562</td><td style="text-align: left;">35.99707</td></tr><tr class="odd"><td style="text-align: left;">200</td><td style="text-align: left;">Edward Waters College</td><td style="text-align: left;">27.320399</td><td style="text-align: left;">39.92322</td></tr><tr class="even"><td style="text-align: left;">931</td><td style="text-align: left;">University of North Carolina at Chapel Hill</td><td style="text-align: left;">27.594331</td><td style="text-align: left;">49.89168</td></tr><tr class="odd"><td style="text-align: left;">45</td><td style="text-align: left;">University of Arkansas at Pine Bluff</td><td style="text-align: left;">27.699072</td><td style="text-align: left;">50.08818</td></tr><tr class="even"><td style="text-align: left;">332</td><td style="text-align: left;">Shimer College</td><td style="text-align: left;">28.571429</td><td style="text-align: left;">100.00000</td></tr><tr class="odd"><td style="text-align: left;">289</td><td style="text-align: left;">Chicago State University</td><td style="text-align: left;">28.645334</td><td style="text-align: left;">18.46154</td></tr><tr class="even"><td style="text-align: left;">572</td><td style="text-align: left;">Wellesley College</td><td style="text-align: left;">29.108080</td><td style="text-align: left;">42.89834</td></tr><tr class="odd"><td style="text-align: left;">1069</td><td style="text-align: left;">Bucknell University</td><td style="text-align: left;">29.507990</td><td style="text-align: left;">39.78678</td></tr><tr class="even"><td style="text-align: left;">803</td><td style="text-align: left;">CUNY Hunter College</td><td style="text-align: left;">29.715846</td><td style="text-align: left;">21.56455</td></tr><tr class="odd"><td style="text-align: left;">1323</td><td style="text-align: left;">Texas Wesleyan University</td><td style="text-align: left;">29.916067</td><td style="text-align: left;">27.35471</td></tr><tr class="even"><td style="text-align: left;">1392</td><td style="text-align: left;">University of Virginia-Main Campus</td><td style="text-align: left;">29.985509</td><td style="text-align: left;">40.50167</td></tr><tr class="odd"><td style="text-align: left;">1501</td><td style="text-align: left;">Trine University-Regional/Non-Traditional Campuses</td><td style="text-align: left;">30.303030</td><td style="text-align: left;">70.00000</td></tr><tr class="even"><td style="text-align: left;">992</td><td style="text-align: left;">Oberlin College</td><td style="text-align: left;">30.411401</td><td style="text-align: left;">34.52697</td></tr><tr class="odd"><td style="text-align: left;">78</td><td style="text-align: left;">California State University-Long Beach</td><td style="text-align: left;">30.818445</td><td style="text-align: left;">25.21821</td></tr><tr class="even"><td style="text-align: left;">1105</td><td style="text-align: left;">Lehigh University</td><td style="text-align: left;">30.836445</td><td style="text-align: left;">30.86038</td></tr><tr class="odd"><td style="text-align: left;">1383</td><td style="text-align: left;">University of Richmond</td><td style="text-align: left;">31.155216</td><td style="text-align: left;">26.29860</td></tr><tr class="even"><td style="text-align: left;">127</td><td style="text-align: left;">San Diego State University</td><td style="text-align: left;">31.213963</td><td style="text-align: left;">25.91735</td></tr><tr class="odd"><td style="text-align: left;">67</td><td style="text-align: left;">California Polytechnic State University-San Luis Obispo</td><td style="text-align: left;">31.230882</td><td style="text-align: left;">31.50732</td></tr><tr class="even"><td style="text-align: left;">177</td><td style="text-align: left;">Trinity College</td><td style="text-align: left;">31.782541</td><td style="text-align: left;">24.83553</td></tr><tr class="odd"><td style="text-align: left;">799</td><td style="text-align: left;">CUNY Brooklyn College</td><td style="text-align: left;">31.981051</td><td style="text-align: left;">18.09014</td></tr><tr class="even"><td style="text-align: left;">529</td><td style="text-align: left;">Boston College</td><td style="text-align: left;">32.215339</td><td style="text-align: left;">28.02024</td></tr><tr class="odd"><td style="text-align: left;">1058</td><td style="text-align: left;">Corban University</td><td style="text-align: left;">32.251381</td><td style="text-align: left;">23.76874</td></tr></tbody></table><p>Well, not every college on the list is a "traditional prestige university". But many elite universities like Stanford, Harvard, Yale are on the list.</p><h4 id="how-about-the-standard-test-scores">How about the standard test scores?</h4><p>First, consider the 75th percentile —— how good are the good students ?</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; per_75 &lt;- data$SAT.Math.75th.percentile.score+data$SAT.Writing.75th.percentile.score+data$SAT.Critical.Reading.75th.percentile.score+data$ACT.Composite.75th.percentile.score</span><br><span class="line">&gt; table_75 &lt;- data.frame(name = data$Name,per_75=per_75)</span><br><span class="line">&gt; table_75 &lt;- table_75[!is.na(table_75$per_75),]</span><br><span class="line">&gt; table_75 &lt;- table_75[order(table_75$per_75,decreasing=<span class="literal">T</span>),]</span><br><span class="line">&gt; table_75 &lt;- table_75[c(<span class="number">1</span>:<span class="number">25</span>),]</span><br></pre></td></tr></table></figure><table><thead><tr class="header"><th style="text-align: left;"></th><th style="text-align: left;">name</th><th style="text-align: left;">per_75 = SAT 75% + ACT 75%</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;">545</td><td style="text-align: left;">Harvard University</td><td style="text-align: left;">2435</td></tr><tr class="even"><td style="text-align: left;">65</td><td style="text-align: left;">California Institute of Technology</td><td style="text-align: left;">2425</td></tr><tr class="odd"><td style="text-align: left;">180</td><td style="text-align: left;">Yale University</td><td style="text-align: left;">2425</td></tr><tr class="even"><td style="text-align: left;">761</td><td style="text-align: left;">Princeton University</td><td style="text-align: left;">2425</td></tr><tr class="odd"><td style="text-align: left;">290</td><td style="text-align: left;">University of Chicago</td><td style="text-align: left;">2405</td></tr><tr class="even"><td style="text-align: left;">552</td><td style="text-align: left;">Massachusetts Institute of Technology</td><td style="text-align: left;">2385</td></tr><tr class="odd"><td style="text-align: left;">735</td><td style="text-align: left;">Dartmouth College</td><td style="text-align: left;">2384</td></tr><tr class="even"><td style="text-align: left;">794</td><td style="text-align: left;">Columbia University in the City of New York</td><td style="text-align: left;">2384</td></tr><tr class="odd"><td style="text-align: left;">1470</td><td style="text-align: left;">Stanford University</td><td style="text-align: left;">2384</td></tr><tr class="even"><td style="text-align: left;">578</td><td style="text-align: left;">Williams College</td><td style="text-align: left;">2374</td></tr><tr class="odd"><td style="text-align: left;">1258</td><td style="text-align: left;">Vanderbilt University</td><td style="text-align: left;">2374</td></tr><tr class="even"><td style="text-align: left;">911</td><td style="text-align: left;">Duke University</td><td style="text-align: left;">2364</td></tr><tr class="odd"><td style="text-align: left;">101</td><td style="text-align: left;">Harvey Mudd College</td><td style="text-align: left;">2355</td></tr><tr class="even"><td style="text-align: left;">125</td><td style="text-align: left;">Pomona College</td><td style="text-align: left;">2354</td></tr><tr class="odd"><td style="text-align: left;">321</td><td style="text-align: left;">Northwestern University</td><td style="text-align: left;">2354</td></tr><tr class="even"><td style="text-align: left;">699</td><td style="text-align: left;">Washington University in St Louis</td><td style="text-align: left;">2354</td></tr><tr class="odd"><td style="text-align: left;">1141</td><td style="text-align: left;">University of Pennsylvania</td><td style="text-align: left;">2354</td></tr><tr class="even"><td style="text-align: left;">1293</td><td style="text-align: left;">Rice University</td><td style="text-align: left;">2354</td></tr><tr class="odd"><td style="text-align: left;">1173</td><td style="text-align: left;">Brown University</td><td style="text-align: left;">2344</td></tr><tr class="even"><td style="text-align: left;">1159</td><td style="text-align: left;">Swarthmore College</td><td style="text-align: left;">2334</td></tr><tr class="odd"><td style="text-align: left;">523</td><td style="text-align: left;">Amherst College</td><td style="text-align: left;">2324</td></tr><tr class="even"><td style="text-align: left;">571</td><td style="text-align: left;">Tufts University</td><td style="text-align: left;">2323</td></tr><tr class="odd"><td style="text-align: left;">1073</td><td style="text-align: left;">Carnegie Mellon University</td><td style="text-align: left;">2314</td></tr><tr class="even"><td style="text-align: left;">482</td><td style="text-align: left;">Bowdoin College</td><td style="text-align: left;">2313</td></tr><tr class="odd"><td style="text-align: left;">797</td><td style="text-align: left;">Cornell University</td><td style="text-align: left;">2304</td></tr></tbody></table><p>It seems that good grades can get you into prestige universities.</p><p>Then, what about the other side of the spectrum ?</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; per_25 &lt;- data$SAT.Math.25th.percentile.score+data$SAT.Writing.25th.percentile.score+data$ACT.Composite.25th.percentile.score+data$SAT.Critical.Reading.25th.percentile.score</span><br><span class="line">&gt; table_25 &lt;- data.frame(name = data$Name,per_25 = per_25)</span><br><span class="line">&gt; table_25 &lt;- table_25[order(table_25$per_25,decreasing=<span class="literal">T</span>),]</span><br><span class="line">&gt; table_25 &lt;- table_25[c(<span class="number">1</span>:<span class="number">25</span>),]</span><br></pre></td></tr></table></figure><table><thead><tr class="header"><th style="text-align: left;"></th><th style="text-align: left;">name</th><th style="text-align: left;">per_25 = SAT 25% + ACT 25%</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;">65</td><td style="text-align: left;">California Institute of Technology</td><td style="text-align: left;">2243</td></tr><tr class="even"><td style="text-align: left;">290</td><td style="text-align: left;">University of Chicago</td><td style="text-align: left;">2172</td></tr><tr class="odd"><td style="text-align: left;">552</td><td style="text-align: left;">Massachusetts Institute of Technology</td><td style="text-align: left;">2153</td></tr><tr class="even"><td style="text-align: left;">180</td><td style="text-align: left;">Yale University</td><td style="text-align: left;">2152</td></tr><tr class="odd"><td style="text-align: left;">545</td><td style="text-align: left;">Harvard University</td><td style="text-align: left;">2152</td></tr><tr class="even"><td style="text-align: left;">699</td><td style="text-align: left;">Washington University in St Louis</td><td style="text-align: left;">2152</td></tr><tr class="odd"><td style="text-align: left;">761</td><td style="text-align: left;">Princeton University</td><td style="text-align: left;">2151</td></tr><tr class="even"><td style="text-align: left;">1258</td><td style="text-align: left;">Vanderbilt University</td><td style="text-align: left;">2122</td></tr><tr class="odd"><td style="text-align: left;">321</td><td style="text-align: left;">Northwestern University</td><td style="text-align: left;">2111</td></tr><tr class="even"><td style="text-align: left;">794</td><td style="text-align: left;">Columbia University in the City of New York</td><td style="text-align: left;">2111</td></tr><tr class="odd"><td style="text-align: left;">101</td><td style="text-align: left;">Harvey Mudd College</td><td style="text-align: left;">2102</td></tr><tr class="even"><td style="text-align: left;">125</td><td style="text-align: left;">Pomona College</td><td style="text-align: left;">2101</td></tr><tr class="odd"><td style="text-align: left;">1470</td><td style="text-align: left;">Stanford University</td><td style="text-align: left;">2101</td></tr><tr class="even"><td style="text-align: left;">482</td><td style="text-align: left;">Bowdoin College</td><td style="text-align: left;">2080</td></tr><tr class="odd"><td style="text-align: left;">571</td><td style="text-align: left;">Tufts University</td><td style="text-align: left;">2080</td></tr><tr class="even"><td style="text-align: left;">1141</td><td style="text-align: left;">University of Pennsylvania</td><td style="text-align: left;">2080</td></tr><tr class="odd"><td style="text-align: left;">1293</td><td style="text-align: left;">Rice University</td><td style="text-align: left;">2071</td></tr><tr class="even"><td style="text-align: left;">911</td><td style="text-align: left;">Duke University</td><td style="text-align: left;">2070</td></tr><tr class="odd"><td style="text-align: left;">1159</td><td style="text-align: left;">Swarthmore College</td><td style="text-align: left;">2061</td></tr><tr class="even"><td style="text-align: left;">735</td><td style="text-align: left;">Dartmouth College</td><td style="text-align: left;">2060</td></tr><tr class="odd"><td style="text-align: left;">523</td><td style="text-align: left;">Amherst College</td><td style="text-align: left;">2050</td></tr><tr class="even"><td style="text-align: left;">578</td><td style="text-align: left;">Williams College</td><td style="text-align: left;">2040</td></tr><tr class="odd"><td style="text-align: left;">626</td><td style="text-align: left;">Carleton College</td><td style="text-align: left;">2029</td></tr><tr class="even"><td style="text-align: left;">1173</td><td style="text-align: left;">Brown University</td><td style="text-align: left;">2029</td></tr><tr class="odd"><td style="text-align: left;">1073</td><td style="text-align: left;">Carnegie Mellon University</td><td style="text-align: left;">2020</td></tr></tbody></table><p>Still, the lower boundary of prestige universities is very demanding ...</p><p>Now we can intersect the two lists above to get the most academic-demanding universities :</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; prestige &lt;- data.frame(prestige)</span><br><span class="line">&gt; View(prestige)</span><br></pre></td></tr></table></figure><table><thead><tr class="header"><th style="text-align: left;"></th><th style="text-align: left;">Name</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;">1</td><td style="text-align: left;">California Institute of Technology</td></tr><tr class="even"><td style="text-align: left;">2</td><td style="text-align: left;">University of Chicago</td></tr><tr class="odd"><td style="text-align: left;">3</td><td style="text-align: left;">Massachusetts Institute of Technology</td></tr><tr class="even"><td style="text-align: left;">4</td><td style="text-align: left;">Yale University</td></tr><tr class="odd"><td style="text-align: left;">5</td><td style="text-align: left;">Harvard University</td></tr><tr class="even"><td style="text-align: left;">6</td><td style="text-align: left;">Washington University in St Louis</td></tr><tr class="odd"><td style="text-align: left;">7</td><td style="text-align: left;">Princeton University</td></tr><tr class="even"><td style="text-align: left;">8</td><td style="text-align: left;">Vanderbilt University</td></tr><tr class="odd"><td style="text-align: left;">9</td><td style="text-align: left;">Northwestern University</td></tr><tr class="even"><td style="text-align: left;">10</td><td style="text-align: left;">Columbia University in the City of New York</td></tr><tr class="odd"><td style="text-align: left;">11</td><td style="text-align: left;">Harvey Mudd College</td></tr><tr class="even"><td style="text-align: left;">12</td><td style="text-align: left;">Pomona College</td></tr><tr class="odd"><td style="text-align: left;">13</td><td style="text-align: left;">Stanford University</td></tr><tr class="even"><td style="text-align: left;">14</td><td style="text-align: left;">Bowdoin College</td></tr><tr class="odd"><td style="text-align: left;">15</td><td style="text-align: left;">Tufts University</td></tr><tr class="even"><td style="text-align: left;">16</td><td style="text-align: left;">University of Pennsylvania</td></tr><tr class="odd"><td style="text-align: left;">17</td><td style="text-align: left;">Rice University</td></tr><tr class="even"><td style="text-align: left;">18</td><td style="text-align: left;">Duke University</td></tr><tr class="odd"><td style="text-align: left;">19</td><td style="text-align: left;">Swarthmore College</td></tr><tr class="even"><td style="text-align: left;">20</td><td style="text-align: left;">Dartmouth College</td></tr><tr class="odd"><td style="text-align: left;">21</td><td style="text-align: left;">Amherst College</td></tr><tr class="even"><td style="text-align: left;">22</td><td style="text-align: left;">Williams College</td></tr><tr class="odd"><td style="text-align: left;">23</td><td style="text-align: left;">Brown University</td></tr><tr class="even"><td style="text-align: left;">24</td><td style="text-align: left;">Carnegie Mellon University</td></tr></tbody></table><h4 id="can-you-graduate">Can you graduate ?</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; grad_rate &lt;- data$Graduation.rate...Bachelor.degree.within.4.years..total+data$Graduation.rate...Bachelor.degree.within.5.years..total+data$Graduation.rate...Bachelor.degree.within.6.years..total</span><br><span class="line">&gt; grad_rate_table &lt;- data.frame(name=data$Name,grad_rate=grad_rate)</span><br><span class="line">&gt; grad_rate_table &lt;- grad_rate_table[grad_rate_table$grad_rate&gt;<span class="number">0</span>,]</span><br><span class="line">&gt; boxplot(grad_rate_table$grad_rate/<span class="number">300</span>*<span class="number">100</span>)</span><br><span class="line">&gt; title(main = <span class="string">"Graduation rate box plot"</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/3X7pbD2.png" /></p><p>It seems that students better push themselves harder. About 35% ~ 60% students cannot graduate in 6 years 🤔</p><h4 id="the-endowment">The endowment ?</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; FASB &lt;- data.frame(name = data$Name, endow = data$Endowment.assets..year.end..per.FTE.enrollment..FASB.)</span><br><span class="line">&gt; FASB &lt;- FASB[!is.na(FASB$endow),]</span><br><span class="line">&gt; GASB &lt;- data.frame(name = data$Name,endow = data$Endowment.assets..year.end..per.FTE.enrollment..GASB.)</span><br><span class="line">&gt; GASB &lt;- GASB[!is.na(GASB$endow),]</span><br><span class="line">&gt; endowment &lt;- rbind(FASB,GASB)</span><br><span class="line">&gt; endowment &lt;- endowment[order(endowment$endow,decreasing = <span class="literal">T</span>),]</span><br><span class="line">&gt; endowment &lt;- endowment[c(<span class="number">1</span>:<span class="number">25</span>),]</span><br></pre></td></tr></table></figure><table><thead><tr class="header"><th style="text-align: left;"></th><th style="text-align: left;">Name</th><th style="text-align: left;">Endowment = FASB + GASB</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;">1492</td><td style="text-align: left;">Soka University of America</td><td style="text-align: left;">2505435</td></tr><tr class="even"><td style="text-align: left;">761</td><td style="text-align: left;">Princeton University</td><td style="text-align: left;">2320421</td></tr><tr class="odd"><td style="text-align: left;">180</td><td style="text-align: left;">Yale University</td><td style="text-align: left;">1528324</td></tr><tr class="even"><td style="text-align: left;">545</td><td style="text-align: left;">Harvard University</td><td style="text-align: left;">1392761</td></tr><tr class="odd"><td style="text-align: left;">1470</td><td style="text-align: left;">Stanford University</td><td style="text-align: left;">1215932</td></tr><tr class="even"><td style="text-align: left;">125</td><td style="text-align: left;">Pomona College</td><td style="text-align: left;">1146818</td></tr><tr class="odd"><td style="text-align: left;">1159</td><td style="text-align: left;">Swarthmore College</td><td style="text-align: left;">1034611</td></tr><tr class="even"><td style="text-align: left;">552</td><td style="text-align: left;">Massachusetts Institute of Technology</td><td style="text-align: left;">980404</td></tr><tr class="odd"><td style="text-align: left;">391</td><td style="text-align: left;">Grinnell College</td><td style="text-align: left;">950232</td></tr><tr class="even"><td style="text-align: left;">523</td><td style="text-align: left;">Amherst College</td><td style="text-align: left;">930009</td></tr><tr class="odd"><td style="text-align: left;">578</td><td style="text-align: left;">Williams College</td><td style="text-align: left;">888422</td></tr><tr class="even"><td style="text-align: left;">65</td><td style="text-align: left;">California Institute of Technology</td><td style="text-align: left;">872856</td></tr><tr class="odd"><td style="text-align: left;">1293</td><td style="text-align: left;">Rice University</td><td style="text-align: left;">729227</td></tr><tr class="even"><td style="text-align: left;">796</td><td style="text-align: left;">Cooper Union for the Advancement of Science and Art</td><td style="text-align: left;">704474</td></tr><tr class="odd"><td style="text-align: left;">434</td><td style="text-align: left;">Berea College</td><td style="text-align: left;">623784</td></tr><tr class="even"><td style="text-align: left;">1397</td><td style="text-align: left;">Washington and Lee University</td><td style="text-align: left;">599001</td></tr><tr class="odd"><td style="text-align: left;">572</td><td style="text-align: left;">Wellesley College</td><td style="text-align: left;">593054</td></tr><tr class="even"><td style="text-align: left;">735</td><td style="text-align: left;">Dartmouth College</td><td style="text-align: left;">581104</td></tr><tr class="odd"><td style="text-align: left;">482</td><td style="text-align: left;">Bowdoin College</td><td style="text-align: left;">574151</td></tr><tr class="even"><td style="text-align: left;">368</td><td style="text-align: left;">University of Notre Dame</td><td style="text-align: left;">545295</td></tr><tr class="odd"><td style="text-align: left;">1383</td><td style="text-align: left;">University of Richmond</td><td style="text-align: left;">479753</td></tr><tr class="even"><td style="text-align: left;">566</td><td style="text-align: left;">Smith College</td><td style="text-align: left;">462144</td></tr><tr class="odd"><td style="text-align: left;">1482</td><td style="text-align: left;">Mayo Graduate School</td><td style="text-align: left;">458781</td></tr><tr class="even"><td style="text-align: left;">1068</td><td style="text-align: left;">Bryn Mawr College</td><td style="text-align: left;">458469</td></tr><tr class="odd"><td style="text-align: left;">95</td><td style="text-align: left;">Claremont McKenna College</td><td style="text-align: left;">456319</td></tr></tbody></table><p>A lot of prestige universities also received the largest endowments.</p><h4 id="women-enrolled">Women enrolled ?</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; women &lt;- data$Percent.of.total.enrollment.that.are.women</span><br><span class="line">&gt; women_undergrad &lt;- data$Percent.of.undergraduate.enrollment.that.are.women</span><br><span class="line">&gt; women_grad &lt;- data$Percent.of.graduate.enrollment.that.are.women</span><br><span class="line">&gt; boxplot(women,women_undergrad,women_grad,main=<span class="string">"Percent of enrollment that are women"</span>,names = c(<span class="string">"Total"</span>,<span class="string">"Undergrad"</span>,<span class="string">"Graduate"</span>),notch = <span class="literal">T</span>)</span><br></pre></td></tr></table></figure><figure><img src="https://i.imgur.com/BBqbmAW.png" alt="Imgur" /><figcaption>Imgur</figcaption></figure><p>We can easily tell from the graph above that women enrollment rate in higher education is definitely improving. Female students make up more than 50% in most colleges.</p><h4 id="diversity">Diversity ?</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; american_native &lt;- data$Percent.of.total.enrollment.that.are.Native.Hawaiian.or.Other.Pacific.Islander</span><br><span class="line">&gt; asian &lt;- data$Percent.of.total.enrollment.that.are.Asian</span><br><span class="line">&gt; black &lt;- data$Percent.of.total.enrollment.that.are.Black.or.African.American</span><br><span class="line">&gt; latino &lt;- data$Percent.of.total.enrollment.that.are.Hispanic.Latino</span><br><span class="line">&gt; hawaiian &lt;- data$Percent.of.total.enrollment.that.are.Native.Hawaiian.or.Other.Pacific.Islander</span><br><span class="line">&gt; white &lt;- data$Percent.of.total.enrollment.that.are.White</span><br><span class="line">&gt; unknown &lt;- data$Percent.of.total.enrollment.that.are.Race.ethnicity.unknown</span><br><span class="line">&gt; boxplot(american_native,asian,black,latino,hawaiian,white,unknown,main=<span class="string">"Percent of different races/ethnicity"</span>,notch = <span class="literal">T</span>,names = c(<span class="string">"Native"</span>,<span class="string">"Asian"</span>,<span class="string">"Black"</span>,<span class="string">"Latino"</span>,<span class="string">"Hawaiian"</span>,<span class="string">"White"</span>,<span class="string">"Unknown"</span>))</span><br></pre></td></tr></table></figure><figure><img src="https://i.imgur.com/BgnvXTJ.png" alt="Imgur" /><figcaption>Imgur</figcaption></figure><p>Hmmm ... the data range is a little bit drastic this time ...</p><p>Because I myself is Asian, I am curious to see what universities have the highest percentage of Asian students :</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; asian_df &lt;- data.frame(name=data$Name,asian_en=asian)</span><br><span class="line">&gt; asian_df &lt;- asian_df[!is.na(asian_df$asian_en),]</span><br><span class="line">&gt; asian_df &lt;- asian_df[order(asian_df$asian_en,decreasing = <span class="literal">T</span>),]</span><br><span class="line">&gt; asian_df &lt;- asian_df[c(<span class="number">1</span>:<span class="number">25</span>),]</span><br></pre></td></tr></table></figure><table><thead><tr class="header"><th style="text-align: left;"></th><th style="text-align: left;">Name</th><th style="text-align: left;">Asian_enrollment_rate</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;">277</td><td style="text-align: left;">University of Hawaii-West Oahu</td><td style="text-align: left;">40</td></tr><tr class="even"><td style="text-align: left;">84</td><td style="text-align: left;">University of California-Irvine</td><td style="text-align: left;">39</td></tr><tr class="odd"><td style="text-align: left;">275</td><td style="text-align: left;">University of Hawaii at Manoa</td><td style="text-align: left;">36</td></tr><tr class="even"><td style="text-align: left;">87</td><td style="text-align: left;">University of California-San Diego</td><td style="text-align: left;">35</td></tr><tr class="odd"><td style="text-align: left;">86</td><td style="text-align: left;">University of California-Riverside</td><td style="text-align: left;">33</td></tr><tr class="even"><td style="text-align: left;">121</td><td style="text-align: left;">University of the Pacific</td><td style="text-align: left;">32</td></tr><tr class="odd"><td style="text-align: left;">131</td><td style="text-align: left;">San Jose State University</td><td style="text-align: left;">32</td></tr><tr class="even"><td style="text-align: left;">1486</td><td style="text-align: left;">Remington College-Honolulu Campus</td><td style="text-align: left;">32</td></tr><tr class="odd"><td style="text-align: left;">83</td><td style="text-align: left;">University of California-Davis</td><td style="text-align: left;">31</td></tr><tr class="even"><td style="text-align: left;">798</td><td style="text-align: left;">CUNY Bernard M Baruch College</td><td style="text-align: left;">31</td></tr><tr class="odd"><td style="text-align: left;">82</td><td style="text-align: left;">University of California-Berkeley</td><td style="text-align: left;">30</td></tr><tr class="even"><td style="text-align: left;">85</td><td style="text-align: left;">University of California-Los Angeles</td><td style="text-align: left;">28</td></tr><tr class="odd"><td style="text-align: left;">129</td><td style="text-align: left;">San Francisco State University</td><td style="text-align: left;">27</td></tr><tr class="even"><td style="text-align: left;">273</td><td style="text-align: left;">Chaminade University of Honolulu</td><td style="text-align: left;">27</td></tr><tr class="odd"><td style="text-align: left;">65</td><td style="text-align: left;">California Institute of Technology</td><td style="text-align: left;">26</td></tr><tr class="even"><td style="text-align: left;">72</td><td style="text-align: left;">California State Polytechnic University-Pomona</td><td style="text-align: left;">24</td></tr><tr class="odd"><td style="text-align: left;">77</td><td style="text-align: left;">California State University-East Bay</td><td style="text-align: left;">23</td></tr><tr class="even"><td style="text-align: left;">808</td><td style="text-align: left;">CUNY Queens College</td><td style="text-align: left;">23</td></tr><tr class="odd"><td style="text-align: left;">809</td><td style="text-align: left;">CUNY York College</td><td style="text-align: left;">23</td></tr><tr class="even"><td style="text-align: left;">1487</td><td style="text-align: left;">University of Washington-Bothell Campus</td><td style="text-align: left;">23</td></tr><tr class="odd"><td style="text-align: left;">78</td><td style="text-align: left;">California State University-Long Beach</td><td style="text-align: left;">22</td></tr><tr class="even"><td style="text-align: left;">101</td><td style="text-align: left;">Harvey Mudd College</td><td style="text-align: left;">22</td></tr><tr class="odd"><td style="text-align: left;">572</td><td style="text-align: left;">Wellesley College</td><td style="text-align: left;">22</td></tr><tr class="even"><td style="text-align: left;">765</td><td style="text-align: left;">Rutgers University-New Brunswick</td><td style="text-align: left;">22</td></tr><tr class="odd"><td style="text-align: left;">76</td><td style="text-align: left;">California State University-Fullerton</td><td style="text-align: left;">21</td></tr></tbody></table><h4 id="where-will-you-go">Where will you go ?</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; geo_table &lt;- as.data.frame(table(data$Geographic.region))</span><br><span class="line">&gt; percent &lt;- paste(round(geo_table$Freq*<span class="number">100</span>/sum(geo_table$Freq)),<span class="string">"%"</span>)</span><br><span class="line">&gt; pie(geo_table$Freq,labels=paste(geo_table$Var1,percent),main=<span class="string">"Percent of Locations"</span>,col=rainbow(length(geo_table$Var1)))</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/nqhhoIp.png" /></p><h4 id="section"></h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Data source : https://www.kaggle.com/samsonqian/college-admissions/data#&lt;/p&gt;
&lt;p&gt;Huge thanks to the provider of the dataset !
      
    
    </summary>
    
    
    
      <category term="R" scheme="http://yoursite.com/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>Google校园空中宣讲会笔记：简历如何准备</title>
    <link href="http://yoursite.com/2020/05/15/Google%E6%A0%A1%E5%9B%AD%E7%A9%BA%E4%B8%AD%E5%AE%A3%E8%AE%B2%E4%BC%9A%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/05/15/Google%E6%A0%A1%E5%9B%AD%E7%A9%BA%E4%B8%AD%E5%AE%A3%E8%AE%B2%E4%BC%9A%E7%AC%94%E8%AE%B0/</id>
    <published>2020-05-15T12:23:49.000Z</published>
    <updated>2020-05-15T13:33:09.984Z</updated>
    
    <content type="html"><![CDATA[<p>HR和面试官关于简历的部分</p><p><strong>最好是中英双语版本的简历</strong></p><p><img src="https://i.imgur.com/1lCpqQV.png" alt="教育背景怎么写" /></p><p><img src="https://i.imgur.com/dtP9P96.png" alt="牢记XYZ法则" /></p><p><img src="https://i.imgur.com/sagyCgH.png" alt="领导力玄学（学校活动）" /></p><p><img src="https://i.imgur.com/GsAu20k.png" alt="学校活动怎么写" /></p><p><img src="https://i.imgur.com/VSpG8OV.png" alt="项目经历" /></p><p><img src="https://i.imgur.com/keetipb.png" alt="打工经历" /></p><p><img src="https://i.imgur.com/PaO7CyN.png" alt="打工经历怎么写" /></p><p><img src="https://i.imgur.com/V2WaNO0.png" alt="奖项/奖学金" /></p><p><img src="https://i.imgur.com/oINBzXw.png" alt="final tips" /></p><hr /><p>通过KS后的面试流程</p><p><img src="https://i.imgur.com/TLG9rGG.png" alt="形式" /></p><p><img src="https://i.imgur.com/heebKCm.png" alt="一共45分钟" /></p><p><img src="https://i.imgur.com/6DdZNZx.png" alt="技术部分" /></p><p>面试官说严肃正式的面试不会有brain teaser 然后那些个语言其实也没啥 自己拿自己最熟悉的就行 数据结构和算法不会要求全部掌握的 不会是ACM难度 课本难度 如果是别的专业的话没关系 会考虑到专业背景的 反正进去是大类SDE让你干啥你干啥…… 所以语言和技术栈不那么重要</p><p><img src="https://i.imgur.com/ZEIqNq4.png" alt="面试交流技巧" /></p><p>brute force 也要说出来</p><p>看到你进步更重要哈 毕竟好不容易面一个 都是想抓住你的闪光点的</p><p><img src="https://i.imgur.com/fXTHy9c.png" alt="重要的考核点" /></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;HR和面试官关于简历的部分&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最好是中英双语版本的简历&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/1lCpqQV.png&quot; alt=&quot;教育背景怎么写&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;ht
      
    
    </summary>
    
    
    
      <category term="Career" scheme="http://yoursite.com/tags/Career/"/>
    
  </entry>
  
  <entry>
    <title>Java: why strings cannot be altered</title>
    <link href="http://yoursite.com/2020/05/13/Java-why-strings-cannot-be-altered/"/>
    <id>http://yoursite.com/2020/05/13/Java-why-strings-cannot-be-altered/</id>
    <published>2020-05-13T09:32:16.000Z</published>
    <updated>2020-05-13T10:13:09.048Z</updated>
    
    <content type="html"><![CDATA[<p>Let’s inspect the source code :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * The value is used for character storage.</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@implNote</span> This field is trusted by the VM, and is a subject to</span></span><br><span class="line"><span class="comment">    * constant folding if String instance is constant. Overwriting this</span></span><br><span class="line"><span class="comment">    * field after construction will cause problems.</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * Additionally, it is marked with &#123;<span class="doctag">@link</span> Stable&#125; to trust the contents</span></span><br><span class="line"><span class="comment">    * of the array. No other facility in JDK provides this functionality (yet).</span></span><br><span class="line"><span class="comment">    * &#123;<span class="doctag">@link</span> Stable&#125; is safe here, because value is never null.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Stable</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">byte</span>[] value;</span><br></pre></td></tr></table></figure><p>Because it is defined as <code>final</code></p><p>And it is implemented by <code>byte</code></p><p>Let’s dissect the <code>byte</code> thing :</p><p><code>byte</code> is a primitive data type , 1 byte , and stores whole numbers from -128 to 127</p><p>Other params of <code>String</code> :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The identifier of the encoding used to encode the bytes in</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@code</span> value&#125;. The supported values in this implementation are</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * LATIN1</span></span><br><span class="line"><span class="comment">     * UTF16</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@implNote</span> This field is trusted by the VM, and is a subject to</span></span><br><span class="line"><span class="comment">     * constant folding if String instance is constant. Overwriting this</span></span><br><span class="line"><span class="comment">     * field after construction will cause problems.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">byte</span> coder;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** Cache the hash code for the string */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> hash; <span class="comment">// Default to 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Cache if the hash has been calculated as actually being zero, enabling</span></span><br><span class="line"><span class="comment"> * us to avoid recalculating this.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> hashIsZero; <span class="comment">// Default to false;</span></span><br></pre></td></tr></table></figure><p><code>String</code> is born with hash params !</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Returns an &#123;<span class="doctag">@code</span> Integer&#125; instance representing the specified</span></span><br><span class="line"><span class="comment">    * &#123;<span class="doctag">@code</span> int&#125; value.  If a new &#123;<span class="doctag">@code</span> Integer&#125; instance is not</span></span><br><span class="line"><span class="comment">    * required, this method should generally be used in preference to</span></span><br><span class="line"><span class="comment">    * the constructor &#123;<span class="doctag">@link</span> #Integer(int)&#125;, as this method is likely</span></span><br><span class="line"><span class="comment">    * to yield significantly better space and time performance by</span></span><br><span class="line"><span class="comment">    * caching frequently requested values.</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * This method will always cache values in the range -128 to 127,</span></span><br><span class="line"><span class="comment">    * inclusive, and may cache other values outside of this range.</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span>  i an &#123;<span class="doctag">@code</span> int&#125; value.</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> an &#123;<span class="doctag">@code</span> Integer&#125; instance representing &#123;<span class="doctag">@code</span> i&#125;.</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@since</span>  1.5</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@HotSpotIntrinsicCandidate</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Integer <span class="title">valueOf</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (i &gt;= IntegerCache.low &amp;&amp; i &lt;= IntegerCache.high)</span><br><span class="line">           <span class="keyword">return</span> IntegerCache.cache[i + (-IntegerCache.low)];</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> Integer(i);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>Also let’s look at the <code>Integer</code> thing</p><p>When <code>-128~127</code> ,</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">IntegerCache</span> </span>&#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> low = -<span class="number">128</span>;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> high;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">final</span> Integer[] cache;</span><br><span class="line">        <span class="keyword">static</span> Integer[] archivedCache;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">static</span> &#123;</span><br><span class="line">            <span class="comment">// high value may be configured by property</span></span><br><span class="line">            <span class="keyword">int</span> h = <span class="number">127</span>;</span><br><span class="line">            String integerCacheHighPropValue =</span><br><span class="line">                VM.getSavedProperty(<span class="string">"java.lang.Integer.IntegerCache.high"</span>);</span><br><span class="line">            <span class="keyword">if</span> (integerCacheHighPropValue != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    h = Math.max(parseInt(integerCacheHighPropValue), <span class="number">127</span>);</span><br><span class="line">                    <span class="comment">// Maximum array size is Integer.MAX_VALUE</span></span><br><span class="line">                    h = Math.min(h, Integer.MAX_VALUE - (-low) -<span class="number">1</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span>( NumberFormatException nfe) &#123;</span><br><span class="line">                    <span class="comment">// If the property cannot be parsed into an int, ignore it.</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            high = h;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Load IntegerCache.archivedCache from archive, if possible</span></span><br><span class="line">            VM.initializeFromArchive(IntegerCache<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            <span class="keyword">int</span> size = (high - low) + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Use the archived cache if it exists and is large enough</span></span><br><span class="line">            <span class="keyword">if</span> (archivedCache == <span class="keyword">null</span> || size &gt; archivedCache.length) &#123;</span><br><span class="line">                Integer[] c = <span class="keyword">new</span> Integer[size];</span><br><span class="line">                <span class="keyword">int</span> j = low;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; c.length; i++) &#123;</span><br><span class="line">                    c[i] = <span class="keyword">new</span> Integer(j++);</span><br><span class="line">                &#125;</span><br><span class="line">                archivedCache = c;</span><br><span class="line">            &#125;</span><br><span class="line">            cache = archivedCache;</span><br><span class="line">            <span class="comment">// range [-128, 127] must be interned (JLS7 5.1.7)</span></span><br><span class="line">            <span class="keyword">assert</span> IntegerCache.high &gt;= <span class="number">127</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="title">IntegerCache</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>So <code>Integer a = 100</code> and <code>Integer b = 100</code> is stored at the same place. If you run <code>System.out.print(a==b)</code> you will get a <code>true</code>.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Let’s inspect the source code :&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;spa
      
    
    </summary>
    
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>R语言中小数精度的问题</title>
    <link href="http://yoursite.com/2020/03/25/R%E8%AF%AD%E8%A8%80%E4%B8%AD%E5%B0%8F%E6%95%B0%E7%B2%BE%E5%BA%A6%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2020/03/25/R%E8%AF%AD%E8%A8%80%E4%B8%AD%E5%B0%8F%E6%95%B0%E7%B2%BE%E5%BA%A6%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2020-03-25T08:39:36.000Z</published>
    <updated>2020-03-25T09:19:44.884Z</updated>
    
    <content type="html"><![CDATA[<p>在R语言课上有这样一个题目：</p><blockquote><p>一个一块钱硬币，换成一分、两分、五分，一共多少种方法？</p></blockquote><p>我发现我的答案和正确答案不一样</p><p>我的程序：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">solution &lt;- <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">0</span>:<span class="number">100</span>)</span><br><span class="line">   <span class="keyword">for</span>(j <span class="keyword">in</span> <span class="number">0</span>:<span class="number">50</span>)</span><br><span class="line">      <span class="keyword">for</span>(k <span class="keyword">in</span> <span class="number">0</span>:<span class="number">20</span>)</span><br><span class="line">         <span class="keyword">if</span>((i*<span class="number">0.01</span>+j*<span class="number">0.02</span>+k*<span class="number">0.05</span>)==<span class="number">1</span>) &#123;solution=solution+<span class="number">1</span>&#125;</span><br><span class="line">        print(solution)</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">1</span>] <span class="number">527</span></span><br></pre></td></tr></table></figure><p>输出正确答案的程序：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">solution &lt;- <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">0</span>:<span class="number">100</span>)</span><br><span class="line">   <span class="keyword">for</span>(j <span class="keyword">in</span> <span class="number">0</span>:<span class="number">50</span>)</span><br><span class="line">      <span class="keyword">for</span>(k <span class="keyword">in</span> <span class="number">0</span>:<span class="number">20</span>)</span><br><span class="line">         <span class="keyword">if</span>((i*<span class="number">1</span>+j*<span class="number">2</span>+k*<span class="number">5</span>)==<span class="number">100</span>) &#123;solution=solution+<span class="number">1</span>&#125;</span><br><span class="line">        print(solution)</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">1</span>] <span class="number">541</span></span><br></pre></td></tr></table></figure><p>那么为啥小数就少了14个？我立刻怀疑是小数精度的问题，于是写了个测试程序输出相差的14个方案：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">0</span>:<span class="number">100</span>)</span><br><span class="line">   <span class="keyword">for</span>(j <span class="keyword">in</span> <span class="number">0</span>:<span class="number">50</span>)</span><br><span class="line">      <span class="keyword">for</span>(k <span class="keyword">in</span> <span class="number">0</span>:<span class="number">20</span>)</span><br><span class="line">         &#123;</span><br><span class="line">         sol1&lt;-i*<span class="number">0.01</span>+j*<span class="number">0.02</span>+k*<span class="number">0.05</span></span><br><span class="line">         sol2&lt;-i*<span class="number">1</span>+<span class="number">2</span>*j+<span class="number">5</span>*k</span><br><span class="line">         <span class="keyword">if</span>((sol1!=<span class="number">1</span>)&amp;&amp;(sol2==<span class="number">100</span>) )</span><br><span class="line">         &#123;print(c(i,j,k,sol1,sol2))&#125;</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">1</span>]   <span class="number">6</span>  <span class="number">42</span>   <span class="number">2</span>   <span class="number">1</span> <span class="number">100</span></span><br><span class="line">[<span class="number">1</span>]  <span class="number">18</span>  <span class="number">36</span>   <span class="number">2</span>   <span class="number">1</span> <span class="number">100</span></span><br><span class="line">[<span class="number">1</span>]  <span class="number">20</span>  <span class="number">35</span>   <span class="number">2</span>   <span class="number">1</span> <span class="number">100</span></span><br><span class="line">[<span class="number">1</span>]  <span class="number">30</span>  <span class="number">30</span>   <span class="number">2</span>   <span class="number">1</span> <span class="number">100</span></span><br><span class="line">[<span class="number">1</span>]  <span class="number">32</span>  <span class="number">29</span>   <span class="number">2</span>   <span class="number">1</span> <span class="number">100</span></span><br><span class="line">[<span class="number">1</span>]  <span class="number">34</span>  <span class="number">28</span>   <span class="number">2</span>   <span class="number">1</span> <span class="number">100</span></span><br><span class="line">[<span class="number">1</span>]  <span class="number">42</span>  <span class="number">24</span>   <span class="number">2</span>   <span class="number">1</span> <span class="number">100</span></span><br><span class="line">[<span class="number">1</span>]  <span class="number">48</span>  <span class="number">21</span>   <span class="number">2</span>   <span class="number">1</span> <span class="number">100</span></span><br><span class="line">[<span class="number">1</span>]  <span class="number">56</span>  <span class="number">17</span>   <span class="number">2</span>   <span class="number">1</span> <span class="number">100</span></span><br><span class="line">[<span class="number">1</span>]  <span class="number">58</span>  <span class="number">16</span>   <span class="number">2</span>   <span class="number">1</span> <span class="number">100</span></span><br><span class="line">[<span class="number">1</span>]  <span class="number">60</span>  <span class="number">15</span>   <span class="number">2</span>   <span class="number">1</span> <span class="number">100</span></span><br><span class="line">[<span class="number">1</span>]  <span class="number">70</span>  <span class="number">10</span>   <span class="number">2</span>   <span class="number">1</span> <span class="number">100</span></span><br><span class="line">[<span class="number">1</span>]  <span class="number">72</span>   <span class="number">9</span>   <span class="number">2</span>   <span class="number">1</span> <span class="number">100</span></span><br><span class="line">[<span class="number">1</span>]  <span class="number">84</span>   <span class="number">3</span>   <span class="number">2</span>   <span class="number">1</span> <span class="number">100</span></span><br></pre></td></tr></table></figure><p>拿第一行的方案举例子</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">6</span>*<span class="number">0.01</span>+<span class="number">42</span>*<span class="number">0.02</span>+<span class="number">2</span>*<span class="number">0.05</span></span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span></span><br></pre></td></tr></table></figure><p>好吧……我自己写一遍R又认为总数是1……就……更迷了……</p><p>真的是1！不信拆开来加一遍</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">6</span>*<span class="number">0.01</span></span><br><span class="line">[<span class="number">1</span>] <span class="number">0.06</span></span><br><span class="line">&gt; <span class="number">42</span>*<span class="number">0.02</span></span><br><span class="line">[<span class="number">1</span>] <span class="number">0.84</span></span><br><span class="line">&gt; <span class="number">2</span>*<span class="number">0.05</span></span><br><span class="line">[<span class="number">1</span>] <span class="number">0.1</span></span><br><span class="line">&gt; <span class="number">0.06</span>+<span class="number">0.84</span>+<span class="number">0.1</span></span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span></span><br></pre></td></tr></table></figure><p>但是我的判定条件是 <code>(i*0.01+j*0.02+k*0.05)==1</code></p><p>测试一下</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; (<span class="number">6</span>*<span class="number">0.01</span>+<span class="number">42</span>*<span class="number">0.02</span>+<span class="number">2</span>*<span class="number">0.05</span>)==<span class="number">1</span></span><br><span class="line">[<span class="number">1</span>] <span class="literal">FALSE</span></span><br></pre></td></tr></table></figure><p>行吧是 <code>FALSE</code> 🙄️</p><p>减一减 ⬇️</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">1</span>-(<span class="number">6</span>*<span class="number">0.01</span>+<span class="number">42</span>*<span class="number">0.02</span>+<span class="number">2</span>*<span class="number">0.05</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="number">1.110223e-16</span></span><br></pre></td></tr></table></figure><p>迫真不等于……</p><p>所以说，是哪一步出错了呢 🙄️</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">1</span>-<span class="number">0.06</span></span><br><span class="line">[<span class="number">1</span>] <span class="number">0.94</span></span><br><span class="line">&gt; <span class="number">1</span>-<span class="number">0.06</span>-<span class="number">0.84</span></span><br><span class="line">[<span class="number">1</span>] <span class="number">0.1</span></span><br><span class="line">&gt; <span class="number">1</span>-<span class="number">0.06</span>-<span class="number">0.84</span>-<span class="number">0.1</span></span><br><span class="line">[<span class="number">1</span>] -<span class="number">2.775558e-17</span></span><br><span class="line">&gt; <span class="number">1</span>-<span class="number">0.06</span>-<span class="number">0.94</span>-<span class="number">0.10</span></span><br><span class="line">[<span class="number">1</span>] -<span class="number">0.1</span></span><br></pre></td></tr></table></figure><p>我又想起了 <del>JS的惊(传)天(统)巨(艺)坑(能) 浮点数陷阱</del> <a href="https://github.com/camsong/blog/issues/9" target="_blank" rel="noopener">JavaScript 浮点数陷阱及解法</a> 这个issue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0.1</span>+<span class="number">0.2</span></span><br><span class="line"><span class="number">0.30000000000000004</span></span><br></pre></td></tr></table></figure><p>用 JS 测试上述计算表达式 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="number">-0.06</span><span class="number">-0.84</span><span class="number">-0.1</span></span><br><span class="line"><span class="number">-2.7755575615628914e-17</span></span><br></pre></td></tr></table></figure><p><del>不错 和 R 是一家人</del></p><p>合理怀疑 和 JS 一样用了 <a href="http://grouper.ieee.org/groups/754/" target="_blank" rel="noopener">IEEE 754</a> 这个坑货</p><hr><p>感想：</p><p>用 R 进行小数计算一定要注意，能转成整数形式一定要转为整数形式</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在R语言课上有这样一个题目：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一个一块钱硬币，换成一分、两分、五分，一共多少种方法？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我发现我的答案和正确答案不一样&lt;/p&gt;
&lt;p&gt;我的程序：&lt;/p&gt;
&lt;figure class=&quot;highl
      
    
    </summary>
    
    
    
      <category term="R" scheme="http://yoursite.com/tags/R/"/>
    
  </entry>
  
</feed>
